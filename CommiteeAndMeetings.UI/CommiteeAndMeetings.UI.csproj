<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>net6.0</TargetFramework>
		<TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
		<TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
		<IsPackable>false</IsPackable>
		<SpaRoot>ClientApp\</SpaRoot>
		<DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

		<!-- Set this to true if you enable server-side prerendering -->
		<BuildServerSideRenderer>false</BuildServerSideRenderer>
		<UserSecretsId>785aac9f-71a2-4606-8be5-59584bdbc96a</UserSecretsId>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="AutoMapper" Version="10.1.1" />
		<PackageReference Include="Hangfire.AspNetCore" Version="1.8.0" />
		<PackageReference Include="Hangfire.Core" Version="1.8.0" />
		<PackageReference Include="Hangfire.SqlServer" Version="1.8.0" />
		<PackageReference Include="Microsoft.AspNetCore.Antiforgery" Version="2.2.0" />
		<PackageReference Include="Microsoft.AspNetCore.Authentication" Version="2.2.0" />
		<PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="2.2.0" />
		<PackageReference Include="Microsoft.AspNetCore.Authentication.Negotiate" Version="6.0.8" />
		<PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="3.1.0" />
		<PackageReference Include="Microsoft.AspNetCore.Session" Version="2.2.0" />
		<PackageReference Include="Microsoft.AspNetCore.SpaServices" Version="3.1.0" />
		<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.0" />
		<PackageReference Include="Microsoft.EntityFrameworkCore" Version="5.0.5" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Proxies" Version="5.0.5" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="5.0.5" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="5.0.5" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="5.0.5" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="5.0.5">
		  <PrivateAssets>all</PrivateAssets>
		  <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.Extensions.DependencyModel" Version="6.0.0" />
		<PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="5.0.1" />
		<PackageReference Include="NSwag.AspNetCore" Version="11.18.3" />
		<PackageReference Include="NSwag.CodeGeneration" Version="11.18.3" />
		<PackageReference Include="NSwag.CodeGeneration.TypeScript" Version="11.18.3" />
		<PackageReference Include="Swashbuckle.AspNetCore" Version="5.0.0-rc5" />
		<PackageReference Include="Swashbuckle.AspNetCore.Annotations" Version="5.0.0-rc5" />
		<PackageReference Include="Swashbuckle.AspNetCore.Newtonsoft" Version="5.0.0-rc5" />
		<PackageReference Include="Swashbuckle.AspNetCore.Swagger" Version="5.0.0-rc5" />
		<PackageReference Include="Swashbuckle.AspNetCore.SwaggerGen" Version="5.0.0-rc5" />
	</ItemGroup>

	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Content Remove="$(SpaRoot)**" />
		<None Remove="$(SpaRoot)**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
	</ItemGroup>

	<ItemGroup>
	  <Content Remove="appsettings.Development.json" />
	  <Content Remove="appsettings.json" />
	</ItemGroup>

	<ItemGroup>
	  <EmbeddedResource Include="appsettings.json">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </EmbeddedResource>
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\CommiteeAndMeetings.Service\CommiteeAndMeetings.Service.csproj" />
		<ProjectReference Include="..\GhostFactory\GhostFactory.csproj" />
		<ProjectReference Include="..\HelperServices\HelperServices.csproj" />
	</ItemGroup>

	<ItemGroup>
	  <Folder Include="ClientApp\src\app\core\_services\swagger\" />
	</ItemGroup>

	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
	</Target>

	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
			<DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>%(DistFiles.Identity)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>

</Project>
