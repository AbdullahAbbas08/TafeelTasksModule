diff --git a/node_modules/ngx-hijri-gregorian-datepicker/__ivy_ngcc__/fesm2015/ngx-hijri-gregorian-datepicker.js b/node_modules/ngx-hijri-gregorian-datepicker/__ivy_ngcc__/fesm2015/ngx-hijri-gregorian-datepicker.js
new file mode 100644
index 0000000..73c38cc
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/__ivy_ngcc__/fesm2015/ngx-hijri-gregorian-datepicker.js
@@ -0,0 +1,768 @@
+import * as momentjs from 'moment';
+import * as moment_ from 'moment-hijri';
+import { NgbDateParserFormatter, NgbDate, NgbDatepickerI18n, NgbCalendar, NgbCalendarIslamicUmalqura, NgbModule } from '@ng-bootstrap/ng-bootstrap';
+import { DatePipe, CommonModule } from '@angular/common';
+import { Injectable, Directive, Optional, SkipSelf, Component, ViewEncapsulation, Input, Output, EventEmitter, ViewChild, NgModule, defineInjectable } from '@angular/core';
+import { ControlContainer, NgForm, ReactiveFormsModule, FormsModule } from '@angular/forms';
+
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/hijri-gregorian-datepicker/consts.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+import * as ɵngcc0 from '@angular/core';
+import * as ɵngcc1 from '@ng-bootstrap/ng-bootstrap';
+import * as ɵngcc2 from '@angular/common';
+import * as ɵngcc3 from '@angular/forms';
+
+const _c0 = ["d"];
+function HijriGregorianDatepickerComponent_label_1_Template(rf, ctx) { if (rf & 1) {
+    ɵngcc0.ɵɵelementStart(0, "label", 8);
+    ɵngcc0.ɵɵtext(1);
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    const ctx_r0 = ɵngcc0.ɵɵnextContext();
+    ɵngcc0.ɵɵadvance(1);
+    ɵngcc0.ɵɵtextInterpolate1("", ctx_r0.label, " ");
+} }
+function HijriGregorianDatepickerComponent_input_3_Template(rf, ctx) { if (rf & 1) {
+    const _r7 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "input", 9, 10);
+    ɵngcc0.ɵɵlistener("ngModelChange", function HijriGregorianDatepickerComponent_input_3_Template_input_ngModelChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.selectedDate = $event; })("click", function HijriGregorianDatepickerComponent_input_3_Template_input_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r7); const _r5 = ɵngcc0.ɵɵreference(1); return _r5.toggle(); })("dateSelect", function HijriGregorianDatepickerComponent_input_3_Template_input_dateSelect_0_listener() { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.dateSelected(); });
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    const ctx_r1 = ɵngcc0.ɵɵnextContext();
+    const _r2 = ɵngcc0.ɵɵreference(5);
+    ɵngcc0.ɵɵproperty("placeholder", ctx_r1.placeHolder ? ctx_r1.placeHolder : "d/M/yyyy")("name", ctx_r1.label)("ngModel", ctx_r1.selectedDate)("readonly", ctx_r1.readonly)("minDate", ctx_r1.minGreg)("maxDate", ctx_r1.maxGreg)("required", ctx_r1.isRequired)("disabled", ctx_r1.disabled)("footerTemplate", _r2);
+} }
+function HijriGregorianDatepickerComponent_ng_template_4_Template(rf, ctx) { if (rf & 1) {
+    const _r11 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelement(0, "hr", 11);
+    ɵngcc0.ɵɵelementStart(1, "button", 12);
+    ɵngcc0.ɵɵlistener("click", function HijriGregorianDatepickerComponent_ng_template_4_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r11); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.close(); });
+    ɵngcc0.ɵɵtext(2, "Close");
+    ɵngcc0.ɵɵelementEnd();
+    ɵngcc0.ɵɵelementStart(3, "button", 13);
+    ɵngcc0.ɵɵlistener("click", function HijriGregorianDatepickerComponent_ng_template_4_Template_button_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r11); const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.clear(); });
+    ɵngcc0.ɵɵtext(4, "Clear");
+    ɵngcc0.ɵɵelementEnd();
+} }
+function HijriGregorianDatepickerComponent_hijri_date_picker_6_Template(rf, ctx) { if (rf & 1) {
+    const _r14 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "hijri-date-picker", 14);
+    ɵngcc0.ɵɵlistener("selectedDateChange", function HijriGregorianDatepickerComponent_hijri_date_picker_6_Template_hijri_date_picker_selectedDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.selectedDate = $event; })("selectedDateChange", function HijriGregorianDatepickerComponent_hijri_date_picker_6_Template_hijri_date_picker_selectedDateChange_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15.dateSelected(); });
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    const ctx_r4 = ɵngcc0.ɵɵnextContext();
+    ɵngcc0.ɵɵproperty("selectedDate", ctx_r4.selectedDate)("readonly", ctx_r4.readonly)("min", ctx_r4.minHijri)("max", ctx_r4.maxHijri)("name", ctx_r4.label)("isRequired", ctx_r4.isRequired)("placeHolder", ctx_r4.placeHolder)("disabled", ctx_r4.disabled);
+} }
+function HijriDatepickerComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {
+    const _r4 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelement(0, "hr", 4);
+    ɵngcc0.ɵɵelementStart(1, "button", 5);
+    ɵngcc0.ɵɵlistener("click", function HijriDatepickerComponent_ng_template_3_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r4); ɵngcc0.ɵɵnextContext(); const _r0 = ɵngcc0.ɵɵreference(2); return _r0.close(); });
+    ɵngcc0.ɵɵtext(2, "Close");
+    ɵngcc0.ɵɵelementEnd();
+    ɵngcc0.ɵɵelementStart(3, "button", 6);
+    ɵngcc0.ɵɵlistener("click", function HijriDatepickerComponent_ng_template_3_Template_button_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.clear(); });
+    ɵngcc0.ɵɵtext(4, "Clear");
+    ɵngcc0.ɵɵelementEnd();
+} }
+class DateType {
+}
+DateType.Hijri = 1;
+DateType.Gregorian = 2;
+
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/hijri-gregorian-datepicker/date-formatter.service.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+/** @type {?} */
+const moment = momentjs;
+/** @type {?} */
+const momentHijri = moment_;
+class DateFormatterService {
+    /**
+     * @param {?} parserFormatter
+     */
+    constructor(parserFormatter) {
+        this.parserFormatter = parserFormatter;
+    }
+    /**
+     * @param {?} date
+     * @return {?}
+     */
+    ToString(date) {
+        /** @type {?} */
+        const dateStr = this.parserFormatter.format(date);
+        return dateStr;
+    }
+    /**
+     * @param {?} hijriDate
+     * @param {?} format
+     * @return {?}
+     */
+    ToHijriDateStruct(hijriDate, format) {
+        /** @type {?} */
+        const hijriMomentDate = momentHijri(hijriDate, format);
+        // Parse a Hijri date based on format.
+        /** @type {?} */
+        const day = hijriMomentDate.iDate();
+        /** @type {?} */
+        const month = +hijriMomentDate.iMonth() + 1;
+        /** @type {?} */
+        const year = hijriMomentDate.iYear();
+        /** @type {?} */
+        const ngDate = new NgbDate(+year, month, +day);
+        return ngDate;
+    }
+    /**
+     * @param {?} gregorianDate
+     * @param {?} format
+     * @return {?}
+     */
+    ToGregorianDateStruct(gregorianDate, format) {
+        /** @type {?} */
+        const momentDate = moment(gregorianDate, format);
+        // Parse a Gregorian date based on format.
+        /** @type {?} */
+        const day = momentDate.date();
+        /** @type {?} */
+        const month = +momentDate.month() + 1;
+        /** @type {?} */
+        const year = momentDate.year();
+        /** @type {?} */
+        const ngDate = new NgbDate(+year, +month, +day);
+        return ngDate;
+    }
+    /**
+     * @param {?} date
+     * @return {?}
+     */
+    ToHijri(date) {
+        if (!date) {
+            return null;
+        }
+        /** @type {?} */
+        const dateStr = this.ToString(date);
+        /** @type {?} */
+        const momentDate = momentHijri(dateStr, 'D/M/YYYY');
+        /** @type {?} */
+        const day = momentDate.iDate();
+        /** @type {?} */
+        const month = +momentDate.iMonth() + 1;
+        /** @type {?} */
+        const year = momentDate.iYear();
+        /** @type {?} */
+        const ngDate = new NgbDate(+year, month, +day);
+        return ngDate;
+    }
+    /**
+     * @param {?} date
+     * @return {?}
+     */
+    ToGregorian(date) {
+        if (!date) {
+            return null;
+        }
+        /** @type {?} */
+        const dateStr = this.ToString(date);
+        /** @type {?} */
+        const momentDate = momentHijri(dateStr, 'iD/iM/iYYYY');
+        /** @type {?} */
+        const day = momentDate.locale('en').format('D');
+        /** @type {?} */
+        const month = momentDate.locale('en').format('M');
+        /** @type {?} */
+        const year = momentDate.locale('en').format('Y');
+        /** @type {?} */
+        const ngDate = new NgbDate(+year, +month, +day);
+        return ngDate;
+    }
+    /**
+     * @return {?}
+     */
+    GetTodayHijri() {
+        /** @type {?} */
+        const todayHijri = momentHijri().locale('en').format('iYYYY/iM/iD');
+        return this.ToHijriDateStruct(todayHijri, 'iYYYY/iM/iD');
+    }
+    /**
+     * @return {?}
+     */
+    GetTodayGregorian() {
+        /** @type {?} */
+        const todayGregorian = moment().locale('en').format('YYYY/M/D');
+        return this.ToGregorianDateStruct(todayGregorian, 'YYYY/M/D');
+    }
+}
+DateFormatterService.ɵfac = function DateFormatterService_Factory(t) { return new (t || DateFormatterService)(ɵngcc0.ɵɵinject(ɵngcc1.NgbDateParserFormatter)); };
+DateFormatterService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: DateFormatterService, factory: DateFormatterService.ɵfac });
+/** @nocollapse */
+DateFormatterService.ctorParameters = () => [
+    { type: NgbDateParserFormatter }
+];
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DateFormatterService, [{
+        type: Injectable
+    }], function () { return [{ type: ɵngcc1.NgbDateParserFormatter }]; }, null); })();
+
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/ngx-hijri-gregorian-datepicker.service.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+class NgxHijriGregorianDatepickerService {
+    constructor() { }
+}
+NgxHijriGregorianDatepickerService.ɵfac = function NgxHijriGregorianDatepickerService_Factory(t) { return new (t || NgxHijriGregorianDatepickerService)(); };
+NgxHijriGregorianDatepickerService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgxHijriGregorianDatepickerService, factory: NgxHijriGregorianDatepickerService.ɵfac, providedIn: 'root' });
+/** @nocollapse */
+NgxHijriGregorianDatepickerService.ctorParameters = () => [];
+/** @nocollapse */ NgxHijriGregorianDatepickerService.ngInjectableDef = defineInjectable({ factory: function NgxHijriGregorianDatepickerService_Factory() { return new NgxHijriGregorianDatepickerService(); }, token: NgxHijriGregorianDatepickerService, providedIn: "root" });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxHijriGregorianDatepickerService, [{
+        type: Injectable,
+        args: [{
+                providedIn: 'root'
+            }]
+    }], function () { return []; }, null); })();
+
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/ngx-hijri-gregorian-datepicker.component.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+class NgxHijriGregorianDatepickerComponent {
+    constructor() { }
+    /**
+     * @return {?}
+     */
+    ngOnInit() {
+    }
+}
+NgxHijriGregorianDatepickerComponent.ɵfac = function NgxHijriGregorianDatepickerComponent_Factory(t) { return new (t || NgxHijriGregorianDatepickerComponent)(); };
+NgxHijriGregorianDatepickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxHijriGregorianDatepickerComponent, selectors: [["lib-ngx-hijri-gregorian-datepicker"]], decls: 2, vars: 0, template: function NgxHijriGregorianDatepickerComponent_Template(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵelementStart(0, "p");
+        ɵngcc0.ɵɵtext(1, " ngx-hijri-gregorian-datepicker works! ");
+        ɵngcc0.ɵɵelementEnd();
+    } }, encapsulation: 2 });
+/** @nocollapse */
+NgxHijriGregorianDatepickerComponent.ctorParameters = () => [];
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxHijriGregorianDatepickerComponent, [{
+        type: Component,
+        args: [{
+                selector: 'lib-ngx-hijri-gregorian-datepicker',
+                template: `
+    <p>
+      ngx-hijri-gregorian-datepicker works!
+    </p>
+  `
+            }]
+    }], function () { return []; }, null); })();
+
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+/** @type {?} */
+const moment$1 = momentjs;
+/** @type {?} */
+const momentHijri$1 = moment_;
+class HijriGregorianDatepickerComponent {
+    /**
+     * @param {?} dateFormatterService
+     */
+    constructor(dateFormatterService) {
+        this.dateFormatterService = dateFormatterService;
+        this.selectedDateChange = new EventEmitter();
+        this.showLabel = true;
+        this.readonly = false;
+        this.isRequired = false;
+        this.disabled = false;
+    }
+    /**
+     * @return {?}
+     */
+    get DateType() {
+        return DateType;
+    }
+    /**
+     * @return {?}
+     */
+    ngOnInit() {
+        if (!this.selectedDateType) {
+            this.selectedDateType = DateType.Hijri;
+        }
+    }
+    /**
+     * @return {?}
+     */
+    close() {
+        this.datePicker.close();
+    }
+    /**
+     * @return {?}
+     */
+    clear() {
+        this.selectedDate = undefined;
+        this.close();
+        this.selectedDateChange.emit(null);
+    }
+    /**
+     * @return {?}
+     */
+    getSelectedDate() {
+        /** @type {?} */
+        let formattedDate = this.dateFormatterService.ToString(this.selectedDate);
+        if (this.selectedDateType == DateType.Hijri) {
+            return momentHijri$1(formattedDate, 'iD/iM/iYYYY').locale('en').format();
+        }
+        if (this.selectedDateType == DateType.Gregorian) {
+            return moment$1(formattedDate, 'D/M/YYYY').locale('en').format();
+        }
+    }
+    /**
+     * @return {?}
+     */
+    dateSelected() {
+        this.selectedDateChange.emit(this.selectedDate);
+    }
+    /**
+     * @return {?}
+     */
+    hijriClick() {
+        if (this.selectedDateType == DateType.Hijri) {
+            return;
+        }
+        this.selectedDateType = DateType.Hijri;
+        //to hijri
+        this.selectedDate = this.dateFormatterService.ToHijri(this.selectedDate);
+        this.selectedDateChange.emit(this.selectedDate);
+    }
+    /**
+     * @return {?}
+     */
+    gregClick() {
+        if (this.selectedDateType == DateType.Gregorian) {
+            return;
+        }
+        this.selectedDateType = DateType.Gregorian;
+        //to Gregorian
+        this.selectedDate = this.dateFormatterService.ToGregorian(this.selectedDate);
+        this.selectedDateChange.emit(this.selectedDate);
+    }
+}
+HijriGregorianDatepickerComponent.ɵfac = function HijriGregorianDatepickerComponent_Factory(t) { return new (t || HijriGregorianDatepickerComponent)(ɵngcc0.ɵɵdirectiveInject(DateFormatterService)); };
+HijriGregorianDatepickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: HijriGregorianDatepickerComponent, selectors: [["hijri-gregorian-datepicker"]], viewQuery: function HijriGregorianDatepickerComponent_Query(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵviewQuery(_c0, true);
+    } if (rf & 2) {
+        var _t;
+        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.datePicker = _t.first);
+    } }, inputs: { showLabel: "showLabel", readonly: "readonly", isRequired: "isRequired", disabled: "disabled", selectedDateType: "selectedDateType", selectedDate: "selectedDate", label: "label", minHijri: "minHijri", maxHijri: "maxHijri", minGreg: "minGreg", maxGreg: "maxGreg", hijriLabel: "hijriLabel", GregLabel: "GregLabel", placeHolder: "placeHolder" }, outputs: { selectedDateChange: "selectedDateChange" }, decls: 12, vars: 13, consts: [["provideParentForm", "", 1, "form-group"], ["class", "requiredInput", "for", "input-birth-Date", 4, "ngIf"], [1, "input-group"], ["class", "form-control", "ngbDatepicker", "", "autocomplete", "off", 3, "placeholder", "name", "ngModel", "readonly", "minDate", "maxDate", "required", "disabled", "footerTemplate", "ngModelChange", "click", "dateSelect", 4, "ngIf"], ["footerTemplate", ""], ["style", "flex: 1 1 auto;", 3, "selectedDate", "readonly", "min", "max", "name", "isRequired", "placeHolder", "disabled", "selectedDateChange", 4, "ngIf"], [1, "input-group-append"], ["type", "button", 3, "disabled", "click"], ["for", "input-birth-Date", 1, "requiredInput"], ["ngbDatepicker", "", "autocomplete", "off", 1, "form-control", 3, "placeholder", "name", "ngModel", "readonly", "minDate", "maxDate", "required", "disabled", "footerTemplate", "ngModelChange", "click", "dateSelect"], ["d", "ngbDatepicker"], [1, "my-0"], ["type", "button", 1, "btn", "btn-secondary", "btn-sm", "m-2", "float-right", 3, "click"], ["type", "button", 1, "btn", "btn-primary", "btn-sm", "m-2", "float-left", 3, "click"], [2, "flex", "1 1 auto", 3, "selectedDate", "readonly", "min", "max", "name", "isRequired", "placeHolder", "disabled", "selectedDateChange"]], template: function HijriGregorianDatepickerComponent_Template(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵelementStart(0, "div", 0);
+        ɵngcc0.ɵɵtemplate(1, HijriGregorianDatepickerComponent_label_1_Template, 2, 1, "label", 1);
+        ɵngcc0.ɵɵelementStart(2, "div", 2);
+        ɵngcc0.ɵɵtemplate(3, HijriGregorianDatepickerComponent_input_3_Template, 2, 9, "input", 3);
+        ɵngcc0.ɵɵtemplate(4, HijriGregorianDatepickerComponent_ng_template_4_Template, 5, 0, "ng-template", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);
+        ɵngcc0.ɵɵtemplate(6, HijriGregorianDatepickerComponent_hijri_date_picker_6_Template, 1, 8, "hijri-date-picker", 5);
+        ɵngcc0.ɵɵelementStart(7, "div", 6);
+        ɵngcc0.ɵɵelementStart(8, "button", 7);
+        ɵngcc0.ɵɵlistener("click", function HijriGregorianDatepickerComponent_Template_button_click_8_listener() { return ctx.hijriClick(); });
+        ɵngcc0.ɵɵtext(9);
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵelementStart(10, "button", 7);
+        ɵngcc0.ɵɵlistener("click", function HijriGregorianDatepickerComponent_Template_button_click_10_listener() { return ctx.gregClick(); });
+        ɵngcc0.ɵɵtext(11);
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵelementEnd();
+    } if (rf & 2) {
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.showLabel);
+        ɵngcc0.ɵɵadvance(2);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.selectedDateType == ctx.DateType.Gregorian);
+        ɵngcc0.ɵɵadvance(3);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.selectedDateType == ctx.DateType.Hijri);
+        ɵngcc0.ɵɵadvance(2);
+        ɵngcc0.ɵɵclassMapInterpolate1("btn btn-sm ", ctx.selectedDateType == ctx.DateType.Hijri ? "btn-info focus active" : "btn-outline-info", "");
+        ɵngcc0.ɵɵproperty("disabled", ctx.disabled);
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.hijriLabel ? ctx.hijriLabel : "Hijri", " ");
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵclassMapInterpolate1("btn btn-sm ", ctx.selectedDateType == ctx.DateType.Gregorian ? "btn-info focus active" : "btn-outline-info", "");
+        ɵngcc0.ɵɵproperty("disabled", ctx.disabled);
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.GregLabel ? ctx.GregLabel : "Gregorian", " ");
+    } }, directives: function () { return [ProvideParentFormDirective, ɵngcc2.NgIf, ɵngcc1.NgbInputDatepicker, ɵngcc3.DefaultValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.NgModel, ɵngcc3.RequiredValidator, HijriDatepickerComponent]; }, encapsulation: 2 });
+/** @nocollapse */
+HijriGregorianDatepickerComponent.ctorParameters = () => [
+    { type: DateFormatterService }
+];
+HijriGregorianDatepickerComponent.propDecorators = {
+    datePicker: [{ type: ViewChild, args: ['d',] }],
+    selectedDateType: [{ type: Input }],
+    selectedDate: [{ type: Input }],
+    selectedDateChange: [{ type: Output }],
+    label: [{ type: Input }],
+    showLabel: [{ type: Input }],
+    readonly: [{ type: Input }],
+    isRequired: [{ type: Input }],
+    disabled: [{ type: Input }],
+    minHijri: [{ type: Input }],
+    maxHijri: [{ type: Input }],
+    minGreg: [{ type: Input }],
+    maxGreg: [{ type: Input }],
+    hijriLabel: [{ type: Input }],
+    GregLabel: [{ type: Input }],
+    placeHolder: [{ type: Input }]
+};
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HijriGregorianDatepickerComponent, [{
+        type: Component,
+        args: [{
+                selector: 'hijri-gregorian-datepicker',
+                template: "\n    <div class=\"form-group\" provideParentForm>\n      <label class=\"requiredInput\" *ngIf=\"showLabel\" for=\"input-birth-Date\">{{ label }} </label>\n\n      <div class=\"input-group\">\n\n        <input  class=\"form-control\"\n                  [placeholder]=\"placeHolder ? placeHolder : 'd/M/yyyy'\"\n                  [name]=\"label\"\n                  *ngIf=\"selectedDateType == DateType.Gregorian\"\n                  [(ngModel)]=\"selectedDate\"\n                  ngbDatepicker (click)=\"d.toggle()\"\n                  (dateSelect)=\"dateSelected()\"\n                  autocomplete=\"off\"\n                  [readonly]=\"readonly\"\n                  [minDate]=\"minGreg\"\n                  [maxDate]=\"maxGreg\"\n                  [required]=\"isRequired\"\n                  [disabled]=\"disabled\"\n                  [footerTemplate]=\"footerTemplate\"\n                  #d=\"ngbDatepicker\">\n\n          <ng-template #footerTemplate>\n            <hr class=\"my-0\">\n            <button class=\"btn btn-secondary btn-sm m-2 float-right\" type=\"button\" (click)=\"close()\">Close</button>\n            <button class=\"btn btn-primary btn-sm m-2 float-left\" type=\"button\" (click)=\"clear()\">Clear</button>\n          </ng-template>\n\n          <hijri-date-picker *ngIf=\"selectedDateType == DateType.Hijri\"\n                             [(selectedDate)]=\"selectedDate\"\n                             (selectedDateChange)=\"dateSelected()\"\n                             [readonly]=\"readonly\"\n                             [min]=\"minHijri\" [max]=\"maxHijri\"\n                             style=\"flex: 1 1 auto;\"\n                             [name]=\"label\"\n                             [isRequired]=\"isRequired\"\n                             [placeHolder]=\"placeHolder\"\n                             [disabled]=\"disabled\">\n          </hijri-date-picker>\n\n          <div class=\"input-group-append\">\n                  <button class=\"btn btn-sm {{selectedDateType == DateType.Hijri ? 'btn-info focus active' :  'btn-outline-info'}}\" (click)=\"hijriClick()\"  [disabled]=\"disabled\" type=\"button\">\n                     {{hijriLabel ? hijriLabel : 'Hijri' }}\n                  </button>\n                  <button class=\"btn btn-sm {{selectedDateType == DateType.Gregorian ? 'btn-info focus active' :  'btn-outline-info'}}\" (click)=\"gregClick()\" [disabled]=\"disabled\" type=\"button\">\n                      {{GregLabel ? GregLabel : 'Gregorian' }}\n                  </button>\n           </div>\n\n      </div>\n  </div>\n"
+            }]
+    }], function () { return [{ type: DateFormatterService }]; }, { selectedDateChange: [{
+            type: Output
+        }], showLabel: [{
+            type: Input
+        }], readonly: [{
+            type: Input
+        }], isRequired: [{
+            type: Input
+        }], disabled: [{
+            type: Input
+        }], selectedDateType: [{
+            type: Input
+        }], selectedDate: [{
+            type: Input
+        }], datePicker: [{
+            type: ViewChild,
+            args: ['d']
+        }], label: [{
+            type: Input
+        }], minHijri: [{
+            type: Input
+        }], maxHijri: [{
+            type: Input
+        }], minGreg: [{
+            type: Input
+        }], maxGreg: [{
+            type: Input
+        }], hijriLabel: [{
+            type: Input
+        }], GregLabel: [{
+            type: Input
+        }], placeHolder: [{
+            type: Input
+        }] }); })();
+
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/hijri-gregorian-datepicker/IslamicI18n.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+/** @type {?} */
+const WEEKDAYS = ['إ', 'ث', 'ر', 'خ', 'ج', 'س', 'ح'];
+/** @type {?} */
+const MONTHS = ['محرم', 'صفر', 'ربيع الأول', 'ربيع الآخر', 'جمادى الأولى', 'جمادى الآخرة', 'رجب', 'شعبان', 'رمضان', 'شوال',
+    'ذو القعدة', 'ذو الحجة'];
+class IslamicI18n extends NgbDatepickerI18n {
+    /**
+     * @param {?} weekday
+     * @return {?}
+     */
+    getWeekdayShortName(weekday) {
+        return WEEKDAYS[weekday - 1];
+    }
+    /**
+     * @param {?} month
+     * @return {?}
+     */
+    getMonthShortName(month) {
+        return MONTHS[month - 1];
+    }
+    /**
+     * @param {?} month
+     * @return {?}
+     */
+    getMonthFullName(month) {
+        return MONTHS[month - 1];
+    }
+    /**
+     * @param {?} date
+     * @return {?}
+     */
+    getDayAriaLabel(date) {
+        return `${date.day}-${date.month}-${date.year}`;
+    }
+}
+IslamicI18n.ɵfac = function IslamicI18n_Factory(t) { return ɵIslamicI18n_BaseFactory(t || IslamicI18n); };
+IslamicI18n.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: IslamicI18n, factory: IslamicI18n.ɵfac });
+const ɵIslamicI18n_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(IslamicI18n);
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IslamicI18n, [{
+        type: Injectable
+    }], null, null); })();
+
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+class HijriDatepickerComponent {
+    constructor() {
+        this.selectedDateChange = new EventEmitter();
+        this.readonly = false;
+        this.isRequired = false;
+        this.disabled = false;
+    }
+    /**
+     * @return {?}
+     */
+    changeDate() {
+        this.selectedDateChange.emit(this.selectedDate);
+    }
+    /**
+     * @return {?}
+     */
+    onBlur() {
+        if (!this.selectedDate) {
+            this.selectedDateChange.emit(null);
+        }
+    }
+    /**
+     * @return {?}
+     */
+    clear() {
+        this.selectedDate = undefined;
+        this.datePicker.close();
+        this.selectedDateChange.emit(null);
+    }
+}
+HijriDatepickerComponent.ɵfac = function HijriDatepickerComponent_Factory(t) { return new (t || HijriDatepickerComponent)(); };
+HijriDatepickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: HijriDatepickerComponent, selectors: [["hijri-date-picker"]], viewQuery: function HijriDatepickerComponent_Query(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵviewQuery(_c0, true);
+    } if (rf & 2) {
+        var _t;
+        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.datePicker = _t.first);
+    } }, inputs: { readonly: "readonly", isRequired: "isRequired", disabled: "disabled", selectedDate: "selectedDate", min: "min", max: "max", name: "name", placeHolder: "placeHolder" }, outputs: { selectedDateChange: "selectedDateChange" }, features: [ɵngcc0.ɵɵProvidersFeature([
+            { provide: NgbCalendar, useClass: NgbCalendarIslamicUmalqura },
+            { provide: NgbDatepickerI18n, useClass: IslamicI18n }
+        ])], decls: 5, vars: 9, consts: [["provideParentForm", ""], ["ngbDatepicker", "", 1, "form-control", "hijriInput", 3, "ngModel", "placeholder", "readonly", "minDate", "maxDate", "required", "name", "footerTemplate", "disabled", "ngModelChange", "click", "dateSelect", "blur"], ["d", "ngbDatepicker"], ["footerTemplate", ""], [1, "my-0"], ["type", "button", 1, "btn", "btn-secondary", "btn-sm", "m-2", "float-right", 3, "click"], ["type", "button", 1, "btn", "btn-primary", "btn-sm", "m-2", "float-left", 3, "click"]], template: function HijriDatepickerComponent_Template(rf, ctx) { if (rf & 1) {
+        const _r6 = ɵngcc0.ɵɵgetCurrentView();
+        ɵngcc0.ɵɵelementStart(0, "div", 0);
+        ɵngcc0.ɵɵelementStart(1, "input", 1, 2);
+        ɵngcc0.ɵɵlistener("ngModelChange", function HijriDatepickerComponent_Template_input_ngModelChange_1_listener($event) { return ctx.selectedDate = $event; })("click", function HijriDatepickerComponent_Template_input_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r6); const _r0 = ɵngcc0.ɵɵreference(2); return _r0.toggle(); })("dateSelect", function HijriDatepickerComponent_Template_input_dateSelect_1_listener() { return ctx.changeDate(); })("blur", function HijriDatepickerComponent_Template_input_blur_1_listener() { return ctx.onBlur(); });
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵtemplate(3, HijriDatepickerComponent_ng_template_3_Template, 5, 0, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
+    } if (rf & 2) {
+        const _r1 = ɵngcc0.ɵɵreference(4);
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵproperty("ngModel", ctx.selectedDate)("placeholder", ctx.placeHolder ? ctx.placeHolder : "d/M/yyyy")("readonly", ctx.readonly)("minDate", ctx.min)("maxDate", ctx.max)("required", ctx.isRequired)("name", ctx.name)("footerTemplate", _r1)("disabled", ctx.disabled);
+    } }, directives: function () { return [ProvideParentFormDirective, ɵngcc1.NgbInputDatepicker, ɵngcc3.DefaultValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.NgModel, ɵngcc3.RequiredValidator]; }, styles: [".hijriInput{border-top-left-radius:0;border-bottom-left-radius:0}.ngb-dp-weekday{width:2.1rem!important}"], encapsulation: 2 });
+/** @nocollapse */
+HijriDatepickerComponent.ctorParameters = () => [];
+HijriDatepickerComponent.propDecorators = {
+    datePicker: [{ type: ViewChild, args: ['d',] }],
+    selectedDate: [{ type: Input }],
+    selectedDateChange: [{ type: Output }],
+    readonly: [{ type: Input }],
+    isRequired: [{ type: Input }],
+    disabled: [{ type: Input }],
+    min: [{ type: Input }],
+    max: [{ type: Input }],
+    name: [{ type: Input }],
+    placeHolder: [{ type: Input }]
+};
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HijriDatepickerComponent, [{
+        type: Component,
+        args: [{
+                selector: 'hijri-date-picker',
+                template: "<div provideParentForm>\n<input\n    class=\"form-control hijriInput\"\n    [(ngModel)]=\"selectedDate\"\n    [placeholder]=\"placeHolder ?placeHolder : 'd/M/yyyy'\"\n    ngbDatepicker\n    (click)=\"d.toggle()\"\n    (dateSelect)=\"changeDate()\"\n    #d=\"ngbDatepicker\"\n    [readonly]=\"readonly\"\n    [minDate]=\"min\"\n    [maxDate]=\"max\"\n    [required]=\"isRequired\"\n    [name]=\"name\"\n    (blur)=\"onBlur()\"\n    [footerTemplate]=\"footerTemplate\"\n    [disabled]=\"disabled\" />\n</div>\n\n\n<ng-template #footerTemplate>\n  <hr class=\"my-0\">\n  <button class=\"btn btn-secondary btn-sm m-2 float-right\" type=\"button\" (click)=\"d.close()\">Close</button>\n  <button class=\"btn btn-primary btn-sm m-2 float-left\" type=\"button\" (click)=\"clear()\">Clear</button>\n</ng-template>\n",
+                providers: [
+                    { provide: NgbCalendar, useClass: NgbCalendarIslamicUmalqura },
+                    { provide: NgbDatepickerI18n, useClass: IslamicI18n }
+                ],
+                encapsulation: ViewEncapsulation.None,
+                styles: [".hijriInput{border-top-left-radius:0;border-bottom-left-radius:0}.ngb-dp-weekday{width:2.1rem!important}"]
+            }]
+    }], function () { return []; }, { selectedDateChange: [{
+            type: Output
+        }], readonly: [{
+            type: Input
+        }], isRequired: [{
+            type: Input
+        }], disabled: [{
+            type: Input
+        }], selectedDate: [{
+            type: Input
+        }], datePicker: [{
+            type: ViewChild,
+            args: ['d']
+        }], min: [{
+            type: Input
+        }], max: [{
+            type: Input
+        }], name: [{
+            type: Input
+        }], placeHolder: [{
+            type: Input
+        }] }); })();
+
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+class CustomNgbDateParserFormatter extends NgbDateParserFormatter {
+    constructor() {
+        super();
+        this.datePipe = new DatePipe('en-US');
+    }
+    /**
+     * @param {?} date
+     * @return {?}
+     */
+    format(date) {
+        if (date === null) {
+            return '';
+        }
+        try {
+            return this.datePipe.transform(new Date(date.year, date.month - 1, date.day), 'd/M/yyyy');
+        }
+        catch (e) {
+            return '';
+        }
+    }
+    /**
+     * @param {?} value
+     * @return {?}
+     */
+    parse(value) {
+        /** @type {?} */
+        let returnVal;
+        if (!value) {
+            returnVal = null;
+        }
+        else {
+            try {
+                /** @type {?} */
+                let dateParts = this.datePipe.transform(value, 'M-d-y').split('-');
+                returnVal = { year: parseInt(dateParts[2]), month: parseInt(dateParts[0]), day: parseInt(dateParts[1]) };
+            }
+            catch (e) {
+                returnVal = null;
+            }
+        }
+        return returnVal;
+    }
+}
+CustomNgbDateParserFormatter.ɵfac = function CustomNgbDateParserFormatter_Factory(t) { return new (t || CustomNgbDateParserFormatter)(); };
+CustomNgbDateParserFormatter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: CustomNgbDateParserFormatter, factory: CustomNgbDateParserFormatter.ɵfac });
+/** @nocollapse */
+CustomNgbDateParserFormatter.ctorParameters = () => [];
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CustomNgbDateParserFormatter, [{
+        type: Injectable
+    }], function () { return []; }, null); })();
+
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/hijri-gregorian-datepicker/provide-parent-form.directive.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+/**
+ * @param {?} form
+ * @return {?}
+ */
+function test(form) {
+    return form;
+}
+class ProvideParentFormDirective {
+    constructor() { }
+}
+ProvideParentFormDirective.ɵfac = function ProvideParentFormDirective_Factory(t) { return new (t || ProvideParentFormDirective)(); };
+ProvideParentFormDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ProvideParentFormDirective, selectors: [["", "provideParentForm", ""]], features: [ɵngcc0.ɵɵProvidersFeature([
+            {
+                provide: ControlContainer,
+                useFactory: test,
+                deps: [[new Optional(), new SkipSelf(), NgForm]]
+            }
+        ])] });
+/** @nocollapse */
+ProvideParentFormDirective.ctorParameters = () => [];
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ProvideParentFormDirective, [{
+        type: Directive,
+        args: [{
+                selector: '[provideParentForm]',
+                providers: [
+                    {
+                        provide: ControlContainer,
+                        useFactory: test,
+                        deps: [[new Optional(), new SkipSelf(), NgForm]]
+                    }
+                ]
+            }]
+    }], function () { return []; }, null); })();
+
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/ngx-hijri-gregorian-datepicker.module.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+class NgxHijriGregorianDatepickerModule {
+}
+NgxHijriGregorianDatepickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxHijriGregorianDatepickerModule });
+NgxHijriGregorianDatepickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxHijriGregorianDatepickerModule_Factory(t) { return new (t || NgxHijriGregorianDatepickerModule)(); }, providers: [
+        { provide: NgbDateParserFormatter, useClass: CustomNgbDateParserFormatter },
+        DateFormatterService
+    ], imports: [[
+            CommonModule,
+            ReactiveFormsModule,
+            FormsModule,
+            NgbModule
+        ]] });
+(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxHijriGregorianDatepickerModule, { declarations: function () { return [NgxHijriGregorianDatepickerComponent, HijriGregorianDatepickerComponent, HijriDatepickerComponent, ProvideParentFormDirective]; }, imports: function () { return [CommonModule,
+        ReactiveFormsModule,
+        FormsModule,
+        NgbModule]; }, exports: function () { return [HijriGregorianDatepickerComponent, NgxHijriGregorianDatepickerComponent]; } }); })();
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxHijriGregorianDatepickerModule, [{
+        type: NgModule,
+        args: [{
+                declarations: [
+                    NgxHijriGregorianDatepickerComponent,
+                    HijriGregorianDatepickerComponent,
+                    HijriDatepickerComponent,
+                    ProvideParentFormDirective
+                ],
+                imports: [
+                    CommonModule,
+                    ReactiveFormsModule,
+                    FormsModule,
+                    NgbModule
+                ],
+                providers: [
+                    { provide: NgbDateParserFormatter, useClass: CustomNgbDateParserFormatter },
+                    DateFormatterService
+                ],
+                exports: [HijriGregorianDatepickerComponent, NgxHijriGregorianDatepickerComponent]
+            }]
+    }], null, null); })();
+
+/**
+ * @fileoverview added by tsickle
+ * Generated from: public-api.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+
+/**
+ * @fileoverview added by tsickle
+ * Generated from: ngx-hijri-gregorian-datepicker.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+
+export { DateType, DateFormatterService, NgxHijriGregorianDatepickerService, NgxHijriGregorianDatepickerComponent, HijriGregorianDatepickerComponent, NgxHijriGregorianDatepickerModule, CustomNgbDateParserFormatter as ɵe, IslamicI18n as ɵb, HijriDatepickerComponent as ɵa, ProvideParentFormDirective as ɵd, test as ɵc };
+
+//# sourceMappingURL=ngx-hijri-gregorian-datepicker.js.map
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/__ivy_ngcc__/fesm2015/ngx-hijri-gregorian-datepicker.js.map b/node_modules/ngx-hijri-gregorian-datepicker/__ivy_ngcc__/fesm2015/ngx-hijri-gregorian-datepicker.js.map
new file mode 100644
index 0000000..ff2f2b2
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/__ivy_ngcc__/fesm2015/ngx-hijri-gregorian-datepicker.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"ngx-hijri-gregorian-datepicker.js","sources":["ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/consts.ts","ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/date-formatter.service.ts","ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.service.ts","ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.component.ts","ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.ts","ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/IslamicI18n.ts","ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.ts","ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.ts","ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/provide-parent-form.directive.ts","ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.module.ts"],"names":["moment","momentHijri"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAa,QAAQ;AACrB;AAAgB,cAAK,GAAG,CAAC,CAAC;AACV,kBAAS,GAAI,CAAC,CAAC;AAC/B;AAAC;AACE;AAAkC;AAA4E;AAAsI;ACJvP;AAAiB,MAIX,MAAM,GAAG,QAAQ;AAGvB;AAAiB,MACX,WAAW,GAAG,OAAO;AAG3B,MAAa,oBAAoB;AACjC;AACO;AAAkC;AAAQ,IAA/C,YAAoB,eAAuC;AAAI,QAA3C,oBAAe,GAAf,eAAe,CAAwB;AAAC,KAAI;AAClE;AACO;AAAuB;AACzB;AAAQ,IADT,QAAQ,CAAC,IAAmB;AAAI;AACnB,cAAH,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC;AACzD,QAAQ,OAAO,OAAO,CAAC;AACvB,KAAK;AACL;AACO;AAA4B;AAAyB;AAEnD;AAAQ,IAFb,iBAAiB,CAAC,SAAiB,EAAE,MAAc;AAAI;AAE7C,cAAF,eAAe,GAAI,WAAW,CAAC,SAAS,EAAG,MAAM,CAAC;AAAE;AAEzD;AAAyB,cAApB,GAAG,GAAG,eAAe,CAAC,KAAK,EAAE;AACzC;AAAyB,cAAb,KAAK,GAAG,CAAC,eAAe,CAAC,MAAM,EAAE,GAAG,CAAC;AAAE;AAC3B,cAAZ,IAAI,GAAG,eAAe,CAAC,KAAK,EAAE;AAC1C;AACwB,cAAZ,MAAM,GAAI,IAAI,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC;AACrD,QAAM,OAAO,MAAM,CAAC;AACpB,KAAI;AACJ;AAEM;AAAgC;AAAyB;AAE1D;AAAQ,IAFT,qBAAqB,CAAC,aAAqB,EAAE,MAAc;AAAI;AAEpD,cAAH,UAAU,GAAG,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC;AAAE;AAEjD;AAAyB,cAApB,GAAG,GAAG,UAAU,CAAC,IAAI,EAAE;AACnC;AAAyB,cAAb,KAAK,GAAG,CAAC,UAAU,CAAC,KAAK,EAAE,GAAG,CAAC;AAC3C;AAAyB,cAAb,IAAI,GAAG,UAAU,CAAC,IAAI,EAAE;AACpC;AACwB,cAAZ,MAAM,GAAG,IAAI,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC;AACrD,QAAM,OAAO,MAAM,CAAC;AACpB,KAAK;AACL;AACO;AAAuB;AAAmB;AAC1C,IADH,OAAO,CAAC,IAAmB;AAAI,QAC3B,IAAI,CAAC,IAAI,EAAE;AACnB,YAAY,OAAO,IAAI,CAAC;AACxB,SAAS;AACT;AAAyB,cAAX,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;AAC3C;AACwB,cAAV,UAAU,GAAG,WAAW,CAAC,OAAO,EAAE,UAAU,CAAC;AAC3D;AACwB,cAAV,GAAG,GAAG,UAAU,CAAC,KAAK,EAAE;AACtC;AAAyB,cAAX,KAAK,GAAG,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,CAAC;AAAE;AACxB,cAAV,IAAI,GAAG,UAAU,CAAC,KAAK,EAAE;AACvC;AACwB,cAAV,MAAM,GAAI,IAAI,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC;AACvD,QAAQ,OAAO,MAAM,CAAC;AACtB,KAAK;AACL;AACO;AAAuB;AACpB;AAAQ,IADd,WAAW,CAAC,IAAmB;AACnC,QAAQ,IAAI,CAAC,IAAI,EAAE;AACnB,YAAY,OAAO,IAAI,CAAC;AACxB,SAAS;AACT;AACwB,cAAV,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;AAC3C;AACwB,cAAV,UAAU,GAAG,WAAW,CAAC,OAAO,EAAE,aAAa,CAAC;AAC9D;AACwB,cAAV,GAAG,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC;AACvD;AAAyB,cAAX,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC;AAAE;AACnC,cAAV,IAAI,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC;AACxD;AACwB,cAAV,MAAM,GAAI,IAAI,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC;AACxD,QAAQ,OAAO,MAAM,CAAC;AACtB,KAAK;AACL;AACO;AAAmB;AAAQ,IAA9B,aAAa;AAAK;AAEb,cAAG,UAAU,GAAG,WAAW,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC;AACzE,QACM,OAAO,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,aAAa,CAAC,CAAE;AAChE,KACK;AACL;AACO;AAAmB;AAAQ,IAA9B,iBAAiB;AAAK;AAEjB,cAAG,cAAc,GAAG,MAAM,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC;AACrE,QACM,OAAO,IAAI,CAAC,qBAAqB,CAAC,cAAc,EAAE,UAAU,CAAC,CAAE;AACrE,KAAK;AACL;gDAlFC,UAAU;4HACT;AAAC;AAAmB;AAES,YAZP,sBAAsB;AAAG;;;uFAAE;AAAC;AAAC;AAAI;AAAkC;AAK3F;AAOW;ACbX,MAKa,kCAAkC;AAC/C,IACE,iBAAiB;AACnB;8DANC,UAAU,SAAC,kBACV,UAAU,EAAE,MAAM,cACnB;0LACI;AAAC;AAAmB;AAIX;;;;;;gDAAiR;AAAC;AAAC;AAAI;AAAkC;AAAmE;AAAsI;ACThhB,MAWa,oCAAoC;AAAG,IAElD,iBAAiB;AACnB;AACO;AAIH;AAAQ,IAJV,QAAQ;AACV,KAAG;AACH;gEAfC,SAAS,SAAC,kBACT,QAAQ,EAAE,oCAAoC;AAC9C,QAAQ,EAAE,kEAIT,cAEF;;;;6BACG;AAAC;AAAmB;;;;;;;;;;;gDAER;AAAC;AAAC;AAEjB;AAIY;AAA0F;AAAsI;ACnB7O;AAAiB,MAMXA,QAAM,GAAG,QAAQ;AAGvB;AAAiB,MAEXC,aAAW,GAAG,OAAO;AAO3B,MAAa,iCAAiC;AAAG;AAAQ;AAE7B;AAE5B,IA2BE,YAAqB,oBAA0C;AAAI,QAA9C,yBAAoB,GAApB,oBAAoB,CAAsB;AAAC,QAxBtD,uBAAkB,GAAgC,IAAI,YAAY,EAAE,CAAC;AACjF,QAEW,cAAS,GAAG,IAAI,CAAC;AAC5B,QAEW,aAAQ,GAAG,KAAK,CAAC;AAC5B,QAAW,eAAU,GAAG,KAAK,CAAC;AAC9B,QAAW,aAAQ,GAAG,KAAK,CAAC;AAC5B,KAesE;AACtE;AACO;AACI;AAAQ,IAPjB,IAAI,QAAQ;AACd,QAAI,OAAO,QAAQ,CAAC;AACpB,KAAG;AACH;AACO;AAAmB;AAAQ,IAEhC,QAAQ;AACV,QAAI,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;AAChC,YAAM,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,KAAK,CAAC;AAC7C,SAAK;AACL,KAAG;AACH;AACO;AACO;AAAQ,IADpB,KAAK;AACP,QAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;AAC5B,KAAG;AACH;AACO;AACO;AAAQ,IADpB,KAAK;AACP,QAAI,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;AAClC,QAAI,IAAI,CAAC,KAAK,EAAE,CAAC;AACjB,QAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACvC,KAAG;AACH;AAAQ;AAAmB;AAEvB,IAFF,eAAe;AAAK;AAEN,YAAR,aAAa,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC;AAC7E,QACI,IAAI,IAAI,CAAC,gBAAgB,IAAI,QAAQ,CAAC,KAAK,EAAE;AACjD,YAAM,OAAOA,aAAW,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC;AAC7E,SAAK;AACL,QACI,IAAI,IAAI,CAAC,gBAAgB,IAAI,QAAQ,CAAC,SAAS,EAAE;AACrD,YAAM,OAAOD,QAAM,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC;AACrE,SAAK;AACL,KAAG;AACH;AACO;AACA;AAAQ,IADb,YAAY;AACd,QAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACpD,KAAG;AACH;AACO;AACE;AAAQ,IADf,UAAU;AACZ,QAAI,IAAI,IAAI,CAAC,gBAAgB,IAAI,QAAQ,CAAC,KAAK,EAAE;AACjD,YAAM,OAAO;AACb,SAAK;AACL,QAAI,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,KAAK,CAAC;AAC3C;AACI,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAC7E,QAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACpD,KAAG;AACH;AAAQ;AACG;AAAQ,IADjB,SAAS;AACX,QAAI,IAAI,IAAI,CAAC,gBAAgB,IAAI,QAAQ,CAAC,SAAS,EAAE;AACrD,YAAM,OAAO;AACb,SAAK;AACL,QAAI,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,SAAS,CAAC;AAC/C;AACI,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACjF,QAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACpD,KAAG;AACH;6DAvFC,SAAS,SAAC,kBACT,QAAQ,EAAE,4BAA4B,kBACtC;;;;;;;;;;;qFAA0D,cAC3D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gQACG;AAAC;AAAmB;AAET,YAjBN,oBAAoB;AAAG;AAAG;AAEb,yBAenB,SAAS,SAAC,GAAG;AAAO,+BAGpB,KAAK;AAAK,2BACV,KAAK;AAAK,iCACV,MAAM;AAAK,oBAEX,KAAK;AAAK,wBACV,KAAK;AAAK,uBAGV,KAAK;AAAK,yBACV,KAAK;AAAK,uBACV,KAAK;AAAK,uBAEV,KAAK;AAAK,uBACV,KAAK;AAAK,sBACV,KAAK;AAAK,sBACV,KAAK;AAAK,yBAEV,KAAK;AAAK,wBACV,KAAK;AAAK,0BAEV,KAAK;AAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAC;AAAI;AAGlB;AAGuC;AAMvC;ACvDF;AAAiB,MAGX,QAAQ,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC;AAAE;AAAiB,MACzF,MAAM,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,YAAY,EAAE,cAAc,EAAE,cAAc,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM;AAAE,IAC1H,WAAW,EAAE,UAAU,CAAC;AAG1B,MAAa,WAAY,SAAQ,iBAAiB;AAClD;AACO;AAA0B;AACtB;AAAQ,IADjB,mBAAmB,CAAC,OAAe;AACrC,QAAI,OAAO,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;AACjC,KAAG;AACH;AACO;AAAwB;AAClB;AAAQ,IADnB,iBAAiB,CAAC,KAAa;AACjC,QAAI,OAAO,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AAC7B,KAAG;AACH;AACO;AAAwB;AACjB;AAAQ,IADpB,gBAAgB,CAAC,KAAa;AAChC,QAAI,OAAO,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AAC7B,KAAG;AACH;AACO;AAAuB;AAC9B;AAAQ,IADN,eAAe,CAAC,IAAmB;AAAI,QACrC,OAAO,GAAG,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;AACpD,KAAG;AACH;uCAlBC,UAAU;;;;;0BACT;AAAC;AAAC;AAAI;AAAkC;AAMrC;AAMJ;ACpBD,MAiBa,wBAAwB;AACrC,IAeE;AAAgB,QAXN,uBAAkB,GAAgC,IAAI,YAAY,EAAE,CAAC;AACjF,QACW,aAAQ,GAAG,KAAK,CAAC;AAC5B,QAAW,eAAU,GAAG,KAAK,CAAC;AAC9B,QAAW,aAAQ,GAAG,KAAK,CAAC;AAC5B,KAMmB;AACnB;AACO;AACE;AAAQ,IADf,UAAU;AACZ,QAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACpD,KAAG;AACH;AACO;AACM;AAAQ,IADnB,MAAM;AACR,QAAI,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;AAC5B,YAAM,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACzC,SAAK;AACL,KAAG;AACH;AACO;AACO;AAAQ,IADpB,KAAK;AACP,QAAI,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;AAClC,QAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;AAC5B,QAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACvC,KAAG;AACH;oDA7CC,SAAS,SAAC,kBACT,QAAQ,EAAE,mBAAmB;OAC7B;;;;;;;;oCAAgD,kBAChD,SAAS,EAAE,sBACT,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,0BAA0B,EAAE,sBAC9D,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,WAAW,EAAE,kBACtD,kBAID,aAAa,EAAE,iBAAiB,CAAC,IAAI,oJACtC;;;;;;;;;;;;+UACG;AAAC;AAAmB;AAGxB;AAEG,yBAHA,SAAS,SAAC,GAAG;AAAO,2BAEpB,KAAK;AAAK,iCACV,MAAM;AAAK,uBAEX,KAAK;AAAK,yBACV,KAAK;AAAK,uBACV,KAAK;AAAK,kBACV,KAAK;AAAK,kBACV,KAAK;AAAK,mBACV,KAAK;AAAK,0BAEV,KAAK;AAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAC;AAAI;AAIpB;AAIO;AAO0B;AC9CjC,MAKa,4BAA6B,SAAQ,sBAAsB;AACxE,IACE;AACF,QAAI,KAAK,EAAE,CAAC;AACZ,QAHE,aAAQ,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC;AACnC,KAEG;AACH;AAAQ;AAAuB;AACrB;AAAQ,IADhB,MAAM,CAAC,IAAmB;AAAI,QAC5B,IAAI,IAAI,KAAK,IAAI,EAAE;AACvB,YAAM,OAAO,EAAE,CAAC;AAChB,SAAK;AACL,QAAI,IAAI;AACR,YAAM,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,UAAU,CAAC,CAAC;AAChG,SAAK;AAAC,QAAA,OAAO,CAAC,EAAE;AAChB,YAAM,OAAO,EAAE,CAAC;AAChB,SAAK;AACL,KAAG;AACH;AAAQ;AAAwB;AACrB;AAAQ,IADjB,KAAK,CAAC,KAAa;AAAI;AACf,YAAF,SAAwB;AAChC,QAAI,IAAI,CAAC,KAAK,EAAE;AAChB,YAAM,SAAS,GAAG,IAAI,CAAC;AACvB,SAAK;AAAC,aAAK;AACX,YAAM,IAAI;AACV;AAAiC,oBAArB,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;AAC1E,gBAAQ,SAAS,GAAG,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACjH,aAAO;AAAC,YAAA,OAAO,CAAC,EAAE;AAClB,gBAAQ,SAAS,GAAG,IAAI,CAAC;AACzB,aAAO;AACP,SAAK;AACL,QAAI,OAAO,SAAS,CAAC;AACrB,KAAG;AACH;wDA9BC,UAAU;oJACT;AAAC;AAAmB;;;gDACpB;AAAC;AAAC;AAAI;AACF;AAIQ;AAI4E;ACf1F;AAAI;AAAmB;AAAe;AAGtC,SAAgB,IAAI,CAAC,IAAY;AACjC,IAAE,OAAO,IAAI,CAAC;AACd,CAAC;AAYD,MAAa,0BAA0B;AACvC,IACE,iBAAiB;AACnB;sDAbC,SAAS,SAAC,kBACT,QAAQ,EAAE,qBAAqB;KAC/B,SAAS,EAAE,sBACT,0BACE,OAAO,EAAE,gBAAgB,0BACzB,UAAU,EAAG,IAAI,0BACjB,IAAI,EAAE,CAAC,CAAC,IAAI,QAAQ;CAAE,EAAE,IAAI;CAAQ,EAAE,EAAE,MAAM,CAAC,CAAC,sBACjD;UACJ,cACA;;;eACI;AAAC;AAAmB;;;;;;;;;;;;;gDAKb;AAAC;AAAC;AAAI;AAAkC;AAAgE;AAAsI;ACtB1P,MA8Ba,iCAAiC;AAAG;6DAnBhD,QAAQ,SAAC,kBACR,YAAY,EAAE;qBACZ,oCAAoC,sBACpC,iCAAiC,sBACjC,wBAAwB,sBACxB;GAA0B,kBAC3B,kBACD,OAAO,EAAE,sBACP,YAAY;mBACZ;SAAmB;YACnB,WAAW;mBACX,SAAS;aACV;MACD,SAAS,EAAE;;EACT,EAAC,OAAO,EAAE,sBAAsB,EAAE,QAAQ,EAAE,4BAA4B,EAAC,sBACzE,oBAAoB,kBACrB,kBACD,OAAO,EAAE,CAAE,iCAAiC,EAAE,oCAAoC,CAAC,cACpF;;;;;;;;;;;;;;;;;;;;;;;;;0BACI;AAAC;AAAC;AAAI;AAAkC;AAClB;AAAsI;AAAI;AAAC;AAAI;AAAkC;AAAqD;AAAsjFA,AAAA,AATA,AAAA,ACDA,AAKA,AAAA,AAEA,AAAA,AALA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,ACJA,AAWA,AAAA,AAEA,AAAA,AAEA,AAAA,AACA,AAdA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAIA,AAEA,ACVA,AAMAA,AAAA,AAAA,AAAA,AAGA,AAEAC,AAAA,AAAA,AAAA,AAOA,AAAA,AAAA,AA+BA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAxBA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGA,AAAA,AAAA,AAAA,AAAA,AAGA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAgtFA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAdA,AAAA,AAijBA,AAAA,ACPA,AAiBA,AAAA,AAghBA,AA8BA,AAAA,AAnBA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA","sourcesContent":["export class DateType {\r\n  public static Hijri = 1;\r\n  public static Gregorian  = 2;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgbDateStruct, NgbDateParserFormatter, NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport * as momentjs from 'moment';\r\nconst moment = momentjs;\r\n\r\n\r\nimport * as moment_ from 'moment-hijri';\r\nconst momentHijri = moment_;\r\n\r\n@Injectable()\r\nexport class DateFormatterService {\r\n\r\n  constructor(private parserFormatter: NgbDateParserFormatter) { }\r\n\r\n    ToString(date: NgbDateStruct): string {\r\n        const dateStr = this.parserFormatter.format(date);\r\n        return dateStr;\r\n    }\r\n\r\n    ToHijriDateStruct(hijriDate: string, format: string): NgbDate  {\r\n\r\n      const hijriMomentDate =  momentHijri(hijriDate , format); // Parse a Hijri date based on format.\r\n\r\n      const day = hijriMomentDate.iDate();\r\n      const month = +hijriMomentDate.iMonth() + 1 ;\r\n      const year = hijriMomentDate.iYear();\r\n\r\n      const ngDate =  new NgbDate(+year, month, +day);\r\n      return ngDate;\r\n   }\r\n\r\n\r\n    ToGregorianDateStruct(gregorianDate: string, format: string): NgbDate {\r\n\r\n      const momentDate = moment(gregorianDate, format); // Parse a Gregorian date based on format.\r\n\r\n      const day = momentDate.date();\r\n      const month = +momentDate.month() + 1;\r\n      const year = momentDate.year();\r\n\r\n      const ngDate = new NgbDate(+year, +month, +day);\r\n      return ngDate;\r\n    }\r\n\r\n    ToHijri(date: NgbDateStruct): NgbDateStruct {\r\n        if (!date) {\r\n            return null;\r\n        }\r\n        const dateStr = this.ToString(date);\r\n\r\n        const momentDate = momentHijri(dateStr, 'D/M/YYYY');\r\n\r\n        const day = momentDate.iDate();\r\n        const month = +momentDate.iMonth() + 1 ;\r\n        const year = momentDate.iYear();\r\n\r\n        const ngDate =  new NgbDate(+year, month, +day);\r\n        return ngDate;\r\n    }\r\n\r\n    ToGregorian(date: NgbDateStruct) {\r\n        if (!date) {\r\n            return null;\r\n        }\r\n\r\n        const dateStr = this.ToString(date);\r\n\r\n        const momentDate = momentHijri(dateStr, 'iD/iM/iYYYY');\r\n\r\n        const day = momentDate.locale('en').format('D');\r\n        const month = momentDate.locale('en').format('M') ;\r\n        const year = momentDate.locale('en').format('Y');\r\n\r\n        const ngDate =  new NgbDate(+year, +month, +day);\r\n        return ngDate;\r\n    }\r\n\r\n    GetTodayHijri(): NgbDateStruct {\r\n\r\n      const todayHijri = momentHijri().locale('en').format('iYYYY/iM/iD');\r\n\r\n      return this.ToHijriDateStruct(todayHijri, 'iYYYY/iM/iD') ;\r\n\r\n    }\r\n\r\n    GetTodayGregorian(): NgbDateStruct {\r\n\r\n      const todayGregorian = moment().locale('en').format('YYYY/M/D');\r\n\r\n      return this.ToGregorianDateStruct(todayGregorian, 'YYYY/M/D') ;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxHijriGregorianDatepickerService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-ngx-hijri-gregorian-datepicker',\n  template: `\n    <p>\n      ngx-hijri-gregorian-datepicker works!\n    </p>\n  `,\n  styles: []\n})\nexport class NgxHijriGregorianDatepickerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport {NgbDateStruct, NgbDatepicker} from '@ng-bootstrap/ng-bootstrap';\nimport { DateType } from './consts';\nimport { DateFormatterService } from './date-formatter.service';\n\nimport * as momentjs from 'moment';\nconst moment = momentjs;\n\n\nimport * as moment_ from 'moment-hijri';\nimport { NgForm, ControlContainer } from '@angular/forms';\nconst momentHijri = moment_;\n\n\n@Component({\n  selector: 'hijri-gregorian-datepicker',\n  templateUrl: './hijri-gregorian-datepicker.component.html'\n})\nexport class HijriGregorianDatepickerComponent implements OnInit {\n\n  @ViewChild('d') datePicker: any;\n\n\n  @Input() selectedDateType: DateType;\n  @Input() selectedDate: NgbDateStruct;\n  @Output() selectedDateChange: EventEmitter<NgbDateStruct> = new EventEmitter();\n\n  @Input() label: string;\n  @Input() showLabel = true;\n\n\n  @Input() readonly = false;\n  @Input() isRequired = false;\n  @Input() disabled = false;\n\n  @Input() minHijri: NgbDateStruct;\n  @Input() maxHijri: NgbDateStruct;\n  @Input() minGreg: NgbDateStruct;\n  @Input() maxGreg: NgbDateStruct;\n\n  @Input() hijriLabel: string;\n  @Input() GregLabel: string;\n\n  @Input() placeHolder: string;\n\n  get DateType() {\n    return DateType;\n  }\n\n  constructor( private dateFormatterService: DateFormatterService) { }\n\n  ngOnInit() {\n    if (!this.selectedDateType) {\n      this.selectedDateType = DateType.Hijri;\n    }\n  }\n\n  close() {\n    this.datePicker.close();\n  }\n\n  clear() {\n    this.selectedDate = undefined;\n    this.close();\n    this.selectedDateChange.emit(null);\n  }\n  getSelectedDate(): string {\n\n    let formattedDate = this.dateFormatterService.ToString(this.selectedDate);\n\n    if (this.selectedDateType == DateType.Hijri) {\n      return momentHijri(formattedDate, 'iD/iM/iYYYY').locale('en').format();\n    }\n\n    if (this.selectedDateType == DateType.Gregorian) {\n      return moment(formattedDate, 'D/M/YYYY').locale('en').format();\n    }\n  }\n\n  dateSelected() {\n    this.selectedDateChange.emit(this.selectedDate);\n  }\n\n  hijriClick() {\n    if (this.selectedDateType == DateType.Hijri) {\n      return;\n    }\n    this.selectedDateType = DateType.Hijri;\n    //to hijri\n    this.selectedDate = this.dateFormatterService.ToHijri(this.selectedDate);\n    this.selectedDateChange.emit(this.selectedDate);\n  }\n  gregClick() {\n    if (this.selectedDateType == DateType.Gregorian) {\n      return;\n    }\n    this.selectedDateType = DateType.Gregorian;\n    //to Gregorian\n    this.selectedDate = this.dateFormatterService.ToGregorian(this.selectedDate);\n    this.selectedDateChange.emit(this.selectedDate);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nconst WEEKDAYS = ['Ø£Ø­Ø¯', 'Ø¥Ø«ÙÙÙ', 'Ø«ÙØ§Ø«Ø§Ø¡', 'Ø£Ø±Ø¨Ø¹Ø§Ø¡', 'Ø®ÙÙØ³', 'Ø¬ÙØ¹Ø©', 'Ø³Ø¨Øª'];\r\nconst MONTHS = ['ÙØ­Ø±Ù', 'ØµÙØ±', 'Ø±Ø¨ÙØ¹ Ø§ÙØ£ÙÙ', 'Ø±Ø¨ÙØ¹ Ø§ÙØ¢Ø®Ø±', 'Ø¬ÙØ§Ø¯Ù Ø§ÙØ£ÙÙÙ', 'Ø¬ÙØ§Ø¯Ù Ø§ÙØ¢Ø®Ø±Ø©', 'Ø±Ø¬Ø¨', 'Ø´Ø¹Ø¨Ø§Ù', 'Ø±ÙØ¶Ø§Ù', 'Ø´ÙØ§Ù',\r\n  'Ø°Ù Ø§ÙÙØ¹Ø¯Ø©', 'Ø°Ù Ø§ÙØ­Ø¬Ø©'];\r\n\r\n@Injectable()\r\nexport class IslamicI18n extends NgbDatepickerI18n {\r\n\r\n  getWeekdayShortName(weekday: number) {\r\n    return WEEKDAYS[weekday - 1];\r\n  }\r\n\r\n  getMonthShortName(month: number) {\r\n    return MONTHS[month - 1];\r\n  }\r\n\r\n  getMonthFullName(month: number) {\r\n    return MONTHS[month - 1];\r\n  }\r\n\r\n  getDayAriaLabel(date: NgbDateStruct): string {\r\n    return `${date.day}-${date.month}-${date.year}`;\r\n  }\r\n}\r\n","import { Component, OnInit, ViewEncapsulation, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { NgbCalendar, NgbCalendarIslamicUmalqura, NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { IslamicI18n } from '../IslamicI18n';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'hijri-date-picker',\n  templateUrl: './hijri-datepicker.component.html',\n  providers: [\n    { provide: NgbCalendar, useClass: NgbCalendarIslamicUmalqura },\n    { provide: NgbDatepickerI18n, useClass: IslamicI18n }\n  ],\n  styleUrls: [\n    './hijri-date-picker.component.css'\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class HijriDatepickerComponent {\n\n  @ViewChild('d') datePicker: any;\n\n  @Input() selectedDate: NgbDateStruct;\n  @Output() selectedDateChange: EventEmitter<NgbDateStruct> = new EventEmitter();\n\n  @Input() readonly = false;\n  @Input() isRequired = false;\n  @Input() disabled = false;\n  @Input() min: NgbDateStruct;\n  @Input() max: NgbDateStruct;\n  @Input() name: string;\n\n  @Input() placeHolder: string;\n\n  constructor() { }\n\n  changeDate() {\n    this.selectedDateChange.emit(this.selectedDate);\n  }\n\n  onBlur() {\n    if (!this.selectedDate) {\n      this.selectedDateChange.emit(null);\n    }\n  }\n\n  clear() {\n    this.selectedDate = undefined;\n    this.datePicker.close();\n    this.selectedDateChange.emit(null);\n  }\n\n}\n","import { NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class CustomNgbDateParserFormatter extends NgbDateParserFormatter {\r\n  datePipe = new DatePipe('en-US');\r\n  constructor() {\r\n    super();\r\n  }\r\n  format(date: NgbDateStruct): string {\r\n    if (date === null) {\r\n      return '';\r\n    }\r\n    try {\r\n      return this.datePipe.transform(new Date(date.year, date.month - 1, date.day), 'd/M/yyyy');\r\n    } catch (e) {\r\n      return '';\r\n    }\r\n  }\r\n  parse(value: string): NgbDateStruct {\r\n    let returnVal: NgbDateStruct;\r\n    if (!value) {\r\n      returnVal = null;\r\n    } else {\r\n      try {\r\n        let dateParts = this.datePipe.transform(value, 'M-d-y').split('-');\r\n        returnVal = { year: parseInt(dateParts[2]), month: parseInt(dateParts[0]), day: parseInt(dateParts[1]) };\r\n      } catch (e) {\r\n        returnVal = null;\r\n      }\r\n    }\r\n    return returnVal;\r\n  }\r\n}\r\n","import { Directive, Optional, SkipSelf } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\nexport function test(form: NgForm) {\n  return form;\n}\n\n@Directive({\n  selector: '[provideParentForm]',\n  providers: [\n    {\n      provide: ControlContainer,\n      useFactory:  test ,\n      deps: [[new Optional(), new SkipSelf(), NgForm]]\n    }\n]\n})\nexport class ProvideParentFormDirective {\n\n  constructor() { }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxHijriGregorianDatepickerComponent } from './ngx-hijri-gregorian-datepicker.component';\nimport { HijriGregorianDatepickerComponent } from './hijri-gregorian-datepicker/hijri-gregorian-datepicker.component';\nimport { HijriDatepickerComponent } from './hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgbModule, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport { DateFormatterService } from './hijri-gregorian-datepicker/date-formatter.service';\nimport { CustomNgbDateParserFormatter } from './hijri-gregorian-datepicker/CustomNgbDateParserFormatter';\nimport { ProvideParentFormDirective } from './hijri-gregorian-datepicker/provide-parent-form.directive';\n\n@NgModule({\n  declarations: [\n    NgxHijriGregorianDatepickerComponent,\n    HijriGregorianDatepickerComponent,\n    HijriDatepickerComponent,\n    ProvideParentFormDirective\n  ],\n  imports: [\n    CommonModule ,\n    ReactiveFormsModule,\n    FormsModule,\n    NgbModule\n  ],\n  providers: [\n    {provide: NgbDateParserFormatter, useClass: CustomNgbDateParserFormatter},\n    DateFormatterService\n  ],\n  exports: [ HijriGregorianDatepickerComponent, NgxHijriGregorianDatepickerComponent]\n})\nexport class NgxHijriGregorianDatepickerModule { }\n"]}
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/bundles/ngx-hijri-gregorian-datepicker.umd.js b/node_modules/ngx-hijri-gregorian-datepicker/bundles/ngx-hijri-gregorian-datepicker.umd.js
index 1fe5175..3bce2d4 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/bundles/ngx-hijri-gregorian-datepicker.umd.js
+++ b/node_modules/ngx-hijri-gregorian-datepicker/bundles/ngx-hijri-gregorian-datepicker.umd.js
@@ -1,8 +1,62 @@
 (function (global, factory) {
-    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('moment'), require('moment-hijri'), require('@ng-bootstrap/ng-bootstrap'), require('@angular/common'), require('@angular/core'), require('@angular/forms')) :
-    typeof define === 'function' && define.amd ? define('ngx-hijri-gregorian-datepicker', ['exports', 'moment', 'moment-hijri', '@ng-bootstrap/ng-bootstrap', '@angular/common', '@angular/core', '@angular/forms'], factory) :
-    (factory((global['ngx-hijri-gregorian-datepicker'] = {}),global.momentjs,global.moment_,global.ngBootstrap,global.ng.common,global.ng.core,global.ng.forms));
-}(this, (function (exports,momentjs,moment_,ngBootstrap,common,i0,forms) { 'use strict';
+    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('@ng-bootstrap/ng-bootstrap'),require('@angular/common'),require('@angular/forms'),exports, require('moment'), require('moment-hijri'), require('@ng-bootstrap/ng-bootstrap'), require('@angular/common'), require('@angular/core'), require('@angular/forms')) :
+    typeof define === 'function' && define.amd ? define('ngx-hijri-gregorian-datepicker', ['@angular/core','@ng-bootstrap/ng-bootstrap','@angular/common','@angular/forms','exports', 'moment', 'moment-hijri', '@ng-bootstrap/ng-bootstrap', '@angular/common', '@angular/core', '@angular/forms'], factory) :
+    (factory(global.ng.core,global.ngBootstrap.ngBootstrap,global.ng.common,global.ng.forms,(global['ngx-hijri-gregorian-datepicker'] = {}),global.momentjs,global.moment_,global.ngBootstrap,global.ng.common,global.ng.core,global.ng.forms));
+}(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,ɵngcc3,exports,momentjs,moment_,ngBootstrap,common,i0,forms) { 
+var _c0 = ["d"];
+function HijriGregorianDatepickerComponent_label_1_Template(rf, ctx) { if (rf & 1) {
+    ɵngcc0.ɵɵelementStart(0, "label", 8);
+    ɵngcc0.ɵɵtext(1);
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var ctx_r0 = ɵngcc0.ɵɵnextContext();
+    ɵngcc0.ɵɵadvance(1);
+    ɵngcc0.ɵɵtextInterpolate1("", ctx_r0.label, " ");
+} }
+function HijriGregorianDatepickerComponent_input_3_Template(rf, ctx) { if (rf & 1) {
+    var _r7 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "input", 9, 10);
+    ɵngcc0.ɵɵlistener("ngModelChange", function HijriGregorianDatepickerComponent_input_3_Template_input_ngModelChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.selectedDate = $event; })("click", function HijriGregorianDatepickerComponent_input_3_Template_input_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r7); var _r5 = ɵngcc0.ɵɵreference(1); return _r5.toggle(); })("dateSelect", function HijriGregorianDatepickerComponent_input_3_Template_input_dateSelect_0_listener() { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.dateSelected(); });
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var ctx_r1 = ɵngcc0.ɵɵnextContext();
+    var _r2 = ɵngcc0.ɵɵreference(5);
+    ɵngcc0.ɵɵproperty("placeholder", ctx_r1.placeHolder ? ctx_r1.placeHolder : "d/M/yyyy")("name", ctx_r1.label)("ngModel", ctx_r1.selectedDate)("readonly", ctx_r1.readonly)("minDate", ctx_r1.minGreg)("maxDate", ctx_r1.maxGreg)("required", ctx_r1.isRequired)("disabled", ctx_r1.disabled)("footerTemplate", _r2);
+} }
+function HijriGregorianDatepickerComponent_ng_template_4_Template(rf, ctx) { if (rf & 1) {
+    var _r11 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelement(0, "hr", 11);
+    ɵngcc0.ɵɵelementStart(1, "button", 12);
+    ɵngcc0.ɵɵlistener("click", function HijriGregorianDatepickerComponent_ng_template_4_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r11); var ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.close(); });
+    ɵngcc0.ɵɵtext(2, "Close");
+    ɵngcc0.ɵɵelementEnd();
+    ɵngcc0.ɵɵelementStart(3, "button", 13);
+    ɵngcc0.ɵɵlistener("click", function HijriGregorianDatepickerComponent_ng_template_4_Template_button_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r11); var ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.clear(); });
+    ɵngcc0.ɵɵtext(4, "Clear");
+    ɵngcc0.ɵɵelementEnd();
+} }
+function HijriGregorianDatepickerComponent_hijri_date_picker_6_Template(rf, ctx) { if (rf & 1) {
+    var _r14 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "hijri-date-picker", 14);
+    ɵngcc0.ɵɵlistener("selectedDateChange", function HijriGregorianDatepickerComponent_hijri_date_picker_6_Template_hijri_date_picker_selectedDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); var ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.selectedDate = $event; })("selectedDateChange", function HijriGregorianDatepickerComponent_hijri_date_picker_6_Template_hijri_date_picker_selectedDateChange_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); var ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15.dateSelected(); });
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var ctx_r4 = ɵngcc0.ɵɵnextContext();
+    ɵngcc0.ɵɵproperty("selectedDate", ctx_r4.selectedDate)("readonly", ctx_r4.readonly)("min", ctx_r4.minHijri)("max", ctx_r4.maxHijri)("name", ctx_r4.label)("isRequired", ctx_r4.isRequired)("placeHolder", ctx_r4.placeHolder)("disabled", ctx_r4.disabled);
+} }
+function HijriDatepickerComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {
+    var _r4 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelement(0, "hr", 4);
+    ɵngcc0.ɵɵelementStart(1, "button", 5);
+    ɵngcc0.ɵɵlistener("click", function HijriDatepickerComponent_ng_template_3_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r4); ɵngcc0.ɵɵnextContext(); var _r0 = ɵngcc0.ɵɵreference(2); return _r0.close(); });
+    ɵngcc0.ɵɵtext(2, "Close");
+    ɵngcc0.ɵɵelementEnd();
+    ɵngcc0.ɵɵelementStart(3, "button", 6);
+    ɵngcc0.ɵɵlistener("click", function HijriDatepickerComponent_ng_template_3_Template_button_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r4); var ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.clear(); });
+    ɵngcc0.ɵɵtext(4, "Clear");
+    ɵngcc0.ɵɵelementEnd();
+} }
+'use strict';
 
     /**
      * @fileoverview added by tsickle
@@ -165,15 +219,17 @@
                 var todayGregorian = moment().locale('en').format('YYYY/M/D');
                 return this.ToGregorianDateStruct(todayGregorian, 'YYYY/M/D');
             };
-        DateFormatterService.decorators = [
-            { type: i0.Injectable }
-        ];
         /** @nocollapse */
         DateFormatterService.ctorParameters = function () {
             return [
                 { type: ngBootstrap.NgbDateParserFormatter }
             ];
         };
+DateFormatterService.ɵfac = function DateFormatterService_Factory(t) { return new (t || DateFormatterService)(ɵngcc0.ɵɵinject(ɵngcc1.NgbDateParserFormatter)); };
+DateFormatterService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: DateFormatterService, factory: function (t) { return DateFormatterService.ɵfac(t); } });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DateFormatterService, [{
+        type: i0.Injectable
+    }], function () { return [{ type: ɵngcc1.NgbDateParserFormatter }]; }, null); })();
         return DateFormatterService;
     }());
 
@@ -185,14 +241,17 @@
     var NgxHijriGregorianDatepickerService = /** @class */ (function () {
         function NgxHijriGregorianDatepickerService() {
         }
-        NgxHijriGregorianDatepickerService.decorators = [
-            { type: i0.Injectable, args: [{
-                        providedIn: 'root'
-                    },] }
-        ];
         /** @nocollapse */
         NgxHijriGregorianDatepickerService.ctorParameters = function () { return []; };
         /** @nocollapse */ NgxHijriGregorianDatepickerService.ngInjectableDef = i0.defineInjectable({ factory: function NgxHijriGregorianDatepickerService_Factory() { return new NgxHijriGregorianDatepickerService(); }, token: NgxHijriGregorianDatepickerService, providedIn: "root" });
+NgxHijriGregorianDatepickerService.ɵfac = function NgxHijriGregorianDatepickerService_Factory(t) { return new (t || NgxHijriGregorianDatepickerService)(); };
+NgxHijriGregorianDatepickerService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgxHijriGregorianDatepickerService, factory: function (t) { return NgxHijriGregorianDatepickerService.ɵfac(t); }, providedIn: 'root' });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxHijriGregorianDatepickerService, [{
+        type: i0.Injectable,
+        args: [{
+                providedIn: 'root'
+            }]
+    }], function () { return []; }, null); })();
         return NgxHijriGregorianDatepickerService;
     }());
 
@@ -212,14 +271,21 @@
          */
             function () {
             };
-        NgxHijriGregorianDatepickerComponent.decorators = [
-            { type: i0.Component, args: [{
-                        selector: 'lib-ngx-hijri-gregorian-datepicker',
-                        template: "\n    <p>\n      ngx-hijri-gregorian-datepicker works!\n    </p>\n  "
-                    }] }
-        ];
         /** @nocollapse */
         NgxHijriGregorianDatepickerComponent.ctorParameters = function () { return []; };
+NgxHijriGregorianDatepickerComponent.ɵfac = function NgxHijriGregorianDatepickerComponent_Factory(t) { return new (t || NgxHijriGregorianDatepickerComponent)(); };
+NgxHijriGregorianDatepickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxHijriGregorianDatepickerComponent, selectors: [["lib-ngx-hijri-gregorian-datepicker"]], decls: 2, vars: 0, template: function NgxHijriGregorianDatepickerComponent_Template(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵelementStart(0, "p");
+        ɵngcc0.ɵɵtext(1, " ngx-hijri-gregorian-datepicker works! ");
+        ɵngcc0.ɵɵelementEnd();
+    } }, encapsulation: 2 });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxHijriGregorianDatepickerComponent, [{
+        type: i0.Component,
+        args: [{
+                selector: 'lib-ngx-hijri-gregorian-datepicker',
+                template: "\n    <p>\n      ngx-hijri-gregorian-datepicker works!\n    </p>\n  "
+            }]
+    }], function () { return []; }, null); })();
         return NgxHijriGregorianDatepickerComponent;
     }());
 
@@ -336,12 +402,6 @@
                 this.selectedDate = this.dateFormatterService.ToGregorian(this.selectedDate);
                 this.selectedDateChange.emit(this.selectedDate);
             };
-        HijriGregorianDatepickerComponent.decorators = [
-            { type: i0.Component, args: [{
-                        selector: 'hijri-gregorian-datepicker',
-                        template: "\n    <div class=\"form-group\" provideParentForm>\n      <label class=\"requiredInput\" *ngIf=\"showLabel\" for=\"input-birth-Date\">{{ label }} </label>\n\n      <div class=\"input-group\">\n\n        <input  class=\"form-control\"\n                  [placeholder]=\"placeHolder ? placeHolder : 'd/M/yyyy'\"\n                  [name]=\"label\"\n                  *ngIf=\"selectedDateType == DateType.Gregorian\"\n                  [(ngModel)]=\"selectedDate\"\n                  ngbDatepicker (click)=\"d.toggle()\"\n                  (dateSelect)=\"dateSelected()\"\n                  autocomplete=\"off\"\n                  [readonly]=\"readonly\"\n                  [minDate]=\"minGreg\"\n                  [maxDate]=\"maxGreg\"\n                  [required]=\"isRequired\"\n                  [disabled]=\"disabled\"\n                  [footerTemplate]=\"footerTemplate\"\n                  #d=\"ngbDatepicker\">\n\n          <ng-template #footerTemplate>\n            <hr class=\"my-0\">\n            <button class=\"btn btn-secondary btn-sm m-2 float-right\" type=\"button\" (click)=\"close()\">Close</button>\n            <button class=\"btn btn-primary btn-sm m-2 float-left\" type=\"button\" (click)=\"clear()\">Clear</button>\n          </ng-template>\n\n          <hijri-date-picker *ngIf=\"selectedDateType == DateType.Hijri\"\n                             [(selectedDate)]=\"selectedDate\"\n                             (selectedDateChange)=\"dateSelected()\"\n                             [readonly]=\"readonly\"\n                             [min]=\"minHijri\" [max]=\"maxHijri\"\n                             style=\"flex: 1 1 auto;\"\n                             [name]=\"label\"\n                             [isRequired]=\"isRequired\"\n                             [placeHolder]=\"placeHolder\"\n                             [disabled]=\"disabled\">\n          </hijri-date-picker>\n\n          <div class=\"input-group-append\">\n                  <button class=\"btn btn-sm {{selectedDateType == DateType.Hijri ? 'btn-info focus active' :  'btn-outline-info'}}\" (click)=\"hijriClick()\"  [disabled]=\"disabled\" type=\"button\">\n                     {{hijriLabel ? hijriLabel : 'Hijri' }}\n                  </button>\n                  <button class=\"btn btn-sm {{selectedDateType == DateType.Gregorian ? 'btn-info focus active' :  'btn-outline-info'}}\" (click)=\"gregClick()\" [disabled]=\"disabled\" type=\"button\">\n                      {{GregLabel ? GregLabel : 'Gregorian' }}\n                  </button>\n           </div>\n\n      </div>\n  </div>\n"
-                    }] }
-        ];
         /** @nocollapse */
         HijriGregorianDatepickerComponent.ctorParameters = function () {
             return [
@@ -366,6 +426,89 @@
             GregLabel: [{ type: i0.Input }],
             placeHolder: [{ type: i0.Input }]
         };
+HijriGregorianDatepickerComponent.ɵfac = function HijriGregorianDatepickerComponent_Factory(t) { return new (t || HijriGregorianDatepickerComponent)(ɵngcc0.ɵɵdirectiveInject(DateFormatterService)); };
+HijriGregorianDatepickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: HijriGregorianDatepickerComponent, selectors: [["hijri-gregorian-datepicker"]], viewQuery: function HijriGregorianDatepickerComponent_Query(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵviewQuery(_c0, true);
+    } if (rf & 2) {
+        var _t;
+        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.datePicker = _t.first);
+    } }, inputs: { showLabel: "showLabel", readonly: "readonly", isRequired: "isRequired", disabled: "disabled", selectedDateType: "selectedDateType", selectedDate: "selectedDate", label: "label", minHijri: "minHijri", maxHijri: "maxHijri", minGreg: "minGreg", maxGreg: "maxGreg", hijriLabel: "hijriLabel", GregLabel: "GregLabel", placeHolder: "placeHolder" }, outputs: { selectedDateChange: "selectedDateChange" }, decls: 12, vars: 13, consts: [["provideParentForm", "", 1, "form-group"], ["class", "requiredInput", "for", "input-birth-Date", 4, "ngIf"], [1, "input-group"], ["class", "form-control", "ngbDatepicker", "", "autocomplete", "off", 3, "placeholder", "name", "ngModel", "readonly", "minDate", "maxDate", "required", "disabled", "footerTemplate", "ngModelChange", "click", "dateSelect", 4, "ngIf"], ["footerTemplate", ""], ["style", "flex: 1 1 auto;", 3, "selectedDate", "readonly", "min", "max", "name", "isRequired", "placeHolder", "disabled", "selectedDateChange", 4, "ngIf"], [1, "input-group-append"], ["type", "button", 3, "disabled", "click"], ["for", "input-birth-Date", 1, "requiredInput"], ["ngbDatepicker", "", "autocomplete", "off", 1, "form-control", 3, "placeholder", "name", "ngModel", "readonly", "minDate", "maxDate", "required", "disabled", "footerTemplate", "ngModelChange", "click", "dateSelect"], ["d", "ngbDatepicker"], [1, "my-0"], ["type", "button", 1, "btn", "btn-secondary", "btn-sm", "m-2", "float-right", 3, "click"], ["type", "button", 1, "btn", "btn-primary", "btn-sm", "m-2", "float-left", 3, "click"], [2, "flex", "1 1 auto", 3, "selectedDate", "readonly", "min", "max", "name", "isRequired", "placeHolder", "disabled", "selectedDateChange"]], template: function HijriGregorianDatepickerComponent_Template(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵelementStart(0, "div", 0);
+        ɵngcc0.ɵɵtemplate(1, HijriGregorianDatepickerComponent_label_1_Template, 2, 1, "label", 1);
+        ɵngcc0.ɵɵelementStart(2, "div", 2);
+        ɵngcc0.ɵɵtemplate(3, HijriGregorianDatepickerComponent_input_3_Template, 2, 9, "input", 3);
+        ɵngcc0.ɵɵtemplate(4, HijriGregorianDatepickerComponent_ng_template_4_Template, 5, 0, "ng-template", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);
+        ɵngcc0.ɵɵtemplate(6, HijriGregorianDatepickerComponent_hijri_date_picker_6_Template, 1, 8, "hijri-date-picker", 5);
+        ɵngcc0.ɵɵelementStart(7, "div", 6);
+        ɵngcc0.ɵɵelementStart(8, "button", 7);
+        ɵngcc0.ɵɵlistener("click", function HijriGregorianDatepickerComponent_Template_button_click_8_listener() { return ctx.hijriClick(); });
+        ɵngcc0.ɵɵtext(9);
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵelementStart(10, "button", 7);
+        ɵngcc0.ɵɵlistener("click", function HijriGregorianDatepickerComponent_Template_button_click_10_listener() { return ctx.gregClick(); });
+        ɵngcc0.ɵɵtext(11);
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵelementEnd();
+    } if (rf & 2) {
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.showLabel);
+        ɵngcc0.ɵɵadvance(2);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.selectedDateType == ctx.DateType.Gregorian);
+        ɵngcc0.ɵɵadvance(3);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.selectedDateType == ctx.DateType.Hijri);
+        ɵngcc0.ɵɵadvance(2);
+        ɵngcc0.ɵɵclassMapInterpolate1("btn btn-sm ", ctx.selectedDateType == ctx.DateType.Hijri ? "btn-info focus active" : "btn-outline-info", "");
+        ɵngcc0.ɵɵproperty("disabled", ctx.disabled);
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.hijriLabel ? ctx.hijriLabel : "Hijri", " ");
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵclassMapInterpolate1("btn btn-sm ", ctx.selectedDateType == ctx.DateType.Gregorian ? "btn-info focus active" : "btn-outline-info", "");
+        ɵngcc0.ɵɵproperty("disabled", ctx.disabled);
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.GregLabel ? ctx.GregLabel : "Gregorian", " ");
+    } }, directives: function () { return [ProvideParentFormDirective, ɵngcc2.NgIf, ɵngcc1.NgbInputDatepicker, ɵngcc3.DefaultValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.NgModel, ɵngcc3.RequiredValidator, HijriDatepickerComponent]; }, encapsulation: 2 });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HijriGregorianDatepickerComponent, [{
+        type: i0.Component,
+        args: [{
+                selector: 'hijri-gregorian-datepicker',
+                template: "\n    <div class=\"form-group\" provideParentForm>\n      <label class=\"requiredInput\" *ngIf=\"showLabel\" for=\"input-birth-Date\">{{ label }} </label>\n\n      <div class=\"input-group\">\n\n        <input  class=\"form-control\"\n                  [placeholder]=\"placeHolder ? placeHolder : 'd/M/yyyy'\"\n                  [name]=\"label\"\n                  *ngIf=\"selectedDateType == DateType.Gregorian\"\n                  [(ngModel)]=\"selectedDate\"\n                  ngbDatepicker (click)=\"d.toggle()\"\n                  (dateSelect)=\"dateSelected()\"\n                  autocomplete=\"off\"\n                  [readonly]=\"readonly\"\n                  [minDate]=\"minGreg\"\n                  [maxDate]=\"maxGreg\"\n                  [required]=\"isRequired\"\n                  [disabled]=\"disabled\"\n                  [footerTemplate]=\"footerTemplate\"\n                  #d=\"ngbDatepicker\">\n\n          <ng-template #footerTemplate>\n            <hr class=\"my-0\">\n            <button class=\"btn btn-secondary btn-sm m-2 float-right\" type=\"button\" (click)=\"close()\">Close</button>\n            <button class=\"btn btn-primary btn-sm m-2 float-left\" type=\"button\" (click)=\"clear()\">Clear</button>\n          </ng-template>\n\n          <hijri-date-picker *ngIf=\"selectedDateType == DateType.Hijri\"\n                             [(selectedDate)]=\"selectedDate\"\n                             (selectedDateChange)=\"dateSelected()\"\n                             [readonly]=\"readonly\"\n                             [min]=\"minHijri\" [max]=\"maxHijri\"\n                             style=\"flex: 1 1 auto;\"\n                             [name]=\"label\"\n                             [isRequired]=\"isRequired\"\n                             [placeHolder]=\"placeHolder\"\n                             [disabled]=\"disabled\">\n          </hijri-date-picker>\n\n          <div class=\"input-group-append\">\n                  <button class=\"btn btn-sm {{selectedDateType == DateType.Hijri ? 'btn-info focus active' :  'btn-outline-info'}}\" (click)=\"hijriClick()\"  [disabled]=\"disabled\" type=\"button\">\n                     {{hijriLabel ? hijriLabel : 'Hijri' }}\n                  </button>\n                  <button class=\"btn btn-sm {{selectedDateType == DateType.Gregorian ? 'btn-info focus active' :  'btn-outline-info'}}\" (click)=\"gregClick()\" [disabled]=\"disabled\" type=\"button\">\n                      {{GregLabel ? GregLabel : 'Gregorian' }}\n                  </button>\n           </div>\n\n      </div>\n  </div>\n"
+            }]
+    }], function () { return [{ type: DateFormatterService }]; }, { selectedDateChange: [{
+            type: i0.Output
+        }], showLabel: [{
+            type: i0.Input
+        }], readonly: [{
+            type: i0.Input
+        }], isRequired: [{
+            type: i0.Input
+        }], disabled: [{
+            type: i0.Input
+        }], selectedDateType: [{
+            type: i0.Input
+        }], selectedDate: [{
+            type: i0.Input
+        }], datePicker: [{
+            type: i0.ViewChild,
+            args: ['d']
+        }], label: [{
+            type: i0.Input
+        }], minHijri: [{
+            type: i0.Input
+        }], maxHijri: [{
+            type: i0.Input
+        }], minGreg: [{
+            type: i0.Input
+        }], maxGreg: [{
+            type: i0.Input
+        }], hijriLabel: [{
+            type: i0.Input
+        }], GregLabel: [{
+            type: i0.Input
+        }], placeHolder: [{
+            type: i0.Input
+        }] }); })();
         return HijriGregorianDatepickerComponent;
     }());
 
@@ -457,9 +600,12 @@
             function (date) {
                 return date.day + "-" + date.month + "-" + date.year;
             };
-        IslamicI18n.decorators = [
-            { type: i0.Injectable }
-        ];
+IslamicI18n.ɵfac = function IslamicI18n_Factory(t) { return ɵIslamicI18n_BaseFactory(t || IslamicI18n); };
+IslamicI18n.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: IslamicI18n, factory: function (t) { return IslamicI18n.ɵfac(t); } });
+var ɵIslamicI18n_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(IslamicI18n);
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IslamicI18n, [{
+        type: i0.Injectable
+    }], null, null); })();
         return IslamicI18n;
     }(ngBootstrap.NgbDatepickerI18n));
 
@@ -506,18 +652,6 @@
                 this.datePicker.close();
                 this.selectedDateChange.emit(null);
             };
-        HijriDatepickerComponent.decorators = [
-            { type: i0.Component, args: [{
-                        selector: 'hijri-date-picker',
-                        template: "<div provideParentForm>\n<input\n    class=\"form-control hijriInput\"\n    [(ngModel)]=\"selectedDate\"\n    [placeholder]=\"placeHolder ?placeHolder : 'd/M/yyyy'\"\n    ngbDatepicker\n    (click)=\"d.toggle()\"\n    (dateSelect)=\"changeDate()\"\n    #d=\"ngbDatepicker\"\n    [readonly]=\"readonly\"\n    [minDate]=\"min\"\n    [maxDate]=\"max\"\n    [required]=\"isRequired\"\n    [name]=\"name\"\n    (blur)=\"onBlur()\"\n    [footerTemplate]=\"footerTemplate\"\n    [disabled]=\"disabled\" />\n</div>\n\n\n<ng-template #footerTemplate>\n  <hr class=\"my-0\">\n  <button class=\"btn btn-secondary btn-sm m-2 float-right\" type=\"button\" (click)=\"d.close()\">Close</button>\n  <button class=\"btn btn-primary btn-sm m-2 float-left\" type=\"button\" (click)=\"clear()\">Clear</button>\n</ng-template>\n",
-                        providers: [
-                            { provide: ngBootstrap.NgbCalendar, useClass: ngBootstrap.NgbCalendarIslamicUmalqura },
-                            { provide: ngBootstrap.NgbDatepickerI18n, useClass: IslamicI18n }
-                        ],
-                        encapsulation: i0.ViewEncapsulation.None,
-                        styles: [".hijriInput{border-top-left-radius:0;border-bottom-left-radius:0}.ngb-dp-weekday{width:2.1rem!important}"]
-                    }] }
-        ];
         /** @nocollapse */
         HijriDatepickerComponent.ctorParameters = function () { return []; };
         HijriDatepickerComponent.propDecorators = {
@@ -532,6 +666,62 @@
             name: [{ type: i0.Input }],
             placeHolder: [{ type: i0.Input }]
         };
+HijriDatepickerComponent.ɵfac = function HijriDatepickerComponent_Factory(t) { return new (t || HijriDatepickerComponent)(); };
+HijriDatepickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: HijriDatepickerComponent, selectors: [["hijri-date-picker"]], viewQuery: function HijriDatepickerComponent_Query(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵviewQuery(_c0, true);
+    } if (rf & 2) {
+        var _t;
+        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.datePicker = _t.first);
+    } }, inputs: { readonly: "readonly", isRequired: "isRequired", disabled: "disabled", selectedDate: "selectedDate", min: "min", max: "max", name: "name", placeHolder: "placeHolder" }, outputs: { selectedDateChange: "selectedDateChange" }, features: [ɵngcc0.ɵɵProvidersFeature([
+            { provide: ngBootstrap.NgbCalendar, useClass: ngBootstrap.NgbCalendarIslamicUmalqura },
+            { provide: ngBootstrap.NgbDatepickerI18n, useClass: IslamicI18n }
+        ])], decls: 5, vars: 9, consts: [["provideParentForm", ""], ["ngbDatepicker", "", 1, "form-control", "hijriInput", 3, "ngModel", "placeholder", "readonly", "minDate", "maxDate", "required", "name", "footerTemplate", "disabled", "ngModelChange", "click", "dateSelect", "blur"], ["d", "ngbDatepicker"], ["footerTemplate", ""], [1, "my-0"], ["type", "button", 1, "btn", "btn-secondary", "btn-sm", "m-2", "float-right", 3, "click"], ["type", "button", 1, "btn", "btn-primary", "btn-sm", "m-2", "float-left", 3, "click"]], template: function HijriDatepickerComponent_Template(rf, ctx) { if (rf & 1) {
+        var _r6 = ɵngcc0.ɵɵgetCurrentView();
+        ɵngcc0.ɵɵelementStart(0, "div", 0);
+        ɵngcc0.ɵɵelementStart(1, "input", 1, 2);
+        ɵngcc0.ɵɵlistener("ngModelChange", function HijriDatepickerComponent_Template_input_ngModelChange_1_listener($event) { return ctx.selectedDate = $event; })("click", function HijriDatepickerComponent_Template_input_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r6); var _r0 = ɵngcc0.ɵɵreference(2); return _r0.toggle(); })("dateSelect", function HijriDatepickerComponent_Template_input_dateSelect_1_listener() { return ctx.changeDate(); })("blur", function HijriDatepickerComponent_Template_input_blur_1_listener() { return ctx.onBlur(); });
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵtemplate(3, HijriDatepickerComponent_ng_template_3_Template, 5, 0, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
+    } if (rf & 2) {
+        var _r1 = ɵngcc0.ɵɵreference(4);
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵproperty("ngModel", ctx.selectedDate)("placeholder", ctx.placeHolder ? ctx.placeHolder : "d/M/yyyy")("readonly", ctx.readonly)("minDate", ctx.min)("maxDate", ctx.max)("required", ctx.isRequired)("name", ctx.name)("footerTemplate", _r1)("disabled", ctx.disabled);
+    } }, directives: function () { return [ProvideParentFormDirective, ɵngcc1.NgbInputDatepicker, ɵngcc3.DefaultValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.NgModel, ɵngcc3.RequiredValidator]; }, styles: [".hijriInput{border-top-left-radius:0;border-bottom-left-radius:0}.ngb-dp-weekday{width:2.1rem!important}"], encapsulation: 2 });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HijriDatepickerComponent, [{
+        type: i0.Component,
+        args: [{
+                selector: 'hijri-date-picker',
+                template: "<div provideParentForm>\n<input\n    class=\"form-control hijriInput\"\n    [(ngModel)]=\"selectedDate\"\n    [placeholder]=\"placeHolder ?placeHolder : 'd/M/yyyy'\"\n    ngbDatepicker\n    (click)=\"d.toggle()\"\n    (dateSelect)=\"changeDate()\"\n    #d=\"ngbDatepicker\"\n    [readonly]=\"readonly\"\n    [minDate]=\"min\"\n    [maxDate]=\"max\"\n    [required]=\"isRequired\"\n    [name]=\"name\"\n    (blur)=\"onBlur()\"\n    [footerTemplate]=\"footerTemplate\"\n    [disabled]=\"disabled\" />\n</div>\n\n\n<ng-template #footerTemplate>\n  <hr class=\"my-0\">\n  <button class=\"btn btn-secondary btn-sm m-2 float-right\" type=\"button\" (click)=\"d.close()\">Close</button>\n  <button class=\"btn btn-primary btn-sm m-2 float-left\" type=\"button\" (click)=\"clear()\">Clear</button>\n</ng-template>\n",
+                providers: [
+                    { provide: ngBootstrap.NgbCalendar, useClass: ngBootstrap.NgbCalendarIslamicUmalqura },
+                    { provide: ngBootstrap.NgbDatepickerI18n, useClass: IslamicI18n }
+                ],
+                encapsulation: i0.ViewEncapsulation.None,
+                styles: [".hijriInput{border-top-left-radius:0;border-bottom-left-radius:0}.ngb-dp-weekday{width:2.1rem!important}"]
+            }]
+    }], function () { return []; }, { selectedDateChange: [{
+            type: i0.Output
+        }], readonly: [{
+            type: i0.Input
+        }], isRequired: [{
+            type: i0.Input
+        }], disabled: [{
+            type: i0.Input
+        }], selectedDate: [{
+            type: i0.Input
+        }], datePicker: [{
+            type: i0.ViewChild,
+            args: ['d']
+        }], min: [{
+            type: i0.Input
+        }], max: [{
+            type: i0.Input
+        }], name: [{
+            type: i0.Input
+        }], placeHolder: [{
+            type: i0.Input
+        }] }); })();
         return HijriDatepickerComponent;
     }());
 
@@ -592,11 +782,13 @@
                 }
                 return returnVal;
             };
-        CustomNgbDateParserFormatter.decorators = [
-            { type: i0.Injectable }
-        ];
         /** @nocollapse */
         CustomNgbDateParserFormatter.ctorParameters = function () { return []; };
+CustomNgbDateParserFormatter.ɵfac = function CustomNgbDateParserFormatter_Factory(t) { return new (t || CustomNgbDateParserFormatter)(); };
+CustomNgbDateParserFormatter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: CustomNgbDateParserFormatter, factory: function (t) { return CustomNgbDateParserFormatter.ɵfac(t); } });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CustomNgbDateParserFormatter, [{
+        type: i0.Injectable
+    }], function () { return []; }, null); })();
         return CustomNgbDateParserFormatter;
     }(ngBootstrap.NgbDateParserFormatter));
 
@@ -615,20 +807,29 @@
     var ProvideParentFormDirective = /** @class */ (function () {
         function ProvideParentFormDirective() {
         }
-        ProvideParentFormDirective.decorators = [
-            { type: i0.Directive, args: [{
-                        selector: '[provideParentForm]',
-                        providers: [
-                            {
-                                provide: forms.ControlContainer,
-                                useFactory: test,
-                                deps: [[new i0.Optional(), new i0.SkipSelf(), forms.NgForm]]
-                            }
-                        ]
-                    },] }
-        ];
         /** @nocollapse */
         ProvideParentFormDirective.ctorParameters = function () { return []; };
+ProvideParentFormDirective.ɵfac = function ProvideParentFormDirective_Factory(t) { return new (t || ProvideParentFormDirective)(); };
+ProvideParentFormDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ProvideParentFormDirective, selectors: [["", "provideParentForm", ""]], features: [ɵngcc0.ɵɵProvidersFeature([
+            {
+                provide: forms.ControlContainer,
+                useFactory: test,
+                deps: [[new i0.Optional(), new i0.SkipSelf(), forms.NgForm]]
+            }
+        ])] });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ProvideParentFormDirective, [{
+        type: i0.Directive,
+        args: [{
+                selector: '[provideParentForm]',
+                providers: [
+                    {
+                        provide: forms.ControlContainer,
+                        useFactory: test,
+                        deps: [[new i0.Optional(), new i0.SkipSelf(), forms.NgForm]]
+                    }
+                ]
+            }]
+    }], function () { return []; }, null); })();
         return ProvideParentFormDirective;
     }());
 
@@ -640,27 +841,39 @@
     var NgxHijriGregorianDatepickerModule = /** @class */ (function () {
         function NgxHijriGregorianDatepickerModule() {
         }
-        NgxHijriGregorianDatepickerModule.decorators = [
-            { type: i0.NgModule, args: [{
-                        declarations: [
-                            NgxHijriGregorianDatepickerComponent,
-                            HijriGregorianDatepickerComponent,
-                            HijriDatepickerComponent,
-                            ProvideParentFormDirective
-                        ],
-                        imports: [
-                            common.CommonModule,
-                            forms.ReactiveFormsModule,
-                            forms.FormsModule,
-                            ngBootstrap.NgbModule
-                        ],
-                        providers: [
-                            { provide: ngBootstrap.NgbDateParserFormatter, useClass: CustomNgbDateParserFormatter },
-                            DateFormatterService
-                        ],
-                        exports: [HijriGregorianDatepickerComponent, NgxHijriGregorianDatepickerComponent]
-                    },] }
-        ];
+NgxHijriGregorianDatepickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxHijriGregorianDatepickerModule });
+NgxHijriGregorianDatepickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxHijriGregorianDatepickerModule_Factory(t) { return new (t || NgxHijriGregorianDatepickerModule)(); }, providers: [
+        { provide: ngBootstrap.NgbDateParserFormatter, useClass: CustomNgbDateParserFormatter },
+        DateFormatterService
+    ], imports: [[
+            common.CommonModule,
+            forms.ReactiveFormsModule,
+            forms.FormsModule,
+            ngBootstrap.NgbModule
+        ]] });
+(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxHijriGregorianDatepickerModule, { declarations: [NgxHijriGregorianDatepickerComponent, HijriGregorianDatepickerComponent, HijriDatepickerComponent, ProvideParentFormDirective], imports: [ɵngcc2.CommonModule, ɵngcc3.ReactiveFormsModule, ɵngcc3.FormsModule, ɵngcc1.NgbModule], exports: [HijriGregorianDatepickerComponent, NgxHijriGregorianDatepickerComponent] }); })();
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxHijriGregorianDatepickerModule, [{
+        type: i0.NgModule,
+        args: [{
+                declarations: [
+                    NgxHijriGregorianDatepickerComponent,
+                    HijriGregorianDatepickerComponent,
+                    HijriDatepickerComponent,
+                    ProvideParentFormDirective
+                ],
+                imports: [
+                    common.CommonModule,
+                    forms.ReactiveFormsModule,
+                    forms.FormsModule,
+                    ngBootstrap.NgbModule
+                ],
+                providers: [
+                    { provide: ngBootstrap.NgbDateParserFormatter, useClass: CustomNgbDateParserFormatter },
+                    DateFormatterService
+                ],
+                exports: [HijriGregorianDatepickerComponent, NgxHijriGregorianDatepickerComponent]
+            }]
+    }], function () { return []; }, null); })();
         return NgxHijriGregorianDatepickerModule;
     }());
 
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/bundles/ngx-hijri-gregorian-datepicker.umd.js.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/bundles/ngx-hijri-gregorian-datepicker.umd.js.__ivy_ngcc_bak
new file mode 100644
index 0000000..1fe5175
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/bundles/ngx-hijri-gregorian-datepicker.umd.js.__ivy_ngcc_bak
@@ -0,0 +1,695 @@
+(function (global, factory) {
+    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('moment'), require('moment-hijri'), require('@ng-bootstrap/ng-bootstrap'), require('@angular/common'), require('@angular/core'), require('@angular/forms')) :
+    typeof define === 'function' && define.amd ? define('ngx-hijri-gregorian-datepicker', ['exports', 'moment', 'moment-hijri', '@ng-bootstrap/ng-bootstrap', '@angular/common', '@angular/core', '@angular/forms'], factory) :
+    (factory((global['ngx-hijri-gregorian-datepicker'] = {}),global.momentjs,global.moment_,global.ngBootstrap,global.ng.common,global.ng.core,global.ng.forms));
+}(this, (function (exports,momentjs,moment_,ngBootstrap,common,i0,forms) { 'use strict';
+
+    /**
+     * @fileoverview added by tsickle
+     * Generated from: lib/hijri-gregorian-datepicker/consts.ts
+     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+     */
+    var DateType = /** @class */ (function () {
+        function DateType() {
+        }
+        DateType.Hijri = 1;
+        DateType.Gregorian = 2;
+        return DateType;
+    }());
+
+    /**
+     * @fileoverview added by tsickle
+     * Generated from: lib/hijri-gregorian-datepicker/date-formatter.service.ts
+     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+     */
+    /** @type {?} */
+    var moment = momentjs;
+    /** @type {?} */
+    var momentHijri = moment_;
+    var DateFormatterService = /** @class */ (function () {
+        function DateFormatterService(parserFormatter) {
+            this.parserFormatter = parserFormatter;
+        }
+        /**
+         * @param {?} date
+         * @return {?}
+         */
+        DateFormatterService.prototype.ToString = /**
+         * @param {?} date
+         * @return {?}
+         */
+            function (date) {
+                /** @type {?} */
+                var dateStr = this.parserFormatter.format(date);
+                return dateStr;
+            };
+        /**
+         * @param {?} hijriDate
+         * @param {?} format
+         * @return {?}
+         */
+        DateFormatterService.prototype.ToHijriDateStruct = /**
+         * @param {?} hijriDate
+         * @param {?} format
+         * @return {?}
+         */
+            function (hijriDate, format) {
+                /** @type {?} */
+                var hijriMomentDate = momentHijri(hijriDate, format);
+                // Parse a Hijri date based on format.
+                /** @type {?} */
+                var day = hijriMomentDate.iDate();
+                /** @type {?} */
+                var month = +hijriMomentDate.iMonth() + 1;
+                /** @type {?} */
+                var year = hijriMomentDate.iYear();
+                /** @type {?} */
+                var ngDate = new ngBootstrap.NgbDate(+year, month, +day);
+                return ngDate;
+            };
+        /**
+         * @param {?} gregorianDate
+         * @param {?} format
+         * @return {?}
+         */
+        DateFormatterService.prototype.ToGregorianDateStruct = /**
+         * @param {?} gregorianDate
+         * @param {?} format
+         * @return {?}
+         */
+            function (gregorianDate, format) {
+                /** @type {?} */
+                var momentDate = moment(gregorianDate, format);
+                // Parse a Gregorian date based on format.
+                /** @type {?} */
+                var day = momentDate.date();
+                /** @type {?} */
+                var month = +momentDate.month() + 1;
+                /** @type {?} */
+                var year = momentDate.year();
+                /** @type {?} */
+                var ngDate = new ngBootstrap.NgbDate(+year, +month, +day);
+                return ngDate;
+            };
+        /**
+         * @param {?} date
+         * @return {?}
+         */
+        DateFormatterService.prototype.ToHijri = /**
+         * @param {?} date
+         * @return {?}
+         */
+            function (date) {
+                if (!date) {
+                    return null;
+                }
+                /** @type {?} */
+                var dateStr = this.ToString(date);
+                /** @type {?} */
+                var momentDate = momentHijri(dateStr, 'D/M/YYYY');
+                /** @type {?} */
+                var day = momentDate.iDate();
+                /** @type {?} */
+                var month = +momentDate.iMonth() + 1;
+                /** @type {?} */
+                var year = momentDate.iYear();
+                /** @type {?} */
+                var ngDate = new ngBootstrap.NgbDate(+year, month, +day);
+                return ngDate;
+            };
+        /**
+         * @param {?} date
+         * @return {?}
+         */
+        DateFormatterService.prototype.ToGregorian = /**
+         * @param {?} date
+         * @return {?}
+         */
+            function (date) {
+                if (!date) {
+                    return null;
+                }
+                /** @type {?} */
+                var dateStr = this.ToString(date);
+                /** @type {?} */
+                var momentDate = momentHijri(dateStr, 'iD/iM/iYYYY');
+                /** @type {?} */
+                var day = momentDate.locale('en').format('D');
+                /** @type {?} */
+                var month = momentDate.locale('en').format('M');
+                /** @type {?} */
+                var year = momentDate.locale('en').format('Y');
+                /** @type {?} */
+                var ngDate = new ngBootstrap.NgbDate(+year, +month, +day);
+                return ngDate;
+            };
+        /**
+         * @return {?}
+         */
+        DateFormatterService.prototype.GetTodayHijri = /**
+         * @return {?}
+         */
+            function () {
+                /** @type {?} */
+                var todayHijri = momentHijri().locale('en').format('iYYYY/iM/iD');
+                return this.ToHijriDateStruct(todayHijri, 'iYYYY/iM/iD');
+            };
+        /**
+         * @return {?}
+         */
+        DateFormatterService.prototype.GetTodayGregorian = /**
+         * @return {?}
+         */
+            function () {
+                /** @type {?} */
+                var todayGregorian = moment().locale('en').format('YYYY/M/D');
+                return this.ToGregorianDateStruct(todayGregorian, 'YYYY/M/D');
+            };
+        DateFormatterService.decorators = [
+            { type: i0.Injectable }
+        ];
+        /** @nocollapse */
+        DateFormatterService.ctorParameters = function () {
+            return [
+                { type: ngBootstrap.NgbDateParserFormatter }
+            ];
+        };
+        return DateFormatterService;
+    }());
+
+    /**
+     * @fileoverview added by tsickle
+     * Generated from: lib/ngx-hijri-gregorian-datepicker.service.ts
+     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+     */
+    var NgxHijriGregorianDatepickerService = /** @class */ (function () {
+        function NgxHijriGregorianDatepickerService() {
+        }
+        NgxHijriGregorianDatepickerService.decorators = [
+            { type: i0.Injectable, args: [{
+                        providedIn: 'root'
+                    },] }
+        ];
+        /** @nocollapse */
+        NgxHijriGregorianDatepickerService.ctorParameters = function () { return []; };
+        /** @nocollapse */ NgxHijriGregorianDatepickerService.ngInjectableDef = i0.defineInjectable({ factory: function NgxHijriGregorianDatepickerService_Factory() { return new NgxHijriGregorianDatepickerService(); }, token: NgxHijriGregorianDatepickerService, providedIn: "root" });
+        return NgxHijriGregorianDatepickerService;
+    }());
+
+    /**
+     * @fileoverview added by tsickle
+     * Generated from: lib/ngx-hijri-gregorian-datepicker.component.ts
+     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+     */
+    var NgxHijriGregorianDatepickerComponent = /** @class */ (function () {
+        function NgxHijriGregorianDatepickerComponent() {
+        }
+        /**
+         * @return {?}
+         */
+        NgxHijriGregorianDatepickerComponent.prototype.ngOnInit = /**
+         * @return {?}
+         */
+            function () {
+            };
+        NgxHijriGregorianDatepickerComponent.decorators = [
+            { type: i0.Component, args: [{
+                        selector: 'lib-ngx-hijri-gregorian-datepicker',
+                        template: "\n    <p>\n      ngx-hijri-gregorian-datepicker works!\n    </p>\n  "
+                    }] }
+        ];
+        /** @nocollapse */
+        NgxHijriGregorianDatepickerComponent.ctorParameters = function () { return []; };
+        return NgxHijriGregorianDatepickerComponent;
+    }());
+
+    /**
+     * @fileoverview added by tsickle
+     * Generated from: lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.ts
+     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+     */
+    /** @type {?} */
+    var moment$1 = momentjs;
+    /** @type {?} */
+    var momentHijri$1 = moment_;
+    var HijriGregorianDatepickerComponent = /** @class */ (function () {
+        function HijriGregorianDatepickerComponent(dateFormatterService) {
+            this.dateFormatterService = dateFormatterService;
+            this.selectedDateChange = new i0.EventEmitter();
+            this.showLabel = true;
+            this.readonly = false;
+            this.isRequired = false;
+            this.disabled = false;
+        }
+        Object.defineProperty(HijriGregorianDatepickerComponent.prototype, "DateType", {
+            get: /**
+             * @return {?}
+             */ function () {
+                return DateType;
+            },
+            enumerable: true,
+            configurable: true
+        });
+        /**
+         * @return {?}
+         */
+        HijriGregorianDatepickerComponent.prototype.ngOnInit = /**
+         * @return {?}
+         */
+            function () {
+                if (!this.selectedDateType) {
+                    this.selectedDateType = DateType.Hijri;
+                }
+            };
+        /**
+         * @return {?}
+         */
+        HijriGregorianDatepickerComponent.prototype.close = /**
+         * @return {?}
+         */
+            function () {
+                this.datePicker.close();
+            };
+        /**
+         * @return {?}
+         */
+        HijriGregorianDatepickerComponent.prototype.clear = /**
+         * @return {?}
+         */
+            function () {
+                this.selectedDate = undefined;
+                this.close();
+                this.selectedDateChange.emit(null);
+            };
+        /**
+         * @return {?}
+         */
+        HijriGregorianDatepickerComponent.prototype.getSelectedDate = /**
+         * @return {?}
+         */
+            function () {
+                /** @type {?} */
+                var formattedDate = this.dateFormatterService.ToString(this.selectedDate);
+                if (this.selectedDateType == DateType.Hijri) {
+                    return momentHijri$1(formattedDate, 'iD/iM/iYYYY').locale('en').format();
+                }
+                if (this.selectedDateType == DateType.Gregorian) {
+                    return moment$1(formattedDate, 'D/M/YYYY').locale('en').format();
+                }
+            };
+        /**
+         * @return {?}
+         */
+        HijriGregorianDatepickerComponent.prototype.dateSelected = /**
+         * @return {?}
+         */
+            function () {
+                this.selectedDateChange.emit(this.selectedDate);
+            };
+        /**
+         * @return {?}
+         */
+        HijriGregorianDatepickerComponent.prototype.hijriClick = /**
+         * @return {?}
+         */
+            function () {
+                if (this.selectedDateType == DateType.Hijri) {
+                    return;
+                }
+                this.selectedDateType = DateType.Hijri;
+                //to hijri
+                this.selectedDate = this.dateFormatterService.ToHijri(this.selectedDate);
+                this.selectedDateChange.emit(this.selectedDate);
+            };
+        /**
+         * @return {?}
+         */
+        HijriGregorianDatepickerComponent.prototype.gregClick = /**
+         * @return {?}
+         */
+            function () {
+                if (this.selectedDateType == DateType.Gregorian) {
+                    return;
+                }
+                this.selectedDateType = DateType.Gregorian;
+                //to Gregorian
+                this.selectedDate = this.dateFormatterService.ToGregorian(this.selectedDate);
+                this.selectedDateChange.emit(this.selectedDate);
+            };
+        HijriGregorianDatepickerComponent.decorators = [
+            { type: i0.Component, args: [{
+                        selector: 'hijri-gregorian-datepicker',
+                        template: "\n    <div class=\"form-group\" provideParentForm>\n      <label class=\"requiredInput\" *ngIf=\"showLabel\" for=\"input-birth-Date\">{{ label }} </label>\n\n      <div class=\"input-group\">\n\n        <input  class=\"form-control\"\n                  [placeholder]=\"placeHolder ? placeHolder : 'd/M/yyyy'\"\n                  [name]=\"label\"\n                  *ngIf=\"selectedDateType == DateType.Gregorian\"\n                  [(ngModel)]=\"selectedDate\"\n                  ngbDatepicker (click)=\"d.toggle()\"\n                  (dateSelect)=\"dateSelected()\"\n                  autocomplete=\"off\"\n                  [readonly]=\"readonly\"\n                  [minDate]=\"minGreg\"\n                  [maxDate]=\"maxGreg\"\n                  [required]=\"isRequired\"\n                  [disabled]=\"disabled\"\n                  [footerTemplate]=\"footerTemplate\"\n                  #d=\"ngbDatepicker\">\n\n          <ng-template #footerTemplate>\n            <hr class=\"my-0\">\n            <button class=\"btn btn-secondary btn-sm m-2 float-right\" type=\"button\" (click)=\"close()\">Close</button>\n            <button class=\"btn btn-primary btn-sm m-2 float-left\" type=\"button\" (click)=\"clear()\">Clear</button>\n          </ng-template>\n\n          <hijri-date-picker *ngIf=\"selectedDateType == DateType.Hijri\"\n                             [(selectedDate)]=\"selectedDate\"\n                             (selectedDateChange)=\"dateSelected()\"\n                             [readonly]=\"readonly\"\n                             [min]=\"minHijri\" [max]=\"maxHijri\"\n                             style=\"flex: 1 1 auto;\"\n                             [name]=\"label\"\n                             [isRequired]=\"isRequired\"\n                             [placeHolder]=\"placeHolder\"\n                             [disabled]=\"disabled\">\n          </hijri-date-picker>\n\n          <div class=\"input-group-append\">\n                  <button class=\"btn btn-sm {{selectedDateType == DateType.Hijri ? 'btn-info focus active' :  'btn-outline-info'}}\" (click)=\"hijriClick()\"  [disabled]=\"disabled\" type=\"button\">\n                     {{hijriLabel ? hijriLabel : 'Hijri' }}\n                  </button>\n                  <button class=\"btn btn-sm {{selectedDateType == DateType.Gregorian ? 'btn-info focus active' :  'btn-outline-info'}}\" (click)=\"gregClick()\" [disabled]=\"disabled\" type=\"button\">\n                      {{GregLabel ? GregLabel : 'Gregorian' }}\n                  </button>\n           </div>\n\n      </div>\n  </div>\n"
+                    }] }
+        ];
+        /** @nocollapse */
+        HijriGregorianDatepickerComponent.ctorParameters = function () {
+            return [
+                { type: DateFormatterService }
+            ];
+        };
+        HijriGregorianDatepickerComponent.propDecorators = {
+            datePicker: [{ type: i0.ViewChild, args: ['d',] }],
+            selectedDateType: [{ type: i0.Input }],
+            selectedDate: [{ type: i0.Input }],
+            selectedDateChange: [{ type: i0.Output }],
+            label: [{ type: i0.Input }],
+            showLabel: [{ type: i0.Input }],
+            readonly: [{ type: i0.Input }],
+            isRequired: [{ type: i0.Input }],
+            disabled: [{ type: i0.Input }],
+            minHijri: [{ type: i0.Input }],
+            maxHijri: [{ type: i0.Input }],
+            minGreg: [{ type: i0.Input }],
+            maxGreg: [{ type: i0.Input }],
+            hijriLabel: [{ type: i0.Input }],
+            GregLabel: [{ type: i0.Input }],
+            placeHolder: [{ type: i0.Input }]
+        };
+        return HijriGregorianDatepickerComponent;
+    }());
+
+    /*! *****************************************************************************
+    Copyright (c) Microsoft Corporation.
+
+    Permission to use, copy, modify, and/or distribute this software for any
+    purpose with or without fee is hereby granted.
+
+    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
+    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
+    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
+    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
+    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
+    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
+    PERFORMANCE OF THIS SOFTWARE.
+    ***************************************************************************** */
+    /* global Reflect, Promise */
+    var extendStatics = function (d, b) {
+        extendStatics = Object.setPrototypeOf ||
+            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
+            function (d, b) { for (var p in b)
+                if (b.hasOwnProperty(p))
+                    d[p] = b[p]; };
+        return extendStatics(d, b);
+    };
+    function __extends(d, b) {
+        extendStatics(d, b);
+        function __() { this.constructor = d; }
+        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
+    }
+
+    /**
+     * @fileoverview added by tsickle
+     * Generated from: lib/hijri-gregorian-datepicker/IslamicI18n.ts
+     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+     */
+    /** @type {?} */
+    var WEEKDAYS = ['أحد', 'إثنين', 'ثلاثاء', 'أربعاء', 'خميس', 'جمعة', 'سبت'];
+    /** @type {?} */
+    var MONTHS = ['محرم', 'صفر', 'ربيع الأول', 'ربيع الآخر', 'جمادى الأولى', 'جمادى الآخرة', 'رجب', 'شعبان', 'رمضان', 'شوال',
+        'ذو القعدة', 'ذو الحجة'];
+    var IslamicI18n = /** @class */ (function (_super) {
+        __extends(IslamicI18n, _super);
+        function IslamicI18n() {
+            return _super !== null && _super.apply(this, arguments) || this;
+        }
+        /**
+         * @param {?} weekday
+         * @return {?}
+         */
+        IslamicI18n.prototype.getWeekdayShortName = /**
+         * @param {?} weekday
+         * @return {?}
+         */
+            function (weekday) {
+                return WEEKDAYS[weekday - 1];
+            };
+        /**
+         * @param {?} month
+         * @return {?}
+         */
+        IslamicI18n.prototype.getMonthShortName = /**
+         * @param {?} month
+         * @return {?}
+         */
+            function (month) {
+                return MONTHS[month - 1];
+            };
+        /**
+         * @param {?} month
+         * @return {?}
+         */
+        IslamicI18n.prototype.getMonthFullName = /**
+         * @param {?} month
+         * @return {?}
+         */
+            function (month) {
+                return MONTHS[month - 1];
+            };
+        /**
+         * @param {?} date
+         * @return {?}
+         */
+        IslamicI18n.prototype.getDayAriaLabel = /**
+         * @param {?} date
+         * @return {?}
+         */
+            function (date) {
+                return date.day + "-" + date.month + "-" + date.year;
+            };
+        IslamicI18n.decorators = [
+            { type: i0.Injectable }
+        ];
+        return IslamicI18n;
+    }(ngBootstrap.NgbDatepickerI18n));
+
+    /**
+     * @fileoverview added by tsickle
+     * Generated from: lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.ts
+     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+     */
+    var HijriDatepickerComponent = /** @class */ (function () {
+        function HijriDatepickerComponent() {
+            this.selectedDateChange = new i0.EventEmitter();
+            this.readonly = false;
+            this.isRequired = false;
+            this.disabled = false;
+        }
+        /**
+         * @return {?}
+         */
+        HijriDatepickerComponent.prototype.changeDate = /**
+         * @return {?}
+         */
+            function () {
+                this.selectedDateChange.emit(this.selectedDate);
+            };
+        /**
+         * @return {?}
+         */
+        HijriDatepickerComponent.prototype.onBlur = /**
+         * @return {?}
+         */
+            function () {
+                if (!this.selectedDate) {
+                    this.selectedDateChange.emit(null);
+                }
+            };
+        /**
+         * @return {?}
+         */
+        HijriDatepickerComponent.prototype.clear = /**
+         * @return {?}
+         */
+            function () {
+                this.selectedDate = undefined;
+                this.datePicker.close();
+                this.selectedDateChange.emit(null);
+            };
+        HijriDatepickerComponent.decorators = [
+            { type: i0.Component, args: [{
+                        selector: 'hijri-date-picker',
+                        template: "<div provideParentForm>\n<input\n    class=\"form-control hijriInput\"\n    [(ngModel)]=\"selectedDate\"\n    [placeholder]=\"placeHolder ?placeHolder : 'd/M/yyyy'\"\n    ngbDatepicker\n    (click)=\"d.toggle()\"\n    (dateSelect)=\"changeDate()\"\n    #d=\"ngbDatepicker\"\n    [readonly]=\"readonly\"\n    [minDate]=\"min\"\n    [maxDate]=\"max\"\n    [required]=\"isRequired\"\n    [name]=\"name\"\n    (blur)=\"onBlur()\"\n    [footerTemplate]=\"footerTemplate\"\n    [disabled]=\"disabled\" />\n</div>\n\n\n<ng-template #footerTemplate>\n  <hr class=\"my-0\">\n  <button class=\"btn btn-secondary btn-sm m-2 float-right\" type=\"button\" (click)=\"d.close()\">Close</button>\n  <button class=\"btn btn-primary btn-sm m-2 float-left\" type=\"button\" (click)=\"clear()\">Clear</button>\n</ng-template>\n",
+                        providers: [
+                            { provide: ngBootstrap.NgbCalendar, useClass: ngBootstrap.NgbCalendarIslamicUmalqura },
+                            { provide: ngBootstrap.NgbDatepickerI18n, useClass: IslamicI18n }
+                        ],
+                        encapsulation: i0.ViewEncapsulation.None,
+                        styles: [".hijriInput{border-top-left-radius:0;border-bottom-left-radius:0}.ngb-dp-weekday{width:2.1rem!important}"]
+                    }] }
+        ];
+        /** @nocollapse */
+        HijriDatepickerComponent.ctorParameters = function () { return []; };
+        HijriDatepickerComponent.propDecorators = {
+            datePicker: [{ type: i0.ViewChild, args: ['d',] }],
+            selectedDate: [{ type: i0.Input }],
+            selectedDateChange: [{ type: i0.Output }],
+            readonly: [{ type: i0.Input }],
+            isRequired: [{ type: i0.Input }],
+            disabled: [{ type: i0.Input }],
+            min: [{ type: i0.Input }],
+            max: [{ type: i0.Input }],
+            name: [{ type: i0.Input }],
+            placeHolder: [{ type: i0.Input }]
+        };
+        return HijriDatepickerComponent;
+    }());
+
+    /**
+     * @fileoverview added by tsickle
+     * Generated from: lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.ts
+     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+     */
+    var CustomNgbDateParserFormatter = /** @class */ (function (_super) {
+        __extends(CustomNgbDateParserFormatter, _super);
+        function CustomNgbDateParserFormatter() {
+            var _this = _super.call(this) || this;
+            _this.datePipe = new common.DatePipe('en-US');
+            return _this;
+        }
+        /**
+         * @param {?} date
+         * @return {?}
+         */
+        CustomNgbDateParserFormatter.prototype.format = /**
+         * @param {?} date
+         * @return {?}
+         */
+            function (date) {
+                if (date === null) {
+                    return '';
+                }
+                try {
+                    return this.datePipe.transform(new Date(date.year, date.month - 1, date.day), 'd/M/yyyy');
+                }
+                catch (e) {
+                    return '';
+                }
+            };
+        /**
+         * @param {?} value
+         * @return {?}
+         */
+        CustomNgbDateParserFormatter.prototype.parse = /**
+         * @param {?} value
+         * @return {?}
+         */
+            function (value) {
+                /** @type {?} */
+                var returnVal;
+                if (!value) {
+                    returnVal = null;
+                }
+                else {
+                    try {
+                        /** @type {?} */
+                        var dateParts = this.datePipe.transform(value, 'M-d-y').split('-');
+                        returnVal = { year: parseInt(dateParts[2]), month: parseInt(dateParts[0]), day: parseInt(dateParts[1]) };
+                    }
+                    catch (e) {
+                        returnVal = null;
+                    }
+                }
+                return returnVal;
+            };
+        CustomNgbDateParserFormatter.decorators = [
+            { type: i0.Injectable }
+        ];
+        /** @nocollapse */
+        CustomNgbDateParserFormatter.ctorParameters = function () { return []; };
+        return CustomNgbDateParserFormatter;
+    }(ngBootstrap.NgbDateParserFormatter));
+
+    /**
+     * @fileoverview added by tsickle
+     * Generated from: lib/hijri-gregorian-datepicker/provide-parent-form.directive.ts
+     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+     */
+    /**
+     * @param {?} form
+     * @return {?}
+     */
+    function test(form) {
+        return form;
+    }
+    var ProvideParentFormDirective = /** @class */ (function () {
+        function ProvideParentFormDirective() {
+        }
+        ProvideParentFormDirective.decorators = [
+            { type: i0.Directive, args: [{
+                        selector: '[provideParentForm]',
+                        providers: [
+                            {
+                                provide: forms.ControlContainer,
+                                useFactory: test,
+                                deps: [[new i0.Optional(), new i0.SkipSelf(), forms.NgForm]]
+                            }
+                        ]
+                    },] }
+        ];
+        /** @nocollapse */
+        ProvideParentFormDirective.ctorParameters = function () { return []; };
+        return ProvideParentFormDirective;
+    }());
+
+    /**
+     * @fileoverview added by tsickle
+     * Generated from: lib/ngx-hijri-gregorian-datepicker.module.ts
+     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+     */
+    var NgxHijriGregorianDatepickerModule = /** @class */ (function () {
+        function NgxHijriGregorianDatepickerModule() {
+        }
+        NgxHijriGregorianDatepickerModule.decorators = [
+            { type: i0.NgModule, args: [{
+                        declarations: [
+                            NgxHijriGregorianDatepickerComponent,
+                            HijriGregorianDatepickerComponent,
+                            HijriDatepickerComponent,
+                            ProvideParentFormDirective
+                        ],
+                        imports: [
+                            common.CommonModule,
+                            forms.ReactiveFormsModule,
+                            forms.FormsModule,
+                            ngBootstrap.NgbModule
+                        ],
+                        providers: [
+                            { provide: ngBootstrap.NgbDateParserFormatter, useClass: CustomNgbDateParserFormatter },
+                            DateFormatterService
+                        ],
+                        exports: [HijriGregorianDatepickerComponent, NgxHijriGregorianDatepickerComponent]
+                    },] }
+        ];
+        return NgxHijriGregorianDatepickerModule;
+    }());
+
+    /**
+     * @fileoverview added by tsickle
+     * Generated from: public-api.ts
+     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+     */
+
+    /**
+     * @fileoverview added by tsickle
+     * Generated from: ngx-hijri-gregorian-datepicker.ts
+     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+     */
+
+    exports.DateType = DateType;
+    exports.DateFormatterService = DateFormatterService;
+    exports.NgxHijriGregorianDatepickerService = NgxHijriGregorianDatepickerService;
+    exports.NgxHijriGregorianDatepickerComponent = NgxHijriGregorianDatepickerComponent;
+    exports.HijriGregorianDatepickerComponent = HijriGregorianDatepickerComponent;
+    exports.NgxHijriGregorianDatepickerModule = NgxHijriGregorianDatepickerModule;
+    exports.ɵe = CustomNgbDateParserFormatter;
+    exports.ɵb = IslamicI18n;
+    exports.ɵa = HijriDatepickerComponent;
+    exports.ɵd = ProvideParentFormDirective;
+    exports.ɵc = test;
+
+    Object.defineProperty(exports, '__esModule', { value: true });
+
+})));
+
+//# sourceMappingURL=ngx-hijri-gregorian-datepicker.umd.js.map
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/bundles/ngx-hijri-gregorian-datepicker.umd.js.map b/node_modules/ngx-hijri-gregorian-datepicker/bundles/ngx-hijri-gregorian-datepicker.umd.js.map
index 9af7610..fb3e804 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/bundles/ngx-hijri-gregorian-datepicker.umd.js.map
+++ b/node_modules/ngx-hijri-gregorian-datepicker/bundles/ngx-hijri-gregorian-datepicker.umd.js.map
@@ -1 +1 @@
-{"version":3,"file":"ngx-hijri-gregorian-datepicker.umd.js.map","sources":["ng://ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/consts.ts","ng://ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/date-formatter.service.ts","ng://ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.service.ts","ng://ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.component.ts","ng://ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.ts","node_modules/tslib/tslib.es6.js","ng://ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/IslamicI18n.ts","ng://ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.ts","ng://ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.ts","ng://ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/provide-parent-form.directive.ts","ng://ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.module.ts"],"sourcesContent":["export class DateType {\r\n  public static Hijri = 1;\r\n  public static Gregorian  = 2;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgbDateStruct, NgbDateParserFormatter, NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport * as momentjs from 'moment';\r\nconst moment = momentjs;\r\n\r\n\r\nimport * as moment_ from 'moment-hijri';\r\nconst momentHijri = moment_;\r\n\r\n@Injectable()\r\nexport class DateFormatterService {\r\n\r\n  constructor(private parserFormatter: NgbDateParserFormatter) { }\r\n\r\n    ToString(date: NgbDateStruct): string {\r\n        const dateStr = this.parserFormatter.format(date);\r\n        return dateStr;\r\n    }\r\n\r\n    ToHijriDateStruct(hijriDate: string, format: string): NgbDate  {\r\n\r\n      const hijriMomentDate =  momentHijri(hijriDate , format); // Parse a Hijri date based on format.\r\n\r\n      const day = hijriMomentDate.iDate();\r\n      const month = +hijriMomentDate.iMonth() + 1 ;\r\n      const year = hijriMomentDate.iYear();\r\n\r\n      const ngDate =  new NgbDate(+year, month, +day);\r\n      return ngDate;\r\n   }\r\n\r\n\r\n    ToGregorianDateStruct(gregorianDate: string, format: string): NgbDate {\r\n\r\n      const momentDate = moment(gregorianDate, format); // Parse a Gregorian date based on format.\r\n\r\n      const day = momentDate.date();\r\n      const month = +momentDate.month() + 1;\r\n      const year = momentDate.year();\r\n\r\n      const ngDate = new NgbDate(+year, +month, +day);\r\n      return ngDate;\r\n    }\r\n\r\n    ToHijri(date: NgbDateStruct): NgbDateStruct {\r\n        if (!date) {\r\n            return null;\r\n        }\r\n        const dateStr = this.ToString(date);\r\n\r\n        const momentDate = momentHijri(dateStr, 'D/M/YYYY');\r\n\r\n        const day = momentDate.iDate();\r\n        const month = +momentDate.iMonth() + 1 ;\r\n        const year = momentDate.iYear();\r\n\r\n        const ngDate =  new NgbDate(+year, month, +day);\r\n        return ngDate;\r\n    }\r\n\r\n    ToGregorian(date: NgbDateStruct) {\r\n        if (!date) {\r\n            return null;\r\n        }\r\n\r\n        const dateStr = this.ToString(date);\r\n\r\n        const momentDate = momentHijri(dateStr, 'iD/iM/iYYYY');\r\n\r\n        const day = momentDate.locale('en').format('D');\r\n        const month = momentDate.locale('en').format('M') ;\r\n        const year = momentDate.locale('en').format('Y');\r\n\r\n        const ngDate =  new NgbDate(+year, +month, +day);\r\n        return ngDate;\r\n    }\r\n\r\n    GetTodayHijri(): NgbDateStruct {\r\n\r\n      const todayHijri = momentHijri().locale('en').format('iYYYY/iM/iD');\r\n\r\n      return this.ToHijriDateStruct(todayHijri, 'iYYYY/iM/iD') ;\r\n\r\n    }\r\n\r\n    GetTodayGregorian(): NgbDateStruct {\r\n\r\n      const todayGregorian = moment().locale('en').format('YYYY/M/D');\r\n\r\n      return this.ToGregorianDateStruct(todayGregorian, 'YYYY/M/D') ;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxHijriGregorianDatepickerService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-ngx-hijri-gregorian-datepicker',\n  template: `\n    <p>\n      ngx-hijri-gregorian-datepicker works!\n    </p>\n  `,\n  styles: []\n})\nexport class NgxHijriGregorianDatepickerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport {NgbDateStruct, NgbDatepicker} from '@ng-bootstrap/ng-bootstrap';\nimport { DateType } from './consts';\nimport { DateFormatterService } from './date-formatter.service';\n\nimport * as momentjs from 'moment';\nconst moment = momentjs;\n\n\nimport * as moment_ from 'moment-hijri';\nimport { NgForm, ControlContainer } from '@angular/forms';\nconst momentHijri = moment_;\n\n\n@Component({\n  selector: 'hijri-gregorian-datepicker',\n  templateUrl: './hijri-gregorian-datepicker.component.html'\n})\nexport class HijriGregorianDatepickerComponent implements OnInit {\n\n  @ViewChild('d') datePicker: any;\n\n\n  @Input() selectedDateType: DateType;\n  @Input() selectedDate: NgbDateStruct;\n  @Output() selectedDateChange: EventEmitter<NgbDateStruct> = new EventEmitter();\n\n  @Input() label: string;\n  @Input() showLabel = true;\n\n\n  @Input() readonly = false;\n  @Input() isRequired = false;\n  @Input() disabled = false;\n\n  @Input() minHijri: NgbDateStruct;\n  @Input() maxHijri: NgbDateStruct;\n  @Input() minGreg: NgbDateStruct;\n  @Input() maxGreg: NgbDateStruct;\n\n  @Input() hijriLabel: string;\n  @Input() GregLabel: string;\n\n  @Input() placeHolder: string;\n\n  get DateType() {\n    return DateType;\n  }\n\n  constructor( private dateFormatterService: DateFormatterService) { }\n\n  ngOnInit() {\n    if (!this.selectedDateType) {\n      this.selectedDateType = DateType.Hijri;\n    }\n  }\n\n  close() {\n    this.datePicker.close();\n  }\n\n  clear() {\n    this.selectedDate = undefined;\n    this.close();\n    this.selectedDateChange.emit(null);\n  }\n  getSelectedDate(): string {\n\n    let formattedDate = this.dateFormatterService.ToString(this.selectedDate);\n\n    if (this.selectedDateType == DateType.Hijri) {\n      return momentHijri(formattedDate, 'iD/iM/iYYYY').locale('en').format();\n    }\n\n    if (this.selectedDateType == DateType.Gregorian) {\n      return moment(formattedDate, 'D/M/YYYY').locale('en').format();\n    }\n  }\n\n  dateSelected() {\n    this.selectedDateChange.emit(this.selectedDate);\n  }\n\n  hijriClick() {\n    if (this.selectedDateType == DateType.Hijri) {\n      return;\n    }\n    this.selectedDateType = DateType.Hijri;\n    //to hijri\n    this.selectedDate = this.dateFormatterService.ToHijri(this.selectedDate);\n    this.selectedDateChange.emit(this.selectedDate);\n  }\n  gregClick() {\n    if (this.selectedDateType == DateType.Gregorian) {\n      return;\n    }\n    this.selectedDateType = DateType.Gregorian;\n    //to Gregorian\n    this.selectedDate = this.dateFormatterService.ToGregorian(this.selectedDate);\n    this.selectedDateChange.emit(this.selectedDate);\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nconst WEEKDAYS = ['Ø£Ø­Ø¯', 'Ø¥Ø«ÙÙÙ', 'Ø«ÙØ§Ø«Ø§Ø¡', 'Ø£Ø±Ø¨Ø¹Ø§Ø¡', 'Ø®ÙÙØ³', 'Ø¬ÙØ¹Ø©', 'Ø³Ø¨Øª'];\r\nconst MONTHS = ['ÙØ­Ø±Ù', 'ØµÙØ±', 'Ø±Ø¨ÙØ¹ Ø§ÙØ£ÙÙ', 'Ø±Ø¨ÙØ¹ Ø§ÙØ¢Ø®Ø±', 'Ø¬ÙØ§Ø¯Ù Ø§ÙØ£ÙÙÙ', 'Ø¬ÙØ§Ø¯Ù Ø§ÙØ¢Ø®Ø±Ø©', 'Ø±Ø¬Ø¨', 'Ø´Ø¹Ø¨Ø§Ù', 'Ø±ÙØ¶Ø§Ù', 'Ø´ÙØ§Ù',\r\n  'Ø°Ù Ø§ÙÙØ¹Ø¯Ø©', 'Ø°Ù Ø§ÙØ­Ø¬Ø©'];\r\n\r\n@Injectable()\r\nexport class IslamicI18n extends NgbDatepickerI18n {\r\n\r\n  getWeekdayShortName(weekday: number) {\r\n    return WEEKDAYS[weekday - 1];\r\n  }\r\n\r\n  getMonthShortName(month: number) {\r\n    return MONTHS[month - 1];\r\n  }\r\n\r\n  getMonthFullName(month: number) {\r\n    return MONTHS[month - 1];\r\n  }\r\n\r\n  getDayAriaLabel(date: NgbDateStruct): string {\r\n    return `${date.day}-${date.month}-${date.year}`;\r\n  }\r\n}\r\n","import { Component, OnInit, ViewEncapsulation, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { NgbCalendar, NgbCalendarIslamicUmalqura, NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { IslamicI18n } from '../IslamicI18n';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'hijri-date-picker',\n  templateUrl: './hijri-datepicker.component.html',\n  providers: [\n    { provide: NgbCalendar, useClass: NgbCalendarIslamicUmalqura },\n    { provide: NgbDatepickerI18n, useClass: IslamicI18n }\n  ],\n  styleUrls: [\n    './hijri-date-picker.component.css'\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class HijriDatepickerComponent {\n\n  @ViewChild('d') datePicker: any;\n\n  @Input() selectedDate: NgbDateStruct;\n  @Output() selectedDateChange: EventEmitter<NgbDateStruct> = new EventEmitter();\n\n  @Input() readonly = false;\n  @Input() isRequired = false;\n  @Input() disabled = false;\n  @Input() min: NgbDateStruct;\n  @Input() max: NgbDateStruct;\n  @Input() name: string;\n\n  @Input() placeHolder: string;\n\n  constructor() { }\n\n  changeDate() {\n    this.selectedDateChange.emit(this.selectedDate);\n  }\n\n  onBlur() {\n    if (!this.selectedDate) {\n      this.selectedDateChange.emit(null);\n    }\n  }\n\n  clear() {\n    this.selectedDate = undefined;\n    this.datePicker.close();\n    this.selectedDateChange.emit(null);\n  }\n\n}\n","import { NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class CustomNgbDateParserFormatter extends NgbDateParserFormatter {\r\n  datePipe = new DatePipe('en-US');\r\n  constructor() {\r\n    super();\r\n  }\r\n  format(date: NgbDateStruct): string {\r\n    if (date === null) {\r\n      return '';\r\n    }\r\n    try {\r\n      return this.datePipe.transform(new Date(date.year, date.month - 1, date.day), 'd/M/yyyy');\r\n    } catch (e) {\r\n      return '';\r\n    }\r\n  }\r\n  parse(value: string): NgbDateStruct {\r\n    let returnVal: NgbDateStruct;\r\n    if (!value) {\r\n      returnVal = null;\r\n    } else {\r\n      try {\r\n        let dateParts = this.datePipe.transform(value, 'M-d-y').split('-');\r\n        returnVal = { year: parseInt(dateParts[2]), month: parseInt(dateParts[0]), day: parseInt(dateParts[1]) };\r\n      } catch (e) {\r\n        returnVal = null;\r\n      }\r\n    }\r\n    return returnVal;\r\n  }\r\n}\r\n","import { Directive, Optional, SkipSelf } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\nexport function test(form: NgForm) {\n  return form;\n}\n\n@Directive({\n  selector: '[provideParentForm]',\n  providers: [\n    {\n      provide: ControlContainer,\n      useFactory:  test ,\n      deps: [[new Optional(), new SkipSelf(), NgForm]]\n    }\n]\n})\nexport class ProvideParentFormDirective {\n\n  constructor() { }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxHijriGregorianDatepickerComponent } from './ngx-hijri-gregorian-datepicker.component';\nimport { HijriGregorianDatepickerComponent } from './hijri-gregorian-datepicker/hijri-gregorian-datepicker.component';\nimport { HijriDatepickerComponent } from './hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgbModule, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport { DateFormatterService } from './hijri-gregorian-datepicker/date-formatter.service';\nimport { CustomNgbDateParserFormatter } from './hijri-gregorian-datepicker/CustomNgbDateParserFormatter';\nimport { ProvideParentFormDirective } from './hijri-gregorian-datepicker/provide-parent-form.directive';\n\n@NgModule({\n  declarations: [\n    NgxHijriGregorianDatepickerComponent,\n    HijriGregorianDatepickerComponent,\n    HijriDatepickerComponent,\n    ProvideParentFormDirective\n  ],\n  imports: [\n    CommonModule ,\n    ReactiveFormsModule,\n    FormsModule,\n    NgbModule\n  ],\n  providers: [\n    {provide: NgbDateParserFormatter, useClass: CustomNgbDateParserFormatter},\n    DateFormatterService\n  ],\n  exports: [ HijriGregorianDatepickerComponent, NgxHijriGregorianDatepickerComponent]\n})\nexport class NgxHijriGregorianDatepickerModule { }\n"],"names":["NgbDate","Injectable","NgbDateParserFormatter","Component","moment","momentHijri","EventEmitter","ViewChild","Input","Output","tslib_1.__extends","NgbDatepickerI18n","NgbCalendar","NgbCalendarIslamicUmalqura","ViewEncapsulation","DatePipe","Directive","ControlContainer","Optional","SkipSelf","NgForm","NgModule","CommonModule","ReactiveFormsModule","FormsModule","NgbModule"],"mappings":"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"}
+{"version":3,"file":"ngx-hijri-gregorian-datepicker.umd.js","sources":["ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/consts.ts","ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/date-formatter.service.ts","ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.service.ts","ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.component.ts","ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.ts","node_modules/tslib/tslib.es6.js","ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/IslamicI18n.ts","ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.ts","ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.ts","ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/provide-parent-form.directive.ts","ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.module.ts"],"names":["NgbDate","Injectable","NgbDateParserFormatter","Component","moment","momentHijri","EventEmitter","ViewChild","Input","Output","tslib_1.__extends","NgbDatepickerI18n","NgbCalendar","NgbCalendarIslamicUmalqura","ViewEncapsulation","DatePipe","Directive","ControlContainer","Optional","SkipSelf","NgForm","NgModule","CommonModule","ReactiveFormsModule","FormsModule","NgbModule"],"mappings":"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","sourcesContent":["export class DateType {\r\n  public static Hijri = 1;\r\n  public static Gregorian  = 2;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgbDateStruct, NgbDateParserFormatter, NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport * as momentjs from 'moment';\r\nconst moment = momentjs;\r\n\r\n\r\nimport * as moment_ from 'moment-hijri';\r\nconst momentHijri = moment_;\r\n\r\n@Injectable()\r\nexport class DateFormatterService {\r\n\r\n  constructor(private parserFormatter: NgbDateParserFormatter) { }\r\n\r\n    ToString(date: NgbDateStruct): string {\r\n        const dateStr = this.parserFormatter.format(date);\r\n        return dateStr;\r\n    }\r\n\r\n    ToHijriDateStruct(hijriDate: string, format: string): NgbDate  {\r\n\r\n      const hijriMomentDate =  momentHijri(hijriDate , format); // Parse a Hijri date based on format.\r\n\r\n      const day = hijriMomentDate.iDate();\r\n      const month = +hijriMomentDate.iMonth() + 1 ;\r\n      const year = hijriMomentDate.iYear();\r\n\r\n      const ngDate =  new NgbDate(+year, month, +day);\r\n      return ngDate;\r\n   }\r\n\r\n\r\n    ToGregorianDateStruct(gregorianDate: string, format: string): NgbDate {\r\n\r\n      const momentDate = moment(gregorianDate, format); // Parse a Gregorian date based on format.\r\n\r\n      const day = momentDate.date();\r\n      const month = +momentDate.month() + 1;\r\n      const year = momentDate.year();\r\n\r\n      const ngDate = new NgbDate(+year, +month, +day);\r\n      return ngDate;\r\n    }\r\n\r\n    ToHijri(date: NgbDateStruct): NgbDateStruct {\r\n        if (!date) {\r\n            return null;\r\n        }\r\n        const dateStr = this.ToString(date);\r\n\r\n        const momentDate = momentHijri(dateStr, 'D/M/YYYY');\r\n\r\n        const day = momentDate.iDate();\r\n        const month = +momentDate.iMonth() + 1 ;\r\n        const year = momentDate.iYear();\r\n\r\n        const ngDate =  new NgbDate(+year, month, +day);\r\n        return ngDate;\r\n    }\r\n\r\n    ToGregorian(date: NgbDateStruct) {\r\n        if (!date) {\r\n            return null;\r\n        }\r\n\r\n        const dateStr = this.ToString(date);\r\n\r\n        const momentDate = momentHijri(dateStr, 'iD/iM/iYYYY');\r\n\r\n        const day = momentDate.locale('en').format('D');\r\n        const month = momentDate.locale('en').format('M') ;\r\n        const year = momentDate.locale('en').format('Y');\r\n\r\n        const ngDate =  new NgbDate(+year, +month, +day);\r\n        return ngDate;\r\n    }\r\n\r\n    GetTodayHijri(): NgbDateStruct {\r\n\r\n      const todayHijri = momentHijri().locale('en').format('iYYYY/iM/iD');\r\n\r\n      return this.ToHijriDateStruct(todayHijri, 'iYYYY/iM/iD') ;\r\n\r\n    }\r\n\r\n    GetTodayGregorian(): NgbDateStruct {\r\n\r\n      const todayGregorian = moment().locale('en').format('YYYY/M/D');\r\n\r\n      return this.ToGregorianDateStruct(todayGregorian, 'YYYY/M/D') ;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxHijriGregorianDatepickerService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-ngx-hijri-gregorian-datepicker',\n  template: `\n    <p>\n      ngx-hijri-gregorian-datepicker works!\n    </p>\n  `,\n  styles: []\n})\nexport class NgxHijriGregorianDatepickerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport {NgbDateStruct, NgbDatepicker} from '@ng-bootstrap/ng-bootstrap';\nimport { DateType } from './consts';\nimport { DateFormatterService } from './date-formatter.service';\n\nimport * as momentjs from 'moment';\nconst moment = momentjs;\n\n\nimport * as moment_ from 'moment-hijri';\nimport { NgForm, ControlContainer } from '@angular/forms';\nconst momentHijri = moment_;\n\n\n@Component({\n  selector: 'hijri-gregorian-datepicker',\n  templateUrl: './hijri-gregorian-datepicker.component.html'\n})\nexport class HijriGregorianDatepickerComponent implements OnInit {\n\n  @ViewChild('d') datePicker: any;\n\n\n  @Input() selectedDateType: DateType;\n  @Input() selectedDate: NgbDateStruct;\n  @Output() selectedDateChange: EventEmitter<NgbDateStruct> = new EventEmitter();\n\n  @Input() label: string;\n  @Input() showLabel = true;\n\n\n  @Input() readonly = false;\n  @Input() isRequired = false;\n  @Input() disabled = false;\n\n  @Input() minHijri: NgbDateStruct;\n  @Input() maxHijri: NgbDateStruct;\n  @Input() minGreg: NgbDateStruct;\n  @Input() maxGreg: NgbDateStruct;\n\n  @Input() hijriLabel: string;\n  @Input() GregLabel: string;\n\n  @Input() placeHolder: string;\n\n  get DateType() {\n    return DateType;\n  }\n\n  constructor( private dateFormatterService: DateFormatterService) { }\n\n  ngOnInit() {\n    if (!this.selectedDateType) {\n      this.selectedDateType = DateType.Hijri;\n    }\n  }\n\n  close() {\n    this.datePicker.close();\n  }\n\n  clear() {\n    this.selectedDate = undefined;\n    this.close();\n    this.selectedDateChange.emit(null);\n  }\n  getSelectedDate(): string {\n\n    let formattedDate = this.dateFormatterService.ToString(this.selectedDate);\n\n    if (this.selectedDateType == DateType.Hijri) {\n      return momentHijri(formattedDate, 'iD/iM/iYYYY').locale('en').format();\n    }\n\n    if (this.selectedDateType == DateType.Gregorian) {\n      return moment(formattedDate, 'D/M/YYYY').locale('en').format();\n    }\n  }\n\n  dateSelected() {\n    this.selectedDateChange.emit(this.selectedDate);\n  }\n\n  hijriClick() {\n    if (this.selectedDateType == DateType.Hijri) {\n      return;\n    }\n    this.selectedDateType = DateType.Hijri;\n    //to hijri\n    this.selectedDate = this.dateFormatterService.ToHijri(this.selectedDate);\n    this.selectedDateChange.emit(this.selectedDate);\n  }\n  gregClick() {\n    if (this.selectedDateType == DateType.Gregorian) {\n      return;\n    }\n    this.selectedDateType = DateType.Gregorian;\n    //to Gregorian\n    this.selectedDate = this.dateFormatterService.ToGregorian(this.selectedDate);\n    this.selectedDateChange.emit(this.selectedDate);\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nconst WEEKDAYS = ['Ø£Ø­Ø¯', 'Ø¥Ø«ÙÙÙ', 'Ø«ÙØ§Ø«Ø§Ø¡', 'Ø£Ø±Ø¨Ø¹Ø§Ø¡', 'Ø®ÙÙØ³', 'Ø¬ÙØ¹Ø©', 'Ø³Ø¨Øª'];\r\nconst MONTHS = ['ÙØ­Ø±Ù', 'ØµÙØ±', 'Ø±Ø¨ÙØ¹ Ø§ÙØ£ÙÙ', 'Ø±Ø¨ÙØ¹ Ø§ÙØ¢Ø®Ø±', 'Ø¬ÙØ§Ø¯Ù Ø§ÙØ£ÙÙÙ', 'Ø¬ÙØ§Ø¯Ù Ø§ÙØ¢Ø®Ø±Ø©', 'Ø±Ø¬Ø¨', 'Ø´Ø¹Ø¨Ø§Ù', 'Ø±ÙØ¶Ø§Ù', 'Ø´ÙØ§Ù',\r\n  'Ø°Ù Ø§ÙÙØ¹Ø¯Ø©', 'Ø°Ù Ø§ÙØ­Ø¬Ø©'];\r\n\r\n@Injectable()\r\nexport class IslamicI18n extends NgbDatepickerI18n {\r\n\r\n  getWeekdayShortName(weekday: number) {\r\n    return WEEKDAYS[weekday - 1];\r\n  }\r\n\r\n  getMonthShortName(month: number) {\r\n    return MONTHS[month - 1];\r\n  }\r\n\r\n  getMonthFullName(month: number) {\r\n    return MONTHS[month - 1];\r\n  }\r\n\r\n  getDayAriaLabel(date: NgbDateStruct): string {\r\n    return `${date.day}-${date.month}-${date.year}`;\r\n  }\r\n}\r\n","import { Component, OnInit, ViewEncapsulation, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { NgbCalendar, NgbCalendarIslamicUmalqura, NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { IslamicI18n } from '../IslamicI18n';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'hijri-date-picker',\n  templateUrl: './hijri-datepicker.component.html',\n  providers: [\n    { provide: NgbCalendar, useClass: NgbCalendarIslamicUmalqura },\n    { provide: NgbDatepickerI18n, useClass: IslamicI18n }\n  ],\n  styleUrls: [\n    './hijri-date-picker.component.css'\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class HijriDatepickerComponent {\n\n  @ViewChild('d') datePicker: any;\n\n  @Input() selectedDate: NgbDateStruct;\n  @Output() selectedDateChange: EventEmitter<NgbDateStruct> = new EventEmitter();\n\n  @Input() readonly = false;\n  @Input() isRequired = false;\n  @Input() disabled = false;\n  @Input() min: NgbDateStruct;\n  @Input() max: NgbDateStruct;\n  @Input() name: string;\n\n  @Input() placeHolder: string;\n\n  constructor() { }\n\n  changeDate() {\n    this.selectedDateChange.emit(this.selectedDate);\n  }\n\n  onBlur() {\n    if (!this.selectedDate) {\n      this.selectedDateChange.emit(null);\n    }\n  }\n\n  clear() {\n    this.selectedDate = undefined;\n    this.datePicker.close();\n    this.selectedDateChange.emit(null);\n  }\n\n}\n","import { NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class CustomNgbDateParserFormatter extends NgbDateParserFormatter {\r\n  datePipe = new DatePipe('en-US');\r\n  constructor() {\r\n    super();\r\n  }\r\n  format(date: NgbDateStruct): string {\r\n    if (date === null) {\r\n      return '';\r\n    }\r\n    try {\r\n      return this.datePipe.transform(new Date(date.year, date.month - 1, date.day), 'd/M/yyyy');\r\n    } catch (e) {\r\n      return '';\r\n    }\r\n  }\r\n  parse(value: string): NgbDateStruct {\r\n    let returnVal: NgbDateStruct;\r\n    if (!value) {\r\n      returnVal = null;\r\n    } else {\r\n      try {\r\n        let dateParts = this.datePipe.transform(value, 'M-d-y').split('-');\r\n        returnVal = { year: parseInt(dateParts[2]), month: parseInt(dateParts[0]), day: parseInt(dateParts[1]) };\r\n      } catch (e) {\r\n        returnVal = null;\r\n      }\r\n    }\r\n    return returnVal;\r\n  }\r\n}\r\n","import { Directive, Optional, SkipSelf } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\nexport function test(form: NgForm) {\n  return form;\n}\n\n@Directive({\n  selector: '[provideParentForm]',\n  providers: [\n    {\n      provide: ControlContainer,\n      useFactory:  test ,\n      deps: [[new Optional(), new SkipSelf(), NgForm]]\n    }\n]\n})\nexport class ProvideParentFormDirective {\n\n  constructor() { }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxHijriGregorianDatepickerComponent } from './ngx-hijri-gregorian-datepicker.component';\nimport { HijriGregorianDatepickerComponent } from './hijri-gregorian-datepicker/hijri-gregorian-datepicker.component';\nimport { HijriDatepickerComponent } from './hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgbModule, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport { DateFormatterService } from './hijri-gregorian-datepicker/date-formatter.service';\nimport { CustomNgbDateParserFormatter } from './hijri-gregorian-datepicker/CustomNgbDateParserFormatter';\nimport { ProvideParentFormDirective } from './hijri-gregorian-datepicker/provide-parent-form.directive';\n\n@NgModule({\n  declarations: [\n    NgxHijriGregorianDatepickerComponent,\n    HijriGregorianDatepickerComponent,\n    HijriDatepickerComponent,\n    ProvideParentFormDirective\n  ],\n  imports: [\n    CommonModule ,\n    ReactiveFormsModule,\n    FormsModule,\n    NgbModule\n  ],\n  providers: [\n    {provide: NgbDateParserFormatter, useClass: CustomNgbDateParserFormatter},\n    DateFormatterService\n  ],\n  exports: [ HijriGregorianDatepickerComponent, NgxHijriGregorianDatepickerComponent]\n})\nexport class NgxHijriGregorianDatepickerModule { }\n"]}
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/bundles/ngx-hijri-gregorian-datepicker.umd.js.map.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/bundles/ngx-hijri-gregorian-datepicker.umd.js.map.__ivy_ngcc_bak
new file mode 100644
index 0000000..9af7610
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/bundles/ngx-hijri-gregorian-datepicker.umd.js.map.__ivy_ngcc_bak
@@ -0,0 +1 @@
+{"version":3,"file":"ngx-hijri-gregorian-datepicker.umd.js.map","sources":["ng://ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/consts.ts","ng://ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/date-formatter.service.ts","ng://ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.service.ts","ng://ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.component.ts","ng://ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.ts","node_modules/tslib/tslib.es6.js","ng://ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/IslamicI18n.ts","ng://ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.ts","ng://ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.ts","ng://ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/provide-parent-form.directive.ts","ng://ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.module.ts"],"sourcesContent":["export class DateType {\r\n  public static Hijri = 1;\r\n  public static Gregorian  = 2;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgbDateStruct, NgbDateParserFormatter, NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport * as momentjs from 'moment';\r\nconst moment = momentjs;\r\n\r\n\r\nimport * as moment_ from 'moment-hijri';\r\nconst momentHijri = moment_;\r\n\r\n@Injectable()\r\nexport class DateFormatterService {\r\n\r\n  constructor(private parserFormatter: NgbDateParserFormatter) { }\r\n\r\n    ToString(date: NgbDateStruct): string {\r\n        const dateStr = this.parserFormatter.format(date);\r\n        return dateStr;\r\n    }\r\n\r\n    ToHijriDateStruct(hijriDate: string, format: string): NgbDate  {\r\n\r\n      const hijriMomentDate =  momentHijri(hijriDate , format); // Parse a Hijri date based on format.\r\n\r\n      const day = hijriMomentDate.iDate();\r\n      const month = +hijriMomentDate.iMonth() + 1 ;\r\n      const year = hijriMomentDate.iYear();\r\n\r\n      const ngDate =  new NgbDate(+year, month, +day);\r\n      return ngDate;\r\n   }\r\n\r\n\r\n    ToGregorianDateStruct(gregorianDate: string, format: string): NgbDate {\r\n\r\n      const momentDate = moment(gregorianDate, format); // Parse a Gregorian date based on format.\r\n\r\n      const day = momentDate.date();\r\n      const month = +momentDate.month() + 1;\r\n      const year = momentDate.year();\r\n\r\n      const ngDate = new NgbDate(+year, +month, +day);\r\n      return ngDate;\r\n    }\r\n\r\n    ToHijri(date: NgbDateStruct): NgbDateStruct {\r\n        if (!date) {\r\n            return null;\r\n        }\r\n        const dateStr = this.ToString(date);\r\n\r\n        const momentDate = momentHijri(dateStr, 'D/M/YYYY');\r\n\r\n        const day = momentDate.iDate();\r\n        const month = +momentDate.iMonth() + 1 ;\r\n        const year = momentDate.iYear();\r\n\r\n        const ngDate =  new NgbDate(+year, month, +day);\r\n        return ngDate;\r\n    }\r\n\r\n    ToGregorian(date: NgbDateStruct) {\r\n        if (!date) {\r\n            return null;\r\n        }\r\n\r\n        const dateStr = this.ToString(date);\r\n\r\n        const momentDate = momentHijri(dateStr, 'iD/iM/iYYYY');\r\n\r\n        const day = momentDate.locale('en').format('D');\r\n        const month = momentDate.locale('en').format('M') ;\r\n        const year = momentDate.locale('en').format('Y');\r\n\r\n        const ngDate =  new NgbDate(+year, +month, +day);\r\n        return ngDate;\r\n    }\r\n\r\n    GetTodayHijri(): NgbDateStruct {\r\n\r\n      const todayHijri = momentHijri().locale('en').format('iYYYY/iM/iD');\r\n\r\n      return this.ToHijriDateStruct(todayHijri, 'iYYYY/iM/iD') ;\r\n\r\n    }\r\n\r\n    GetTodayGregorian(): NgbDateStruct {\r\n\r\n      const todayGregorian = moment().locale('en').format('YYYY/M/D');\r\n\r\n      return this.ToGregorianDateStruct(todayGregorian, 'YYYY/M/D') ;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxHijriGregorianDatepickerService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-ngx-hijri-gregorian-datepicker',\n  template: `\n    <p>\n      ngx-hijri-gregorian-datepicker works!\n    </p>\n  `,\n  styles: []\n})\nexport class NgxHijriGregorianDatepickerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport {NgbDateStruct, NgbDatepicker} from '@ng-bootstrap/ng-bootstrap';\nimport { DateType } from './consts';\nimport { DateFormatterService } from './date-formatter.service';\n\nimport * as momentjs from 'moment';\nconst moment = momentjs;\n\n\nimport * as moment_ from 'moment-hijri';\nimport { NgForm, ControlContainer } from '@angular/forms';\nconst momentHijri = moment_;\n\n\n@Component({\n  selector: 'hijri-gregorian-datepicker',\n  templateUrl: './hijri-gregorian-datepicker.component.html'\n})\nexport class HijriGregorianDatepickerComponent implements OnInit {\n\n  @ViewChild('d') datePicker: any;\n\n\n  @Input() selectedDateType: DateType;\n  @Input() selectedDate: NgbDateStruct;\n  @Output() selectedDateChange: EventEmitter<NgbDateStruct> = new EventEmitter();\n\n  @Input() label: string;\n  @Input() showLabel = true;\n\n\n  @Input() readonly = false;\n  @Input() isRequired = false;\n  @Input() disabled = false;\n\n  @Input() minHijri: NgbDateStruct;\n  @Input() maxHijri: NgbDateStruct;\n  @Input() minGreg: NgbDateStruct;\n  @Input() maxGreg: NgbDateStruct;\n\n  @Input() hijriLabel: string;\n  @Input() GregLabel: string;\n\n  @Input() placeHolder: string;\n\n  get DateType() {\n    return DateType;\n  }\n\n  constructor( private dateFormatterService: DateFormatterService) { }\n\n  ngOnInit() {\n    if (!this.selectedDateType) {\n      this.selectedDateType = DateType.Hijri;\n    }\n  }\n\n  close() {\n    this.datePicker.close();\n  }\n\n  clear() {\n    this.selectedDate = undefined;\n    this.close();\n    this.selectedDateChange.emit(null);\n  }\n  getSelectedDate(): string {\n\n    let formattedDate = this.dateFormatterService.ToString(this.selectedDate);\n\n    if (this.selectedDateType == DateType.Hijri) {\n      return momentHijri(formattedDate, 'iD/iM/iYYYY').locale('en').format();\n    }\n\n    if (this.selectedDateType == DateType.Gregorian) {\n      return moment(formattedDate, 'D/M/YYYY').locale('en').format();\n    }\n  }\n\n  dateSelected() {\n    this.selectedDateChange.emit(this.selectedDate);\n  }\n\n  hijriClick() {\n    if (this.selectedDateType == DateType.Hijri) {\n      return;\n    }\n    this.selectedDateType = DateType.Hijri;\n    //to hijri\n    this.selectedDate = this.dateFormatterService.ToHijri(this.selectedDate);\n    this.selectedDateChange.emit(this.selectedDate);\n  }\n  gregClick() {\n    if (this.selectedDateType == DateType.Gregorian) {\n      return;\n    }\n    this.selectedDateType = DateType.Gregorian;\n    //to Gregorian\n    this.selectedDate = this.dateFormatterService.ToGregorian(this.selectedDate);\n    this.selectedDateChange.emit(this.selectedDate);\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nconst WEEKDAYS = ['Ø£Ø­Ø¯', 'Ø¥Ø«ÙÙÙ', 'Ø«ÙØ§Ø«Ø§Ø¡', 'Ø£Ø±Ø¨Ø¹Ø§Ø¡', 'Ø®ÙÙØ³', 'Ø¬ÙØ¹Ø©', 'Ø³Ø¨Øª'];\r\nconst MONTHS = ['ÙØ­Ø±Ù', 'ØµÙØ±', 'Ø±Ø¨ÙØ¹ Ø§ÙØ£ÙÙ', 'Ø±Ø¨ÙØ¹ Ø§ÙØ¢Ø®Ø±', 'Ø¬ÙØ§Ø¯Ù Ø§ÙØ£ÙÙÙ', 'Ø¬ÙØ§Ø¯Ù Ø§ÙØ¢Ø®Ø±Ø©', 'Ø±Ø¬Ø¨', 'Ø´Ø¹Ø¨Ø§Ù', 'Ø±ÙØ¶Ø§Ù', 'Ø´ÙØ§Ù',\r\n  'Ø°Ù Ø§ÙÙØ¹Ø¯Ø©', 'Ø°Ù Ø§ÙØ­Ø¬Ø©'];\r\n\r\n@Injectable()\r\nexport class IslamicI18n extends NgbDatepickerI18n {\r\n\r\n  getWeekdayShortName(weekday: number) {\r\n    return WEEKDAYS[weekday - 1];\r\n  }\r\n\r\n  getMonthShortName(month: number) {\r\n    return MONTHS[month - 1];\r\n  }\r\n\r\n  getMonthFullName(month: number) {\r\n    return MONTHS[month - 1];\r\n  }\r\n\r\n  getDayAriaLabel(date: NgbDateStruct): string {\r\n    return `${date.day}-${date.month}-${date.year}`;\r\n  }\r\n}\r\n","import { Component, OnInit, ViewEncapsulation, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { NgbCalendar, NgbCalendarIslamicUmalqura, NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { IslamicI18n } from '../IslamicI18n';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'hijri-date-picker',\n  templateUrl: './hijri-datepicker.component.html',\n  providers: [\n    { provide: NgbCalendar, useClass: NgbCalendarIslamicUmalqura },\n    { provide: NgbDatepickerI18n, useClass: IslamicI18n }\n  ],\n  styleUrls: [\n    './hijri-date-picker.component.css'\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class HijriDatepickerComponent {\n\n  @ViewChild('d') datePicker: any;\n\n  @Input() selectedDate: NgbDateStruct;\n  @Output() selectedDateChange: EventEmitter<NgbDateStruct> = new EventEmitter();\n\n  @Input() readonly = false;\n  @Input() isRequired = false;\n  @Input() disabled = false;\n  @Input() min: NgbDateStruct;\n  @Input() max: NgbDateStruct;\n  @Input() name: string;\n\n  @Input() placeHolder: string;\n\n  constructor() { }\n\n  changeDate() {\n    this.selectedDateChange.emit(this.selectedDate);\n  }\n\n  onBlur() {\n    if (!this.selectedDate) {\n      this.selectedDateChange.emit(null);\n    }\n  }\n\n  clear() {\n    this.selectedDate = undefined;\n    this.datePicker.close();\n    this.selectedDateChange.emit(null);\n  }\n\n}\n","import { NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class CustomNgbDateParserFormatter extends NgbDateParserFormatter {\r\n  datePipe = new DatePipe('en-US');\r\n  constructor() {\r\n    super();\r\n  }\r\n  format(date: NgbDateStruct): string {\r\n    if (date === null) {\r\n      return '';\r\n    }\r\n    try {\r\n      return this.datePipe.transform(new Date(date.year, date.month - 1, date.day), 'd/M/yyyy');\r\n    } catch (e) {\r\n      return '';\r\n    }\r\n  }\r\n  parse(value: string): NgbDateStruct {\r\n    let returnVal: NgbDateStruct;\r\n    if (!value) {\r\n      returnVal = null;\r\n    } else {\r\n      try {\r\n        let dateParts = this.datePipe.transform(value, 'M-d-y').split('-');\r\n        returnVal = { year: parseInt(dateParts[2]), month: parseInt(dateParts[0]), day: parseInt(dateParts[1]) };\r\n      } catch (e) {\r\n        returnVal = null;\r\n      }\r\n    }\r\n    return returnVal;\r\n  }\r\n}\r\n","import { Directive, Optional, SkipSelf } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\nexport function test(form: NgForm) {\n  return form;\n}\n\n@Directive({\n  selector: '[provideParentForm]',\n  providers: [\n    {\n      provide: ControlContainer,\n      useFactory:  test ,\n      deps: [[new Optional(), new SkipSelf(), NgForm]]\n    }\n]\n})\nexport class ProvideParentFormDirective {\n\n  constructor() { }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxHijriGregorianDatepickerComponent } from './ngx-hijri-gregorian-datepicker.component';\nimport { HijriGregorianDatepickerComponent } from './hijri-gregorian-datepicker/hijri-gregorian-datepicker.component';\nimport { HijriDatepickerComponent } from './hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgbModule, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport { DateFormatterService } from './hijri-gregorian-datepicker/date-formatter.service';\nimport { CustomNgbDateParserFormatter } from './hijri-gregorian-datepicker/CustomNgbDateParserFormatter';\nimport { ProvideParentFormDirective } from './hijri-gregorian-datepicker/provide-parent-form.directive';\n\n@NgModule({\n  declarations: [\n    NgxHijriGregorianDatepickerComponent,\n    HijriGregorianDatepickerComponent,\n    HijriDatepickerComponent,\n    ProvideParentFormDirective\n  ],\n  imports: [\n    CommonModule ,\n    ReactiveFormsModule,\n    FormsModule,\n    NgbModule\n  ],\n  providers: [\n    {provide: NgbDateParserFormatter, useClass: CustomNgbDateParserFormatter},\n    DateFormatterService\n  ],\n  exports: [ HijriGregorianDatepickerComponent, NgxHijriGregorianDatepickerComponent]\n})\nexport class NgxHijriGregorianDatepickerModule { }\n"],"names":["NgbDate","Injectable","NgbDateParserFormatter","Component","moment","momentHijri","EventEmitter","ViewChild","Input","Output","tslib_1.__extends","NgbDatepickerI18n","NgbCalendar","NgbCalendarIslamicUmalqura","ViewEncapsulation","DatePipe","Directive","ControlContainer","Optional","SkipSelf","NgForm","NgModule","CommonModule","ReactiveFormsModule","FormsModule","NgbModule"],"mappings":";;;;;;;;;;;AAAA;QAAA;SAGC;QAFe,cAAK,GAAG,CAAC,CAAC;QACV,kBAAS,GAAI,CAAC,CAAC;QAC/B,eAAC;KAHD;;;;;;;ACAA;QAIM,MAAM,GAAG,QAAQ;AAGvB;QACM,WAAW,GAAG,OAAO;AAE3B;QAGE,8BAAoB,eAAuC;YAAvC,oBAAe,GAAf,eAAe,CAAwB;SAAK;;;;;QAE9D,uCAAQ;;;;YAAR,UAAS,IAAmB;;oBAClB,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC;gBACjD,OAAO,OAAO,CAAC;aAClB;;;;;;QAED,gDAAiB;;;;;YAAjB,UAAkB,SAAiB,EAAE,MAAc;;oBAE3C,eAAe,GAAI,WAAW,CAAC,SAAS,EAAG,MAAM,CAAC;;;oBAElD,GAAG,GAAG,eAAe,CAAC,KAAK,EAAE;;oBAC7B,KAAK,GAAG,CAAC,eAAe,CAAC,MAAM,EAAE,GAAG,CAAC;;oBACrC,IAAI,GAAG,eAAe,CAAC,KAAK,EAAE;;oBAE9B,MAAM,GAAI,IAAIA,mBAAO,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC;gBAC/C,OAAO,MAAM,CAAC;aAChB;;;;;;QAGA,oDAAqB;;;;;YAArB,UAAsB,aAAqB,EAAE,MAAc;;oBAEnD,UAAU,GAAG,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC;;;oBAE1C,GAAG,GAAG,UAAU,CAAC,IAAI,EAAE;;oBACvB,KAAK,GAAG,CAAC,UAAU,CAAC,KAAK,EAAE,GAAG,CAAC;;oBAC/B,IAAI,GAAG,UAAU,CAAC,IAAI,EAAE;;oBAExB,MAAM,GAAG,IAAIA,mBAAO,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC;gBAC/C,OAAO,MAAM,CAAC;aACf;;;;;QAED,sCAAO;;;;YAAP,UAAQ,IAAmB;gBACvB,IAAI,CAAC,IAAI,EAAE;oBACP,OAAO,IAAI,CAAC;iBACf;;oBACK,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;;oBAE7B,UAAU,GAAG,WAAW,CAAC,OAAO,EAAE,UAAU,CAAC;;oBAE7C,GAAG,GAAG,UAAU,CAAC,KAAK,EAAE;;oBACxB,KAAK,GAAG,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,CAAC;;oBAChC,IAAI,GAAG,UAAU,CAAC,KAAK,EAAE;;oBAEzB,MAAM,GAAI,IAAIA,mBAAO,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC;gBAC/C,OAAO,MAAM,CAAC;aACjB;;;;;QAED,0CAAW;;;;YAAX,UAAY,IAAmB;gBAC3B,IAAI,CAAC,IAAI,EAAE;oBACP,OAAO,IAAI,CAAC;iBACf;;oBAEK,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;;oBAE7B,UAAU,GAAG,WAAW,CAAC,OAAO,EAAE,aAAa,CAAC;;oBAEhD,GAAG,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC;;oBACzC,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC;;oBAC3C,IAAI,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC;;oBAE1C,MAAM,GAAI,IAAIA,mBAAO,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC;gBAChD,OAAO,MAAM,CAAC;aACjB;;;;QAED,4CAAa;;;YAAb;;oBAEQ,UAAU,GAAG,WAAW,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC;gBAEnE,OAAO,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,aAAa,CAAC,CAAE;aAE3D;;;;QAED,gDAAiB;;;YAAjB;;oBAEQ,cAAc,GAAG,MAAM,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC;gBAE/D,OAAO,IAAI,CAAC,qBAAqB,CAAC,cAAc,EAAE,UAAU,CAAC,CAAE;aAChE;;oBAjFJC,aAAU;;;;;wBATaC,kCAAsB;;;QA4F9C,2BAAC;KAnFD;;;;;;;ACVA;QAOE;SAAiB;;oBALlBD,aAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;;iDAJD;KAEA;;;;;;;ACFA;QAaE;SAAiB;;;;QAEjB,uDAAQ;;;YAAR;aACC;;oBAdFE,YAAS,SAAC;wBACT,QAAQ,EAAE,oCAAoC;wBAC9C,QAAQ,EAAE,sEAIT;qBAEF;;;;QAQD,2CAAC;KAhBD;;;;;;;ACFA;QAMMC,QAAM,GAAG,QAAQ;AAGvB;QAEMC,aAAW,GAAG,OAAO;AAG3B;QAmCE,2CAAqB,oBAA0C;YAA1C,yBAAoB,GAApB,oBAAoB,CAAsB;YAxBrD,uBAAkB,GAAgC,IAAIC,eAAY,EAAE,CAAC;YAGtE,cAAS,GAAG,IAAI,CAAC;YAGjB,aAAQ,GAAG,KAAK,CAAC;YACjB,eAAU,GAAG,KAAK,CAAC;YACnB,aAAQ,GAAG,KAAK,CAAC;SAgB0C;QAJpE,sBAAI,uDAAQ;;;gBAAZ;gBACE,OAAO,QAAQ,CAAC;aACjB;;;WAAA;;;;QAID,oDAAQ;;;YAAR;gBACE,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;oBAC1B,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,KAAK,CAAC;iBACxC;aACF;;;;QAED,iDAAK;;;YAAL;gBACE,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;aACzB;;;;QAED,iDAAK;;;YAAL;gBACE,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;gBAC9B,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACpC;;;;QACD,2DAAe;;;YAAf;;oBAEM,aAAa,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC;gBAEzE,IAAI,IAAI,CAAC,gBAAgB,IAAI,QAAQ,CAAC,KAAK,EAAE;oBAC3C,OAAOD,aAAW,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC;iBACxE;gBAED,IAAI,IAAI,CAAC,gBAAgB,IAAI,QAAQ,CAAC,SAAS,EAAE;oBAC/C,OAAOD,QAAM,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC;iBAChE;aACF;;;;QAED,wDAAY;;;YAAZ;gBACE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aACjD;;;;QAED,sDAAU;;;YAAV;gBACE,IAAI,IAAI,CAAC,gBAAgB,IAAI,QAAQ,CAAC,KAAK,EAAE;oBAC3C,OAAO;iBACR;gBACD,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,KAAK,CAAC;;gBAEvC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBACzE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aACjD;;;;QACD,qDAAS;;;YAAT;gBACE,IAAI,IAAI,CAAC,gBAAgB,IAAI,QAAQ,CAAC,SAAS,EAAE;oBAC/C,OAAO;iBACR;gBACD,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,SAAS,CAAC;;gBAE3C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC7E,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aACjD;;oBAtFFD,YAAS,SAAC;wBACT,QAAQ,EAAE,4BAA4B;wBACtC,uiFAA0D;qBAC3D;;;;;wBAdQ,oBAAoB;;;;iCAiB1BI,YAAS,SAAC,GAAG;uCAGbC,QAAK;mCACLA,QAAK;yCACLC,SAAM;4BAEND,QAAK;gCACLA,QAAK;+BAGLA,QAAK;iCACLA,QAAK;+BACLA,QAAK;+BAELA,QAAK;+BACLA,QAAK;8BACLA,QAAK;8BACLA,QAAK;iCAELA,QAAK;gCACLA,QAAK;kCAELA,QAAK;;QA0DR,wCAAC;KAvFD;;ICdA;;;;;;;;;;;;;;IAcA;IAEA,IAAI,aAAa,GAAG,UAAS,CAAC,EAAE,CAAC;QAC7B,aAAa,GAAG,MAAM,CAAC,cAAc;aAChC,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;YAC5E,UAAU,CAAC,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC;gBAAE,IAAI,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;oBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/E,OAAO,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;AAEF,aAAgB,SAAS,CAAC,CAAC,EAAE,CAAC;QAC1B,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACpB,SAAS,EAAE,KAAK,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;QACvC,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IACzF,CAAC;;;;;;;;QCxBK,QAAQ,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC;;QACtE,MAAM,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,YAAY,EAAE,cAAc,EAAE,cAAc,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM;QACxH,WAAW,EAAE,UAAU,CAAC;AAE1B;QACiCE,+BAAiB;QADlD;;SAkBC;;;;;QAfC,yCAAmB;;;;YAAnB,UAAoB,OAAe;gBACjC,OAAO,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;aAC9B;;;;;QAED,uCAAiB;;;;YAAjB,UAAkB,KAAa;gBAC7B,OAAO,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;aAC1B;;;;;QAED,sCAAgB;;;;YAAhB,UAAiB,KAAa;gBAC5B,OAAO,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;aAC1B;;;;;QAED,qCAAe;;;;YAAf,UAAgB,IAAmB;gBACjC,OAAU,IAAI,CAAC,GAAG,SAAI,IAAI,CAAC,KAAK,SAAI,IAAI,CAAC,IAAM,CAAC;aACjD;;oBAjBFT,aAAU;;QAkBX,kBAAC;KAAA,CAjBgCU,6BAAiB;;;;;;;ACRlD;QAiCE;YAXU,uBAAkB,GAAgC,IAAIL,eAAY,EAAE,CAAC;YAEtE,aAAQ,GAAG,KAAK,CAAC;YACjB,eAAU,GAAG,KAAK,CAAC;YACnB,aAAQ,GAAG,KAAK,CAAC;SAOT;;;;QAEjB,6CAAU;;;YAAV;gBACE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aACjD;;;;QAED,yCAAM;;;YAAN;gBACE,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;oBACtB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACpC;aACF;;;;QAED,wCAAK;;;YAAL;gBACE,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;gBAC9B,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;gBACxB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACpC;;oBA5CFH,YAAS,SAAC;wBACT,QAAQ,EAAE,mBAAmB;wBAC7B,mzBAAgD;wBAChD,SAAS,EAAE;4BACT,EAAE,OAAO,EAAES,uBAAW,EAAE,QAAQ,EAAEC,sCAA0B,EAAE;4BAC9D,EAAE,OAAO,EAAEF,6BAAiB,EAAE,QAAQ,EAAE,WAAW,EAAE;yBACtD;wBAID,aAAa,EAAEG,oBAAiB,CAAC,IAAI;;qBACtC;;;;;iCAGEP,YAAS,SAAC,GAAG;mCAEbC,QAAK;yCACLC,SAAM;+BAEND,QAAK;iCACLA,QAAK;+BACLA,QAAK;0BACLA,QAAK;0BACLA,QAAK;2BACLA,QAAK;kCAELA,QAAK;;QAoBR,+BAAC;KA9CD;;;;;;;;QCAkDE,gDAAsB;QAEtE;YAAA,YACE,iBAAO,SACR;YAHD,cAAQ,GAAG,IAAIK,eAAQ,CAAC,OAAO,CAAC,CAAC;;SAGhC;;;;;QACD,6CAAM;;;;YAAN,UAAO,IAAmB;gBACxB,IAAI,IAAI,KAAK,IAAI,EAAE;oBACjB,OAAO,EAAE,CAAC;iBACX;gBACD,IAAI;oBACF,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,UAAU,CAAC,CAAC;iBAC3F;gBAAC,OAAO,CAAC,EAAE;oBACV,OAAO,EAAE,CAAC;iBACX;aACF;;;;;QACD,4CAAK;;;;YAAL,UAAM,KAAa;;oBACb,SAAwB;gBAC5B,IAAI,CAAC,KAAK,EAAE;oBACV,SAAS,GAAG,IAAI,CAAC;iBAClB;qBAAM;oBACL,IAAI;;4BACE,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;wBAClE,SAAS,GAAG,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;qBAC1G;oBAAC,OAAO,CAAC,EAAE;wBACV,SAAS,GAAG,IAAI,CAAC;qBAClB;iBACF;gBACD,OAAO,SAAS,CAAC;aAClB;;oBA7BFd,aAAU;;;;QA8BX,mCAAC;KAAA,CA7BiDC,kCAAsB;;;;;;;ACLxE;;;;AAGA,aAAgB,IAAI,CAAC,IAAY;QAC/B,OAAO,IAAI,CAAC;IACd,CAAC;AAED;QAYE;SAAiB;;oBAZlBc,YAAS,SAAC;wBACT,QAAQ,EAAE,qBAAqB;wBAC/B,SAAS,EAAE;4BACT;gCACE,OAAO,EAAEC,sBAAgB;gCACzB,UAAU,EAAG,IAAI;gCACjB,IAAI,EAAE,CAAC,CAAC,IAAIC,WAAQ,EAAE,EAAE,IAAIC,WAAQ,EAAE,EAAEC,YAAM,CAAC,CAAC;6BACjD;yBACJ;qBACA;;;;QAKD,iCAAC;KAdD;;;;;;;ACPA;QAWA;SAmBkD;;oBAnBjDC,WAAQ,SAAC;wBACR,YAAY,EAAE;4BACZ,oCAAoC;4BACpC,iCAAiC;4BACjC,wBAAwB;4BACxB,0BAA0B;yBAC3B;wBACD,OAAO,EAAE;4BACPC,mBAAY;4BACZC,yBAAmB;4BACnBC,iBAAW;4BACXC,qBAAS;yBACV;wBACD,SAAS,EAAE;4BACT,EAAC,OAAO,EAAEvB,kCAAsB,EAAE,QAAQ,EAAE,4BAA4B,EAAC;4BACzE,oBAAoB;yBACrB;wBACD,OAAO,EAAE,CAAE,iCAAiC,EAAE,oCAAoC,CAAC;qBACpF;;QACgD,wCAAC;KAnBlD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.js b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.js
index 494ea9f..acbb0b1 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.js
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.js
@@ -6,6 +6,7 @@
 import { NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';
 import { DatePipe } from '@angular/common';
 import { Injectable } from '@angular/core';
+import * as ɵngcc0 from '@angular/core';
 export class CustomNgbDateParserFormatter extends NgbDateParserFormatter {
     constructor() {
         super();
@@ -49,13 +50,15 @@ export class CustomNgbDateParserFormatter extends NgbDateParserFormatter {
         return returnVal;
     }
 }
-CustomNgbDateParserFormatter.decorators = [
-    { type: Injectable }
-];
+CustomNgbDateParserFormatter.ɵfac = function CustomNgbDateParserFormatter_Factory(t) { return new (t || CustomNgbDateParserFormatter)(); };
+CustomNgbDateParserFormatter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: CustomNgbDateParserFormatter, factory: CustomNgbDateParserFormatter.ɵfac });
 /** @nocollapse */
 CustomNgbDateParserFormatter.ctorParameters = () => [];
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CustomNgbDateParserFormatter, [{
+        type: Injectable
+    }], function () { return []; }, null); })();
 if (false) {
     /** @type {?} */
     CustomNgbDateParserFormatter.prototype.datePipe;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ3VzdG9tTmdiRGF0ZVBhcnNlckZvcm1hdHRlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci8iLCJzb3VyY2VzIjpbImxpYi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9DdXN0b21OZ2JEYXRlUGFyc2VyRm9ybWF0dGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLHNCQUFzQixFQUFpQixNQUFNLDRCQUE0QixDQUFDO0FBQ25GLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMzQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRzNDLE1BQU0sT0FBTyw0QkFBNkIsU0FBUSxzQkFBc0I7SUFFdEU7UUFDRSxLQUFLLEVBQUUsQ0FBQztRQUZWLGFBQVEsR0FBRyxJQUFJLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUdqQyxDQUFDOzs7OztJQUNELE1BQU0sQ0FBQyxJQUFtQjtRQUN4QixJQUFJLElBQUksS0FBSyxJQUFJLEVBQUU7WUFDakIsT0FBTyxFQUFFLENBQUM7U0FDWDtRQUNELElBQUk7WUFDRixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLFVBQVUsQ0FBQyxDQUFDO1NBQzNGO1FBQUMsT0FBTyxDQUFDLEVBQUU7WUFDVixPQUFPLEVBQUUsQ0FBQztTQUNYO0lBQ0gsQ0FBQzs7Ozs7SUFDRCxLQUFLLENBQUMsS0FBYTs7WUFDYixTQUF3QjtRQUM1QixJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ1YsU0FBUyxHQUFHLElBQUksQ0FBQztTQUNsQjthQUFNO1lBQ0wsSUFBSTs7b0JBQ0UsU0FBUyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDO2dCQUNsRSxTQUFTLEdBQUcsRUFBRSxJQUFJLEVBQUUsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEtBQUssRUFBRSxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO2FBQzFHO1lBQUMsT0FBTyxDQUFDLEVBQUU7Z0JBQ1YsU0FBUyxHQUFHLElBQUksQ0FBQzthQUNsQjtTQUNGO1FBQ0QsT0FBTyxTQUFTLENBQUM7SUFDbkIsQ0FBQzs7O1lBN0JGLFVBQVU7Ozs7OztJQUVULGdEQUFpQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nYkRhdGVQYXJzZXJGb3JtYXR0ZXIsIE5nYkRhdGVTdHJ1Y3QgfSBmcm9tICdAbmctYm9vdHN0cmFwL25nLWJvb3RzdHJhcCc7XHJcbmltcG9ydCB7IERhdGVQaXBlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgQ3VzdG9tTmdiRGF0ZVBhcnNlckZvcm1hdHRlciBleHRlbmRzIE5nYkRhdGVQYXJzZXJGb3JtYXR0ZXIge1xyXG4gIGRhdGVQaXBlID0gbmV3IERhdGVQaXBlKCdlbi1VUycpO1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgc3VwZXIoKTtcclxuICB9XHJcbiAgZm9ybWF0KGRhdGU6IE5nYkRhdGVTdHJ1Y3QpOiBzdHJpbmcge1xyXG4gICAgaWYgKGRhdGUgPT09IG51bGwpIHtcclxuICAgICAgcmV0dXJuICcnO1xyXG4gICAgfVxyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIHRoaXMuZGF0ZVBpcGUudHJhbnNmb3JtKG5ldyBEYXRlKGRhdGUueWVhciwgZGF0ZS5tb250aCAtIDEsIGRhdGUuZGF5KSwgJ2QvTS95eXl5Jyk7XHJcbiAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgIHJldHVybiAnJztcclxuICAgIH1cclxuICB9XHJcbiAgcGFyc2UodmFsdWU6IHN0cmluZyk6IE5nYkRhdGVTdHJ1Y3Qge1xyXG4gICAgbGV0IHJldHVyblZhbDogTmdiRGF0ZVN0cnVjdDtcclxuICAgIGlmICghdmFsdWUpIHtcclxuICAgICAgcmV0dXJuVmFsID0gbnVsbDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgbGV0IGRhdGVQYXJ0cyA9IHRoaXMuZGF0ZVBpcGUudHJhbnNmb3JtKHZhbHVlLCAnTS1kLXknKS5zcGxpdCgnLScpO1xyXG4gICAgICAgIHJldHVyblZhbCA9IHsgeWVhcjogcGFyc2VJbnQoZGF0ZVBhcnRzWzJdKSwgbW9udGg6IHBhcnNlSW50KGRhdGVQYXJ0c1swXSksIGRheTogcGFyc2VJbnQoZGF0ZVBhcnRzWzFdKSB9O1xyXG4gICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgcmV0dXJuVmFsID0gbnVsbDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHJldHVyblZhbDtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ3VzdG9tTmdiRGF0ZVBhcnNlckZvcm1hdHRlci5qcyIsInNvdXJjZXMiOlsibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyL2xpYi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9DdXN0b21OZ2JEYXRlUGFyc2VyRm9ybWF0dGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLHNCQUFzQixFQUFpQixNQUFNLDRCQUE0QixDQUFDO0FBQ25GLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMzQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQUczQyxNQUFNLE9BQU8sNEJBQTZCLFNBQVEsc0JBQXNCO0FBQ3hFLElBQ0U7QUFDRixRQUFJLEtBQUssRUFBRSxDQUFDO0FBQ1osUUFIRSxhQUFRLEdBQUcsSUFBSSxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDbkMsSUFFRSxDQUFDO0FBQ0g7QUFBUTtBQUF1QjtBQUNyQjtBQUFRLElBRGhCLE1BQU0sQ0FBQyxJQUFtQjtBQUFJLFFBQzVCLElBQUksSUFBSSxLQUFLLElBQUksRUFBRTtBQUN2QixZQUFNLE9BQU8sRUFBRSxDQUFDO0FBQ2hCLFNBQUs7QUFDTCxRQUFJLElBQUk7QUFDUixZQUFNLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsVUFBVSxDQUFDLENBQUM7QUFDaEcsU0FBSztBQUFDLFFBQUEsT0FBTyxDQUFDLEVBQUU7QUFDaEIsWUFBTSxPQUFPLEVBQUUsQ0FBQztBQUNoQixTQUFLO0FBQ0wsSUFBRSxDQUFDO0FBQ0g7QUFBUTtBQUF3QjtBQUNyQjtBQUFRLElBRGpCLEtBQUssQ0FBQyxLQUFhO0FBQUk7QUFDZixZQUFGLFNBQXdCO0FBQ2hDLFFBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtBQUNoQixZQUFNLFNBQVMsR0FBRyxJQUFJLENBQUM7QUFDdkIsU0FBSztBQUFDLGFBQUs7QUFDWCxZQUFNLElBQUk7QUFDVjtBQUFpQyxvQkFBckIsU0FBUyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDO0FBQzFFLGdCQUFRLFNBQVMsR0FBRyxFQUFFLElBQUksRUFBRSxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsS0FBSyxFQUFFLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7QUFDakgsYUFBTztBQUFDLFlBQUEsT0FBTyxDQUFDLEVBQUU7QUFDbEIsZ0JBQVEsU0FBUyxHQUFHLElBQUksQ0FBQztBQUN6QixhQUFPO0FBQ1AsU0FBSztBQUNMLFFBQUksT0FBTyxTQUFTLENBQUM7QUFDckIsSUFBRSxDQUFDO0FBQ0g7d0RBOUJDLFVBQVU7b0pBQ1Q7QUFBQztBQUFtQjs7O2dEQUNwQjtBQUFDO0FBQWE7QUFDZixJQURDLGdEQUFpQzs7QUFOQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFHQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBRkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBR0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQ0EsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUE3QkEsQUFBQSxBQUVBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ2JEYXRlUGFyc2VyRm9ybWF0dGVyLCBOZ2JEYXRlU3RydWN0IH0gZnJvbSAnQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAnO1xyXG5pbXBvcnQgeyBEYXRlUGlwZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIEN1c3RvbU5nYkRhdGVQYXJzZXJGb3JtYXR0ZXIgZXh0ZW5kcyBOZ2JEYXRlUGFyc2VyRm9ybWF0dGVyIHtcclxuICBkYXRlUGlwZSA9IG5ldyBEYXRlUGlwZSgnZW4tVVMnKTtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHN1cGVyKCk7XHJcbiAgfVxyXG4gIGZvcm1hdChkYXRlOiBOZ2JEYXRlU3RydWN0KTogc3RyaW5nIHtcclxuICAgIGlmIChkYXRlID09PSBudWxsKSB7XHJcbiAgICAgIHJldHVybiAnJztcclxuICAgIH1cclxuICAgIHRyeSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmRhdGVQaXBlLnRyYW5zZm9ybShuZXcgRGF0ZShkYXRlLnllYXIsIGRhdGUubW9udGggLSAxLCBkYXRlLmRheSksICdkL00veXl5eScpO1xyXG4gICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICByZXR1cm4gJyc7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHBhcnNlKHZhbHVlOiBzdHJpbmcpOiBOZ2JEYXRlU3RydWN0IHtcclxuICAgIGxldCByZXR1cm5WYWw6IE5nYkRhdGVTdHJ1Y3Q7XHJcbiAgICBpZiAoIXZhbHVlKSB7XHJcbiAgICAgIHJldHVyblZhbCA9IG51bGw7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGxldCBkYXRlUGFydHMgPSB0aGlzLmRhdGVQaXBlLnRyYW5zZm9ybSh2YWx1ZSwgJ00tZC15Jykuc3BsaXQoJy0nKTtcclxuICAgICAgICByZXR1cm5WYWwgPSB7IHllYXI6IHBhcnNlSW50KGRhdGVQYXJ0c1syXSksIG1vbnRoOiBwYXJzZUludChkYXRlUGFydHNbMF0pLCBkYXk6IHBhcnNlSW50KGRhdGVQYXJ0c1sxXSkgfTtcclxuICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgIHJldHVyblZhbCA9IG51bGw7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiByZXR1cm5WYWw7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.js.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.js.__ivy_ngcc_bak
new file mode 100644
index 0000000..494ea9f
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.js.__ivy_ngcc_bak
@@ -0,0 +1,61 @@
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+import { NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';
+import { DatePipe } from '@angular/common';
+import { Injectable } from '@angular/core';
+export class CustomNgbDateParserFormatter extends NgbDateParserFormatter {
+    constructor() {
+        super();
+        this.datePipe = new DatePipe('en-US');
+    }
+    /**
+     * @param {?} date
+     * @return {?}
+     */
+    format(date) {
+        if (date === null) {
+            return '';
+        }
+        try {
+            return this.datePipe.transform(new Date(date.year, date.month - 1, date.day), 'd/M/yyyy');
+        }
+        catch (e) {
+            return '';
+        }
+    }
+    /**
+     * @param {?} value
+     * @return {?}
+     */
+    parse(value) {
+        /** @type {?} */
+        let returnVal;
+        if (!value) {
+            returnVal = null;
+        }
+        else {
+            try {
+                /** @type {?} */
+                let dateParts = this.datePipe.transform(value, 'M-d-y').split('-');
+                returnVal = { year: parseInt(dateParts[2]), month: parseInt(dateParts[0]), day: parseInt(dateParts[1]) };
+            }
+            catch (e) {
+                returnVal = null;
+            }
+        }
+        return returnVal;
+    }
+}
+CustomNgbDateParserFormatter.decorators = [
+    { type: Injectable }
+];
+/** @nocollapse */
+CustomNgbDateParserFormatter.ctorParameters = () => [];
+if (false) {
+    /** @type {?} */
+    CustomNgbDateParserFormatter.prototype.datePipe;
+}
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ3VzdG9tTmdiRGF0ZVBhcnNlckZvcm1hdHRlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci8iLCJzb3VyY2VzIjpbImxpYi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9DdXN0b21OZ2JEYXRlUGFyc2VyRm9ybWF0dGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLHNCQUFzQixFQUFpQixNQUFNLDRCQUE0QixDQUFDO0FBQ25GLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMzQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRzNDLE1BQU0sT0FBTyw0QkFBNkIsU0FBUSxzQkFBc0I7SUFFdEU7UUFDRSxLQUFLLEVBQUUsQ0FBQztRQUZWLGFBQVEsR0FBRyxJQUFJLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUdqQyxDQUFDOzs7OztJQUNELE1BQU0sQ0FBQyxJQUFtQjtRQUN4QixJQUFJLElBQUksS0FBSyxJQUFJLEVBQUU7WUFDakIsT0FBTyxFQUFFLENBQUM7U0FDWDtRQUNELElBQUk7WUFDRixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLFVBQVUsQ0FBQyxDQUFDO1NBQzNGO1FBQUMsT0FBTyxDQUFDLEVBQUU7WUFDVixPQUFPLEVBQUUsQ0FBQztTQUNYO0lBQ0gsQ0FBQzs7Ozs7SUFDRCxLQUFLLENBQUMsS0FBYTs7WUFDYixTQUF3QjtRQUM1QixJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ1YsU0FBUyxHQUFHLElBQUksQ0FBQztTQUNsQjthQUFNO1lBQ0wsSUFBSTs7b0JBQ0UsU0FBUyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDO2dCQUNsRSxTQUFTLEdBQUcsRUFBRSxJQUFJLEVBQUUsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEtBQUssRUFBRSxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO2FBQzFHO1lBQUMsT0FBTyxDQUFDLEVBQUU7Z0JBQ1YsU0FBUyxHQUFHLElBQUksQ0FBQzthQUNsQjtTQUNGO1FBQ0QsT0FBTyxTQUFTLENBQUM7SUFDbkIsQ0FBQzs7O1lBN0JGLFVBQVU7Ozs7OztJQUVULGdEQUFpQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nYkRhdGVQYXJzZXJGb3JtYXR0ZXIsIE5nYkRhdGVTdHJ1Y3QgfSBmcm9tICdAbmctYm9vdHN0cmFwL25nLWJvb3RzdHJhcCc7XHJcbmltcG9ydCB7IERhdGVQaXBlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgQ3VzdG9tTmdiRGF0ZVBhcnNlckZvcm1hdHRlciBleHRlbmRzIE5nYkRhdGVQYXJzZXJGb3JtYXR0ZXIge1xyXG4gIGRhdGVQaXBlID0gbmV3IERhdGVQaXBlKCdlbi1VUycpO1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgc3VwZXIoKTtcclxuICB9XHJcbiAgZm9ybWF0KGRhdGU6IE5nYkRhdGVTdHJ1Y3QpOiBzdHJpbmcge1xyXG4gICAgaWYgKGRhdGUgPT09IG51bGwpIHtcclxuICAgICAgcmV0dXJuICcnO1xyXG4gICAgfVxyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIHRoaXMuZGF0ZVBpcGUudHJhbnNmb3JtKG5ldyBEYXRlKGRhdGUueWVhciwgZGF0ZS5tb250aCAtIDEsIGRhdGUuZGF5KSwgJ2QvTS95eXl5Jyk7XHJcbiAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgIHJldHVybiAnJztcclxuICAgIH1cclxuICB9XHJcbiAgcGFyc2UodmFsdWU6IHN0cmluZyk6IE5nYkRhdGVTdHJ1Y3Qge1xyXG4gICAgbGV0IHJldHVyblZhbDogTmdiRGF0ZVN0cnVjdDtcclxuICAgIGlmICghdmFsdWUpIHtcclxuICAgICAgcmV0dXJuVmFsID0gbnVsbDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgbGV0IGRhdGVQYXJ0cyA9IHRoaXMuZGF0ZVBpcGUudHJhbnNmb3JtKHZhbHVlLCAnTS1kLXknKS5zcGxpdCgnLScpO1xyXG4gICAgICAgIHJldHVyblZhbCA9IHsgeWVhcjogcGFyc2VJbnQoZGF0ZVBhcnRzWzJdKSwgbW9udGg6IHBhcnNlSW50KGRhdGVQYXJ0c1swXSksIGRheTogcGFyc2VJbnQoZGF0ZVBhcnRzWzFdKSB9O1xyXG4gICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgcmV0dXJuVmFsID0gbnVsbDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHJldHVyblZhbDtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/IslamicI18n.js b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/IslamicI18n.js
index e86a8f2..ebeb587 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/IslamicI18n.js
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/IslamicI18n.js
@@ -6,6 +6,7 @@
 import { Injectable } from '@angular/core';
 import { NgbDatepickerI18n } from '@ng-bootstrap/ng-bootstrap';
 /** @type {?} */
+import * as ɵngcc0 from '@angular/core';
 const WEEKDAYS = ['أحد', 'إثنين', 'ثلاثاء', 'أربعاء', 'خميس', 'جمعة', 'سبت'];
 /** @type {?} */
 const MONTHS = ['محرم', 'صفر', 'ربيع الأول', 'ربيع الآخر', 'جمادى الأولى', 'جمادى الآخرة', 'رجب', 'شعبان', 'رمضان', 'شوال',
@@ -40,7 +41,10 @@ export class IslamicI18n extends NgbDatepickerI18n {
         return `${date.day}-${date.month}-${date.year}`;
     }
 }
-IslamicI18n.decorators = [
-    { type: Injectable }
-];
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSXNsYW1pY0kxOG4uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvIiwic291cmNlcyI6WyJsaWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvSXNsYW1pY0kxOG4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxpQkFBaUIsRUFBaUIsTUFBTSw0QkFBNEIsQ0FBQzs7TUFFeEUsUUFBUSxHQUFHLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsS0FBSyxDQUFDOztNQUN0RSxNQUFNLEdBQUcsQ0FBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBRSxZQUFZLEVBQUUsY0FBYyxFQUFFLGNBQWMsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNO0lBQ3hILFdBQVcsRUFBRSxVQUFVLENBQUM7QUFHMUIsTUFBTSxPQUFPLFdBQVksU0FBUSxpQkFBaUI7Ozs7O0lBRWhELG1CQUFtQixDQUFDLE9BQWU7UUFDakMsT0FBTyxRQUFRLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQy9CLENBQUM7Ozs7O0lBRUQsaUJBQWlCLENBQUMsS0FBYTtRQUM3QixPQUFPLE1BQU0sQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDM0IsQ0FBQzs7Ozs7SUFFRCxnQkFBZ0IsQ0FBQyxLQUFhO1FBQzVCLE9BQU8sTUFBTSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQztJQUMzQixDQUFDOzs7OztJQUVELGVBQWUsQ0FBQyxJQUFtQjtRQUNqQyxPQUFPLEdBQUcsSUFBSSxDQUFDLEdBQUcsSUFBSSxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNsRCxDQUFDOzs7WUFqQkYsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTmdiRGF0ZXBpY2tlckkxOG4sIE5nYkRhdGVTdHJ1Y3QgfSBmcm9tICdAbmctYm9vdHN0cmFwL25nLWJvb3RzdHJhcCc7XHJcblxyXG5jb25zdCBXRUVLREFZUyA9IFsn2KPYrdivJywgJ9il2KvZhtmK2YYnLCAn2KvZhNin2KvYp9ihJywgJ9ij2LHYqNi52KfYoScsICfYrtmF2YrYsycsICfYrNmF2LnYqScsICfYs9io2KonXTtcclxuY29uc3QgTU9OVEhTID0gWyfZhdit2LHZhScsICfYtdmB2LEnLCAn2LHYqNmK2Lkg2KfZhNij2YjZhCcsICfYsdio2YrYuSDYp9mE2KLYrtixJywgJ9is2YXYp9iv2Ykg2KfZhNij2YjZhNmJJywgJ9is2YXYp9iv2Ykg2KfZhNii2K7YsdipJywgJ9ix2KzYqCcsICfYtNi52KjYp9mGJywgJ9ix2YXYttin2YYnLCAn2LTZiNin2YQnLFxyXG4gICfYsNmIINin2YTZgti52K/YqScsICfYsNmIINin2YTYrdis2KknXTtcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIElzbGFtaWNJMThuIGV4dGVuZHMgTmdiRGF0ZXBpY2tlckkxOG4ge1xyXG5cclxuICBnZXRXZWVrZGF5U2hvcnROYW1lKHdlZWtkYXk6IG51bWJlcikge1xyXG4gICAgcmV0dXJuIFdFRUtEQVlTW3dlZWtkYXkgLSAxXTtcclxuICB9XHJcblxyXG4gIGdldE1vbnRoU2hvcnROYW1lKG1vbnRoOiBudW1iZXIpIHtcclxuICAgIHJldHVybiBNT05USFNbbW9udGggLSAxXTtcclxuICB9XHJcblxyXG4gIGdldE1vbnRoRnVsbE5hbWUobW9udGg6IG51bWJlcikge1xyXG4gICAgcmV0dXJuIE1PTlRIU1ttb250aCAtIDFdO1xyXG4gIH1cclxuXHJcbiAgZ2V0RGF5QXJpYUxhYmVsKGRhdGU6IE5nYkRhdGVTdHJ1Y3QpOiBzdHJpbmcge1xyXG4gICAgcmV0dXJuIGAke2RhdGUuZGF5fS0ke2RhdGUubW9udGh9LSR7ZGF0ZS55ZWFyfWA7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
+IslamicI18n.ɵfac = function IslamicI18n_Factory(t) { return ɵIslamicI18n_BaseFactory(t || IslamicI18n); };
+IslamicI18n.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: IslamicI18n, factory: IslamicI18n.ɵfac });
+const ɵIslamicI18n_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(IslamicI18n);
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IslamicI18n, [{
+        type: Injectable
+    }], null, null); })();
+//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSXNsYW1pY0kxOG4uanMiLCJzb3VyY2VzIjpbIm5neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9saWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvSXNsYW1pY0kxOG4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxpQkFBaUIsRUFBaUIsTUFBTSw0QkFBNEIsQ0FBQztBQUM5RTs7QUFDZ0IsTUFBVixRQUFRLEdBQUcsQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxLQUFLLENBQUM7QUFDNUU7QUFBaUIsTUFBWCxNQUFNLEdBQUcsQ0FBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBRSxZQUFZLEVBQUUsY0FBYyxFQUFFLGNBQWMsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNO0FBQzFILElBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQztBQUcxQixNQUFNLE9BQU8sV0FBWSxTQUFRLGlCQUFpQjtBQUNsRDtBQUNPO0FBQTBCO0FBQ3RCO0FBQVEsSUFEakIsbUJBQW1CLENBQUMsT0FBZTtBQUNyQyxRQUFJLE9BQU8sUUFBUSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUMsQ0FBQztBQUNqQyxJQUFFLENBQUM7QUFDSDtBQUNPO0FBQXdCO0FBQ2xCO0FBQVEsSUFEbkIsaUJBQWlCLENBQUMsS0FBYTtBQUNqQyxRQUFJLE9BQU8sTUFBTSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQztBQUM3QixJQUFFLENBQUM7QUFDSDtBQUNPO0FBQXdCO0FBQ2pCO0FBQVEsSUFEcEIsZ0JBQWdCLENBQUMsS0FBYTtBQUNoQyxRQUFJLE9BQU8sTUFBTSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQztBQUM3QixJQUFFLENBQUM7QUFDSDtBQUNPO0FBQXVCO0FBQzlCO0FBQVEsSUFETixlQUFlLENBQUMsSUFBbUI7QUFBSSxRQUNyQyxPQUFPLEdBQUcsSUFBSSxDQUFDLEdBQUcsSUFBSSxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUNwRCxJQUFFLENBQUM7QUFDSDt1Q0FsQkMsVUFBVTs7Ozs7O0FBUEEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUdBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBakJBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE5nYkRhdGVwaWNrZXJJMThuLCBOZ2JEYXRlU3RydWN0IH0gZnJvbSAnQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAnO1xyXG5cclxuY29uc3QgV0VFS0RBWVMgPSBbJ9ij2K3YrycsICfYpdir2YbZitmGJywgJ9ir2YTYp9ir2KfYoScsICfYo9ix2KjYudin2KEnLCAn2K7ZhdmK2LMnLCAn2KzZhdi52KknLCAn2LPYqNiqJ107XHJcbmNvbnN0IE1PTlRIUyA9IFsn2YXYrdix2YUnLCAn2LXZgdixJywgJ9ix2KjZiti5INin2YTYo9mI2YQnLCAn2LHYqNmK2Lkg2KfZhNii2K7YsScsICfYrNmF2KfYr9mJINin2YTYo9mI2YTZiScsICfYrNmF2KfYr9mJINin2YTYotiu2LHYqScsICfYsdis2KgnLCAn2LTYudio2KfZhicsICfYsdmF2LbYp9mGJywgJ9i02YjYp9mEJyxcclxuICAn2LDZiCDYp9mE2YLYudiv2KknLCAn2LDZiCDYp9mE2K3YrNipJ107XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBJc2xhbWljSTE4biBleHRlbmRzIE5nYkRhdGVwaWNrZXJJMThuIHtcclxuXHJcbiAgZ2V0V2Vla2RheVNob3J0TmFtZSh3ZWVrZGF5OiBudW1iZXIpIHtcclxuICAgIHJldHVybiBXRUVLREFZU1t3ZWVrZGF5IC0gMV07XHJcbiAgfVxyXG5cclxuICBnZXRNb250aFNob3J0TmFtZShtb250aDogbnVtYmVyKSB7XHJcbiAgICByZXR1cm4gTU9OVEhTW21vbnRoIC0gMV07XHJcbiAgfVxyXG5cclxuICBnZXRNb250aEZ1bGxOYW1lKG1vbnRoOiBudW1iZXIpIHtcclxuICAgIHJldHVybiBNT05USFNbbW9udGggLSAxXTtcclxuICB9XHJcblxyXG4gIGdldERheUFyaWFMYWJlbChkYXRlOiBOZ2JEYXRlU3RydWN0KTogc3RyaW5nIHtcclxuICAgIHJldHVybiBgJHtkYXRlLmRheX0tJHtkYXRlLm1vbnRofS0ke2RhdGUueWVhcn1gO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/IslamicI18n.js.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/IslamicI18n.js.__ivy_ngcc_bak
new file mode 100644
index 0000000..e86a8f2
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/IslamicI18n.js.__ivy_ngcc_bak
@@ -0,0 +1,46 @@
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/hijri-gregorian-datepicker/IslamicI18n.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+import { Injectable } from '@angular/core';
+import { NgbDatepickerI18n } from '@ng-bootstrap/ng-bootstrap';
+/** @type {?} */
+const WEEKDAYS = ['أحد', 'إثنين', 'ثلاثاء', 'أربعاء', 'خميس', 'جمعة', 'سبت'];
+/** @type {?} */
+const MONTHS = ['محرم', 'صفر', 'ربيع الأول', 'ربيع الآخر', 'جمادى الأولى', 'جمادى الآخرة', 'رجب', 'شعبان', 'رمضان', 'شوال',
+    'ذو القعدة', 'ذو الحجة'];
+export class IslamicI18n extends NgbDatepickerI18n {
+    /**
+     * @param {?} weekday
+     * @return {?}
+     */
+    getWeekdayShortName(weekday) {
+        return WEEKDAYS[weekday - 1];
+    }
+    /**
+     * @param {?} month
+     * @return {?}
+     */
+    getMonthShortName(month) {
+        return MONTHS[month - 1];
+    }
+    /**
+     * @param {?} month
+     * @return {?}
+     */
+    getMonthFullName(month) {
+        return MONTHS[month - 1];
+    }
+    /**
+     * @param {?} date
+     * @return {?}
+     */
+    getDayAriaLabel(date) {
+        return `${date.day}-${date.month}-${date.year}`;
+    }
+}
+IslamicI18n.decorators = [
+    { type: Injectable }
+];
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSXNsYW1pY0kxOG4uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvIiwic291cmNlcyI6WyJsaWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvSXNsYW1pY0kxOG4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxpQkFBaUIsRUFBaUIsTUFBTSw0QkFBNEIsQ0FBQzs7TUFFeEUsUUFBUSxHQUFHLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsS0FBSyxDQUFDOztNQUN0RSxNQUFNLEdBQUcsQ0FBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBRSxZQUFZLEVBQUUsY0FBYyxFQUFFLGNBQWMsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNO0lBQ3hILFdBQVcsRUFBRSxVQUFVLENBQUM7QUFHMUIsTUFBTSxPQUFPLFdBQVksU0FBUSxpQkFBaUI7Ozs7O0lBRWhELG1CQUFtQixDQUFDLE9BQWU7UUFDakMsT0FBTyxRQUFRLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQy9CLENBQUM7Ozs7O0lBRUQsaUJBQWlCLENBQUMsS0FBYTtRQUM3QixPQUFPLE1BQU0sQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDM0IsQ0FBQzs7Ozs7SUFFRCxnQkFBZ0IsQ0FBQyxLQUFhO1FBQzVCLE9BQU8sTUFBTSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQztJQUMzQixDQUFDOzs7OztJQUVELGVBQWUsQ0FBQyxJQUFtQjtRQUNqQyxPQUFPLEdBQUcsSUFBSSxDQUFDLEdBQUcsSUFBSSxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNsRCxDQUFDOzs7WUFqQkYsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTmdiRGF0ZXBpY2tlckkxOG4sIE5nYkRhdGVTdHJ1Y3QgfSBmcm9tICdAbmctYm9vdHN0cmFwL25nLWJvb3RzdHJhcCc7XHJcblxyXG5jb25zdCBXRUVLREFZUyA9IFsn2KPYrdivJywgJ9il2KvZhtmK2YYnLCAn2KvZhNin2KvYp9ihJywgJ9ij2LHYqNi52KfYoScsICfYrtmF2YrYsycsICfYrNmF2LnYqScsICfYs9io2KonXTtcclxuY29uc3QgTU9OVEhTID0gWyfZhdit2LHZhScsICfYtdmB2LEnLCAn2LHYqNmK2Lkg2KfZhNij2YjZhCcsICfYsdio2YrYuSDYp9mE2KLYrtixJywgJ9is2YXYp9iv2Ykg2KfZhNij2YjZhNmJJywgJ9is2YXYp9iv2Ykg2KfZhNii2K7YsdipJywgJ9ix2KzYqCcsICfYtNi52KjYp9mGJywgJ9ix2YXYttin2YYnLCAn2LTZiNin2YQnLFxyXG4gICfYsNmIINin2YTZgti52K/YqScsICfYsNmIINin2YTYrdis2KknXTtcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIElzbGFtaWNJMThuIGV4dGVuZHMgTmdiRGF0ZXBpY2tlckkxOG4ge1xyXG5cclxuICBnZXRXZWVrZGF5U2hvcnROYW1lKHdlZWtkYXk6IG51bWJlcikge1xyXG4gICAgcmV0dXJuIFdFRUtEQVlTW3dlZWtkYXkgLSAxXTtcclxuICB9XHJcblxyXG4gIGdldE1vbnRoU2hvcnROYW1lKG1vbnRoOiBudW1iZXIpIHtcclxuICAgIHJldHVybiBNT05USFNbbW9udGggLSAxXTtcclxuICB9XHJcblxyXG4gIGdldE1vbnRoRnVsbE5hbWUobW9udGg6IG51bWJlcikge1xyXG4gICAgcmV0dXJuIE1PTlRIU1ttb250aCAtIDFdO1xyXG4gIH1cclxuXHJcbiAgZ2V0RGF5QXJpYUxhYmVsKGRhdGU6IE5nYkRhdGVTdHJ1Y3QpOiBzdHJpbmcge1xyXG4gICAgcmV0dXJuIGAke2RhdGUuZGF5fS0ke2RhdGUubW9udGh9LSR7ZGF0ZS55ZWFyfWA7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/date-formatter.service.js b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/date-formatter.service.js
index 6ceb2ef..17f9f61 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/date-formatter.service.js
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/date-formatter.service.js
@@ -7,6 +7,8 @@ import { Injectable } from '@angular/core';
 import { NgbDateParserFormatter, NgbDate } from '@ng-bootstrap/ng-bootstrap';
 import * as momentjs from 'moment';
 /** @type {?} */
+import * as ɵngcc0 from '@angular/core';
+import * as ɵngcc1 from '@ng-bootstrap/ng-bootstrap';
 const moment = momentjs;
 import * as moment_ from 'moment-hijri';
 /** @type {?} */
@@ -126,13 +128,15 @@ export class DateFormatterService {
         return this.ToGregorianDateStruct(todayGregorian, 'YYYY/M/D');
     }
 }
-DateFormatterService.decorators = [
-    { type: Injectable }
-];
+DateFormatterService.ɵfac = function DateFormatterService_Factory(t) { return new (t || DateFormatterService)(ɵngcc0.ɵɵinject(ɵngcc1.NgbDateParserFormatter)); };
+DateFormatterService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: DateFormatterService, factory: DateFormatterService.ɵfac });
 /** @nocollapse */
 DateFormatterService.ctorParameters = () => [
     { type: NgbDateParserFormatter }
 ];
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DateFormatterService, [{
+        type: Injectable
+    }], function () { return [{ type: ɵngcc1.NgbDateParserFormatter }]; }, null); })();
 if (false) {
     /**
      * @type {?}
@@ -140,4 +144,4 @@ if (false) {
      */
     DateFormatterService.prototype.parserFormatter;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1mb3JtYXR0ZXIuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci8iLCJzb3VyY2VzIjpbImxpYi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9kYXRlLWZvcm1hdHRlci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQWlCLHNCQUFzQixFQUFFLE9BQU8sRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRTVGLE9BQU8sS0FBSyxRQUFRLE1BQU0sUUFBUSxDQUFDOztNQUM3QixNQUFNLEdBQUcsUUFBUTtBQUd2QixPQUFPLEtBQUssT0FBTyxNQUFNLGNBQWMsQ0FBQzs7TUFDbEMsV0FBVyxHQUFHLE9BQU87QUFHM0IsTUFBTSxPQUFPLG9CQUFvQjs7OztJQUUvQixZQUFvQixlQUF1QztRQUF2QyxvQkFBZSxHQUFmLGVBQWUsQ0FBd0I7SUFBSSxDQUFDOzs7OztJQUU5RCxRQUFRLENBQUMsSUFBbUI7O2NBQ2xCLE9BQU8sR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUM7UUFDakQsT0FBTyxPQUFPLENBQUM7SUFDbkIsQ0FBQzs7Ozs7O0lBRUQsaUJBQWlCLENBQUMsU0FBaUIsRUFBRSxNQUFjOztjQUUzQyxlQUFlLEdBQUksV0FBVyxDQUFDLFNBQVMsRUFBRyxNQUFNLENBQUM7OztjQUVsRCxHQUFHLEdBQUcsZUFBZSxDQUFDLEtBQUssRUFBRTs7Y0FDN0IsS0FBSyxHQUFHLENBQUMsZUFBZSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUM7O2NBQ3JDLElBQUksR0FBRyxlQUFlLENBQUMsS0FBSyxFQUFFOztjQUU5QixNQUFNLEdBQUksSUFBSSxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLENBQUMsR0FBRyxDQUFDO1FBQy9DLE9BQU8sTUFBTSxDQUFDO0lBQ2pCLENBQUM7Ozs7OztJQUdBLHFCQUFxQixDQUFDLGFBQXFCLEVBQUUsTUFBYzs7Y0FFbkQsVUFBVSxHQUFHLE1BQU0sQ0FBQyxhQUFhLEVBQUUsTUFBTSxDQUFDOzs7Y0FFMUMsR0FBRyxHQUFHLFVBQVUsQ0FBQyxJQUFJLEVBQUU7O2NBQ3ZCLEtBQUssR0FBRyxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDOztjQUMvQixJQUFJLEdBQUcsVUFBVSxDQUFDLElBQUksRUFBRTs7Y0FFeEIsTUFBTSxHQUFHLElBQUksT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsS0FBSyxFQUFFLENBQUMsR0FBRyxDQUFDO1FBQy9DLE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7Ozs7O0lBRUQsT0FBTyxDQUFDLElBQW1CO1FBQ3ZCLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDUCxPQUFPLElBQUksQ0FBQztTQUNmOztjQUNLLE9BQU8sR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQzs7Y0FFN0IsVUFBVSxHQUFHLFdBQVcsQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDOztjQUU3QyxHQUFHLEdBQUcsVUFBVSxDQUFDLEtBQUssRUFBRTs7Y0FDeEIsS0FBSyxHQUFHLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUM7O2NBQ2hDLElBQUksR0FBRyxVQUFVLENBQUMsS0FBSyxFQUFFOztjQUV6QixNQUFNLEdBQUksSUFBSSxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLENBQUMsR0FBRyxDQUFDO1FBQy9DLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7Ozs7O0lBRUQsV0FBVyxDQUFDLElBQW1CO1FBQzNCLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDUCxPQUFPLElBQUksQ0FBQztTQUNmOztjQUVLLE9BQU8sR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQzs7Y0FFN0IsVUFBVSxHQUFHLFdBQVcsQ0FBQyxPQUFPLEVBQUUsYUFBYSxDQUFDOztjQUVoRCxHQUFHLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDOztjQUN6QyxLQUFLLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDOztjQUMzQyxJQUFJLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDOztjQUUxQyxNQUFNLEdBQUksSUFBSSxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxHQUFHLENBQUM7UUFDaEQsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQzs7OztJQUVELGFBQWE7O2NBRUwsVUFBVSxHQUFHLFdBQVcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDO1FBRW5FLE9BQU8sSUFBSSxDQUFDLGlCQUFpQixDQUFDLFVBQVUsRUFBRSxhQUFhLENBQUMsQ0FBRTtJQUU1RCxDQUFDOzs7O0lBRUQsaUJBQWlCOztjQUVULGNBQWMsR0FBRyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQztRQUUvRCxPQUFPLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxjQUFjLEVBQUUsVUFBVSxDQUFDLENBQUU7SUFDakUsQ0FBQzs7O1lBakZKLFVBQVU7Ozs7WUFUYSxzQkFBc0I7Ozs7Ozs7SUFZaEMsK0NBQStDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBOZ2JEYXRlU3RydWN0LCBOZ2JEYXRlUGFyc2VyRm9ybWF0dGVyLCBOZ2JEYXRlIH0gZnJvbSAnQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAnO1xyXG5cclxuaW1wb3J0ICogYXMgbW9tZW50anMgZnJvbSAnbW9tZW50JztcclxuY29uc3QgbW9tZW50ID0gbW9tZW50anM7XHJcblxyXG5cclxuaW1wb3J0ICogYXMgbW9tZW50XyBmcm9tICdtb21lbnQtaGlqcmknO1xyXG5jb25zdCBtb21lbnRIaWpyaSA9IG1vbWVudF87XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBEYXRlRm9ybWF0dGVyU2VydmljZSB7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcGFyc2VyRm9ybWF0dGVyOiBOZ2JEYXRlUGFyc2VyRm9ybWF0dGVyKSB7IH1cclxuXHJcbiAgICBUb1N0cmluZyhkYXRlOiBOZ2JEYXRlU3RydWN0KTogc3RyaW5nIHtcclxuICAgICAgICBjb25zdCBkYXRlU3RyID0gdGhpcy5wYXJzZXJGb3JtYXR0ZXIuZm9ybWF0KGRhdGUpO1xyXG4gICAgICAgIHJldHVybiBkYXRlU3RyO1xyXG4gICAgfVxyXG5cclxuICAgIFRvSGlqcmlEYXRlU3RydWN0KGhpanJpRGF0ZTogc3RyaW5nLCBmb3JtYXQ6IHN0cmluZyk6IE5nYkRhdGUgIHtcclxuXHJcbiAgICAgIGNvbnN0IGhpanJpTW9tZW50RGF0ZSA9ICBtb21lbnRIaWpyaShoaWpyaURhdGUgLCBmb3JtYXQpOyAvLyBQYXJzZSBhIEhpanJpIGRhdGUgYmFzZWQgb24gZm9ybWF0LlxyXG5cclxuICAgICAgY29uc3QgZGF5ID0gaGlqcmlNb21lbnREYXRlLmlEYXRlKCk7XHJcbiAgICAgIGNvbnN0IG1vbnRoID0gK2hpanJpTW9tZW50RGF0ZS5pTW9udGgoKSArIDEgO1xyXG4gICAgICBjb25zdCB5ZWFyID0gaGlqcmlNb21lbnREYXRlLmlZZWFyKCk7XHJcblxyXG4gICAgICBjb25zdCBuZ0RhdGUgPSAgbmV3IE5nYkRhdGUoK3llYXIsIG1vbnRoLCArZGF5KTtcclxuICAgICAgcmV0dXJuIG5nRGF0ZTtcclxuICAgfVxyXG5cclxuXHJcbiAgICBUb0dyZWdvcmlhbkRhdGVTdHJ1Y3QoZ3JlZ29yaWFuRGF0ZTogc3RyaW5nLCBmb3JtYXQ6IHN0cmluZyk6IE5nYkRhdGUge1xyXG5cclxuICAgICAgY29uc3QgbW9tZW50RGF0ZSA9IG1vbWVudChncmVnb3JpYW5EYXRlLCBmb3JtYXQpOyAvLyBQYXJzZSBhIEdyZWdvcmlhbiBkYXRlIGJhc2VkIG9uIGZvcm1hdC5cclxuXHJcbiAgICAgIGNvbnN0IGRheSA9IG1vbWVudERhdGUuZGF0ZSgpO1xyXG4gICAgICBjb25zdCBtb250aCA9ICttb21lbnREYXRlLm1vbnRoKCkgKyAxO1xyXG4gICAgICBjb25zdCB5ZWFyID0gbW9tZW50RGF0ZS55ZWFyKCk7XHJcblxyXG4gICAgICBjb25zdCBuZ0RhdGUgPSBuZXcgTmdiRGF0ZSgreWVhciwgK21vbnRoLCArZGF5KTtcclxuICAgICAgcmV0dXJuIG5nRGF0ZTtcclxuICAgIH1cclxuXHJcbiAgICBUb0hpanJpKGRhdGU6IE5nYkRhdGVTdHJ1Y3QpOiBOZ2JEYXRlU3RydWN0IHtcclxuICAgICAgICBpZiAoIWRhdGUpIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IGRhdGVTdHIgPSB0aGlzLlRvU3RyaW5nKGRhdGUpO1xyXG5cclxuICAgICAgICBjb25zdCBtb21lbnREYXRlID0gbW9tZW50SGlqcmkoZGF0ZVN0ciwgJ0QvTS9ZWVlZJyk7XHJcblxyXG4gICAgICAgIGNvbnN0IGRheSA9IG1vbWVudERhdGUuaURhdGUoKTtcclxuICAgICAgICBjb25zdCBtb250aCA9ICttb21lbnREYXRlLmlNb250aCgpICsgMSA7XHJcbiAgICAgICAgY29uc3QgeWVhciA9IG1vbWVudERhdGUuaVllYXIoKTtcclxuXHJcbiAgICAgICAgY29uc3QgbmdEYXRlID0gIG5ldyBOZ2JEYXRlKCt5ZWFyLCBtb250aCwgK2RheSk7XHJcbiAgICAgICAgcmV0dXJuIG5nRGF0ZTtcclxuICAgIH1cclxuXHJcbiAgICBUb0dyZWdvcmlhbihkYXRlOiBOZ2JEYXRlU3RydWN0KSB7XHJcbiAgICAgICAgaWYgKCFkYXRlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgZGF0ZVN0ciA9IHRoaXMuVG9TdHJpbmcoZGF0ZSk7XHJcblxyXG4gICAgICAgIGNvbnN0IG1vbWVudERhdGUgPSBtb21lbnRIaWpyaShkYXRlU3RyLCAnaUQvaU0vaVlZWVknKTtcclxuXHJcbiAgICAgICAgY29uc3QgZGF5ID0gbW9tZW50RGF0ZS5sb2NhbGUoJ2VuJykuZm9ybWF0KCdEJyk7XHJcbiAgICAgICAgY29uc3QgbW9udGggPSBtb21lbnREYXRlLmxvY2FsZSgnZW4nKS5mb3JtYXQoJ00nKSA7XHJcbiAgICAgICAgY29uc3QgeWVhciA9IG1vbWVudERhdGUubG9jYWxlKCdlbicpLmZvcm1hdCgnWScpO1xyXG5cclxuICAgICAgICBjb25zdCBuZ0RhdGUgPSAgbmV3IE5nYkRhdGUoK3llYXIsICttb250aCwgK2RheSk7XHJcbiAgICAgICAgcmV0dXJuIG5nRGF0ZTtcclxuICAgIH1cclxuXHJcbiAgICBHZXRUb2RheUhpanJpKCk6IE5nYkRhdGVTdHJ1Y3Qge1xyXG5cclxuICAgICAgY29uc3QgdG9kYXlIaWpyaSA9IG1vbWVudEhpanJpKCkubG9jYWxlKCdlbicpLmZvcm1hdCgnaVlZWVkvaU0vaUQnKTtcclxuXHJcbiAgICAgIHJldHVybiB0aGlzLlRvSGlqcmlEYXRlU3RydWN0KHRvZGF5SGlqcmksICdpWVlZWS9pTS9pRCcpIDtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgR2V0VG9kYXlHcmVnb3JpYW4oKTogTmdiRGF0ZVN0cnVjdCB7XHJcblxyXG4gICAgICBjb25zdCB0b2RheUdyZWdvcmlhbiA9IG1vbWVudCgpLmxvY2FsZSgnZW4nKS5mb3JtYXQoJ1lZWVkvTS9EJyk7XHJcblxyXG4gICAgICByZXR1cm4gdGhpcy5Ub0dyZWdvcmlhbkRhdGVTdHJ1Y3QodG9kYXlHcmVnb3JpYW4sICdZWVlZL00vRCcpIDtcclxuICAgIH1cclxuXHJcbn1cclxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;charset=utf-8;base64,
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/date-formatter.service.js.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/date-formatter.service.js.__ivy_ngcc_bak
new file mode 100644
index 0000000..6ceb2ef
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/date-formatter.service.js.__ivy_ngcc_bak
@@ -0,0 +1,143 @@
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/hijri-gregorian-datepicker/date-formatter.service.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+import { Injectable } from '@angular/core';
+import { NgbDateParserFormatter, NgbDate } from '@ng-bootstrap/ng-bootstrap';
+import * as momentjs from 'moment';
+/** @type {?} */
+const moment = momentjs;
+import * as moment_ from 'moment-hijri';
+/** @type {?} */
+const momentHijri = moment_;
+export class DateFormatterService {
+    /**
+     * @param {?} parserFormatter
+     */
+    constructor(parserFormatter) {
+        this.parserFormatter = parserFormatter;
+    }
+    /**
+     * @param {?} date
+     * @return {?}
+     */
+    ToString(date) {
+        /** @type {?} */
+        const dateStr = this.parserFormatter.format(date);
+        return dateStr;
+    }
+    /**
+     * @param {?} hijriDate
+     * @param {?} format
+     * @return {?}
+     */
+    ToHijriDateStruct(hijriDate, format) {
+        /** @type {?} */
+        const hijriMomentDate = momentHijri(hijriDate, format);
+        // Parse a Hijri date based on format.
+        /** @type {?} */
+        const day = hijriMomentDate.iDate();
+        /** @type {?} */
+        const month = +hijriMomentDate.iMonth() + 1;
+        /** @type {?} */
+        const year = hijriMomentDate.iYear();
+        /** @type {?} */
+        const ngDate = new NgbDate(+year, month, +day);
+        return ngDate;
+    }
+    /**
+     * @param {?} gregorianDate
+     * @param {?} format
+     * @return {?}
+     */
+    ToGregorianDateStruct(gregorianDate, format) {
+        /** @type {?} */
+        const momentDate = moment(gregorianDate, format);
+        // Parse a Gregorian date based on format.
+        /** @type {?} */
+        const day = momentDate.date();
+        /** @type {?} */
+        const month = +momentDate.month() + 1;
+        /** @type {?} */
+        const year = momentDate.year();
+        /** @type {?} */
+        const ngDate = new NgbDate(+year, +month, +day);
+        return ngDate;
+    }
+    /**
+     * @param {?} date
+     * @return {?}
+     */
+    ToHijri(date) {
+        if (!date) {
+            return null;
+        }
+        /** @type {?} */
+        const dateStr = this.ToString(date);
+        /** @type {?} */
+        const momentDate = momentHijri(dateStr, 'D/M/YYYY');
+        /** @type {?} */
+        const day = momentDate.iDate();
+        /** @type {?} */
+        const month = +momentDate.iMonth() + 1;
+        /** @type {?} */
+        const year = momentDate.iYear();
+        /** @type {?} */
+        const ngDate = new NgbDate(+year, month, +day);
+        return ngDate;
+    }
+    /**
+     * @param {?} date
+     * @return {?}
+     */
+    ToGregorian(date) {
+        if (!date) {
+            return null;
+        }
+        /** @type {?} */
+        const dateStr = this.ToString(date);
+        /** @type {?} */
+        const momentDate = momentHijri(dateStr, 'iD/iM/iYYYY');
+        /** @type {?} */
+        const day = momentDate.locale('en').format('D');
+        /** @type {?} */
+        const month = momentDate.locale('en').format('M');
+        /** @type {?} */
+        const year = momentDate.locale('en').format('Y');
+        /** @type {?} */
+        const ngDate = new NgbDate(+year, +month, +day);
+        return ngDate;
+    }
+    /**
+     * @return {?}
+     */
+    GetTodayHijri() {
+        /** @type {?} */
+        const todayHijri = momentHijri().locale('en').format('iYYYY/iM/iD');
+        return this.ToHijriDateStruct(todayHijri, 'iYYYY/iM/iD');
+    }
+    /**
+     * @return {?}
+     */
+    GetTodayGregorian() {
+        /** @type {?} */
+        const todayGregorian = moment().locale('en').format('YYYY/M/D');
+        return this.ToGregorianDateStruct(todayGregorian, 'YYYY/M/D');
+    }
+}
+DateFormatterService.decorators = [
+    { type: Injectable }
+];
+/** @nocollapse */
+DateFormatterService.ctorParameters = () => [
+    { type: NgbDateParserFormatter }
+];
+if (false) {
+    /**
+     * @type {?}
+     * @private
+     */
+    DateFormatterService.prototype.parserFormatter;
+}
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1mb3JtYXR0ZXIuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci8iLCJzb3VyY2VzIjpbImxpYi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9kYXRlLWZvcm1hdHRlci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQWlCLHNCQUFzQixFQUFFLE9BQU8sRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRTVGLE9BQU8sS0FBSyxRQUFRLE1BQU0sUUFBUSxDQUFDOztNQUM3QixNQUFNLEdBQUcsUUFBUTtBQUd2QixPQUFPLEtBQUssT0FBTyxNQUFNLGNBQWMsQ0FBQzs7TUFDbEMsV0FBVyxHQUFHLE9BQU87QUFHM0IsTUFBTSxPQUFPLG9CQUFvQjs7OztJQUUvQixZQUFvQixlQUF1QztRQUF2QyxvQkFBZSxHQUFmLGVBQWUsQ0FBd0I7SUFBSSxDQUFDOzs7OztJQUU5RCxRQUFRLENBQUMsSUFBbUI7O2NBQ2xCLE9BQU8sR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUM7UUFDakQsT0FBTyxPQUFPLENBQUM7SUFDbkIsQ0FBQzs7Ozs7O0lBRUQsaUJBQWlCLENBQUMsU0FBaUIsRUFBRSxNQUFjOztjQUUzQyxlQUFlLEdBQUksV0FBVyxDQUFDLFNBQVMsRUFBRyxNQUFNLENBQUM7OztjQUVsRCxHQUFHLEdBQUcsZUFBZSxDQUFDLEtBQUssRUFBRTs7Y0FDN0IsS0FBSyxHQUFHLENBQUMsZUFBZSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUM7O2NBQ3JDLElBQUksR0FBRyxlQUFlLENBQUMsS0FBSyxFQUFFOztjQUU5QixNQUFNLEdBQUksSUFBSSxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLENBQUMsR0FBRyxDQUFDO1FBQy9DLE9BQU8sTUFBTSxDQUFDO0lBQ2pCLENBQUM7Ozs7OztJQUdBLHFCQUFxQixDQUFDLGFBQXFCLEVBQUUsTUFBYzs7Y0FFbkQsVUFBVSxHQUFHLE1BQU0sQ0FBQyxhQUFhLEVBQUUsTUFBTSxDQUFDOzs7Y0FFMUMsR0FBRyxHQUFHLFVBQVUsQ0FBQyxJQUFJLEVBQUU7O2NBQ3ZCLEtBQUssR0FBRyxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDOztjQUMvQixJQUFJLEdBQUcsVUFBVSxDQUFDLElBQUksRUFBRTs7Y0FFeEIsTUFBTSxHQUFHLElBQUksT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsS0FBSyxFQUFFLENBQUMsR0FBRyxDQUFDO1FBQy9DLE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7Ozs7O0lBRUQsT0FBTyxDQUFDLElBQW1CO1FBQ3ZCLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDUCxPQUFPLElBQUksQ0FBQztTQUNmOztjQUNLLE9BQU8sR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQzs7Y0FFN0IsVUFBVSxHQUFHLFdBQVcsQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDOztjQUU3QyxHQUFHLEdBQUcsVUFBVSxDQUFDLEtBQUssRUFBRTs7Y0FDeEIsS0FBSyxHQUFHLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUM7O2NBQ2hDLElBQUksR0FBRyxVQUFVLENBQUMsS0FBSyxFQUFFOztjQUV6QixNQUFNLEdBQUksSUFBSSxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLENBQUMsR0FBRyxDQUFDO1FBQy9DLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7Ozs7O0lBRUQsV0FBVyxDQUFDLElBQW1CO1FBQzNCLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDUCxPQUFPLElBQUksQ0FBQztTQUNmOztjQUVLLE9BQU8sR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQzs7Y0FFN0IsVUFBVSxHQUFHLFdBQVcsQ0FBQyxPQUFPLEVBQUUsYUFBYSxDQUFDOztjQUVoRCxHQUFHLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDOztjQUN6QyxLQUFLLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDOztjQUMzQyxJQUFJLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDOztjQUUxQyxNQUFNLEdBQUksSUFBSSxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxHQUFHLENBQUM7UUFDaEQsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQzs7OztJQUVELGFBQWE7O2NBRUwsVUFBVSxHQUFHLFdBQVcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDO1FBRW5FLE9BQU8sSUFBSSxDQUFDLGlCQUFpQixDQUFDLFVBQVUsRUFBRSxhQUFhLENBQUMsQ0FBRTtJQUU1RCxDQUFDOzs7O0lBRUQsaUJBQWlCOztjQUVULGNBQWMsR0FBRyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQztRQUUvRCxPQUFPLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxjQUFjLEVBQUUsVUFBVSxDQUFDLENBQUU7SUFDakUsQ0FBQzs7O1lBakZKLFVBQVU7Ozs7WUFUYSxzQkFBc0I7Ozs7Ozs7SUFZaEMsK0NBQStDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBOZ2JEYXRlU3RydWN0LCBOZ2JEYXRlUGFyc2VyRm9ybWF0dGVyLCBOZ2JEYXRlIH0gZnJvbSAnQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAnO1xyXG5cclxuaW1wb3J0ICogYXMgbW9tZW50anMgZnJvbSAnbW9tZW50JztcclxuY29uc3QgbW9tZW50ID0gbW9tZW50anM7XHJcblxyXG5cclxuaW1wb3J0ICogYXMgbW9tZW50XyBmcm9tICdtb21lbnQtaGlqcmknO1xyXG5jb25zdCBtb21lbnRIaWpyaSA9IG1vbWVudF87XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBEYXRlRm9ybWF0dGVyU2VydmljZSB7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcGFyc2VyRm9ybWF0dGVyOiBOZ2JEYXRlUGFyc2VyRm9ybWF0dGVyKSB7IH1cclxuXHJcbiAgICBUb1N0cmluZyhkYXRlOiBOZ2JEYXRlU3RydWN0KTogc3RyaW5nIHtcclxuICAgICAgICBjb25zdCBkYXRlU3RyID0gdGhpcy5wYXJzZXJGb3JtYXR0ZXIuZm9ybWF0KGRhdGUpO1xyXG4gICAgICAgIHJldHVybiBkYXRlU3RyO1xyXG4gICAgfVxyXG5cclxuICAgIFRvSGlqcmlEYXRlU3RydWN0KGhpanJpRGF0ZTogc3RyaW5nLCBmb3JtYXQ6IHN0cmluZyk6IE5nYkRhdGUgIHtcclxuXHJcbiAgICAgIGNvbnN0IGhpanJpTW9tZW50RGF0ZSA9ICBtb21lbnRIaWpyaShoaWpyaURhdGUgLCBmb3JtYXQpOyAvLyBQYXJzZSBhIEhpanJpIGRhdGUgYmFzZWQgb24gZm9ybWF0LlxyXG5cclxuICAgICAgY29uc3QgZGF5ID0gaGlqcmlNb21lbnREYXRlLmlEYXRlKCk7XHJcbiAgICAgIGNvbnN0IG1vbnRoID0gK2hpanJpTW9tZW50RGF0ZS5pTW9udGgoKSArIDEgO1xyXG4gICAgICBjb25zdCB5ZWFyID0gaGlqcmlNb21lbnREYXRlLmlZZWFyKCk7XHJcblxyXG4gICAgICBjb25zdCBuZ0RhdGUgPSAgbmV3IE5nYkRhdGUoK3llYXIsIG1vbnRoLCArZGF5KTtcclxuICAgICAgcmV0dXJuIG5nRGF0ZTtcclxuICAgfVxyXG5cclxuXHJcbiAgICBUb0dyZWdvcmlhbkRhdGVTdHJ1Y3QoZ3JlZ29yaWFuRGF0ZTogc3RyaW5nLCBmb3JtYXQ6IHN0cmluZyk6IE5nYkRhdGUge1xyXG5cclxuICAgICAgY29uc3QgbW9tZW50RGF0ZSA9IG1vbWVudChncmVnb3JpYW5EYXRlLCBmb3JtYXQpOyAvLyBQYXJzZSBhIEdyZWdvcmlhbiBkYXRlIGJhc2VkIG9uIGZvcm1hdC5cclxuXHJcbiAgICAgIGNvbnN0IGRheSA9IG1vbWVudERhdGUuZGF0ZSgpO1xyXG4gICAgICBjb25zdCBtb250aCA9ICttb21lbnREYXRlLm1vbnRoKCkgKyAxO1xyXG4gICAgICBjb25zdCB5ZWFyID0gbW9tZW50RGF0ZS55ZWFyKCk7XHJcblxyXG4gICAgICBjb25zdCBuZ0RhdGUgPSBuZXcgTmdiRGF0ZSgreWVhciwgK21vbnRoLCArZGF5KTtcclxuICAgICAgcmV0dXJuIG5nRGF0ZTtcclxuICAgIH1cclxuXHJcbiAgICBUb0hpanJpKGRhdGU6IE5nYkRhdGVTdHJ1Y3QpOiBOZ2JEYXRlU3RydWN0IHtcclxuICAgICAgICBpZiAoIWRhdGUpIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IGRhdGVTdHIgPSB0aGlzLlRvU3RyaW5nKGRhdGUpO1xyXG5cclxuICAgICAgICBjb25zdCBtb21lbnREYXRlID0gbW9tZW50SGlqcmkoZGF0ZVN0ciwgJ0QvTS9ZWVlZJyk7XHJcblxyXG4gICAgICAgIGNvbnN0IGRheSA9IG1vbWVudERhdGUuaURhdGUoKTtcclxuICAgICAgICBjb25zdCBtb250aCA9ICttb21lbnREYXRlLmlNb250aCgpICsgMSA7XHJcbiAgICAgICAgY29uc3QgeWVhciA9IG1vbWVudERhdGUuaVllYXIoKTtcclxuXHJcbiAgICAgICAgY29uc3QgbmdEYXRlID0gIG5ldyBOZ2JEYXRlKCt5ZWFyLCBtb250aCwgK2RheSk7XHJcbiAgICAgICAgcmV0dXJuIG5nRGF0ZTtcclxuICAgIH1cclxuXHJcbiAgICBUb0dyZWdvcmlhbihkYXRlOiBOZ2JEYXRlU3RydWN0KSB7XHJcbiAgICAgICAgaWYgKCFkYXRlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgZGF0ZVN0ciA9IHRoaXMuVG9TdHJpbmcoZGF0ZSk7XHJcblxyXG4gICAgICAgIGNvbnN0IG1vbWVudERhdGUgPSBtb21lbnRIaWpyaShkYXRlU3RyLCAnaUQvaU0vaVlZWVknKTtcclxuXHJcbiAgICAgICAgY29uc3QgZGF5ID0gbW9tZW50RGF0ZS5sb2NhbGUoJ2VuJykuZm9ybWF0KCdEJyk7XHJcbiAgICAgICAgY29uc3QgbW9udGggPSBtb21lbnREYXRlLmxvY2FsZSgnZW4nKS5mb3JtYXQoJ00nKSA7XHJcbiAgICAgICAgY29uc3QgeWVhciA9IG1vbWVudERhdGUubG9jYWxlKCdlbicpLmZvcm1hdCgnWScpO1xyXG5cclxuICAgICAgICBjb25zdCBuZ0RhdGUgPSAgbmV3IE5nYkRhdGUoK3llYXIsICttb250aCwgK2RheSk7XHJcbiAgICAgICAgcmV0dXJuIG5nRGF0ZTtcclxuICAgIH1cclxuXHJcbiAgICBHZXRUb2RheUhpanJpKCk6IE5nYkRhdGVTdHJ1Y3Qge1xyXG5cclxuICAgICAgY29uc3QgdG9kYXlIaWpyaSA9IG1vbWVudEhpanJpKCkubG9jYWxlKCdlbicpLmZvcm1hdCgnaVlZWVkvaU0vaUQnKTtcclxuXHJcbiAgICAgIHJldHVybiB0aGlzLlRvSGlqcmlEYXRlU3RydWN0KHRvZGF5SGlqcmksICdpWVlZWS9pTS9pRCcpIDtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgR2V0VG9kYXlHcmVnb3JpYW4oKTogTmdiRGF0ZVN0cnVjdCB7XHJcblxyXG4gICAgICBjb25zdCB0b2RheUdyZWdvcmlhbiA9IG1vbWVudCgpLmxvY2FsZSgnZW4nKS5mb3JtYXQoJ1lZWVkvTS9EJyk7XHJcblxyXG4gICAgICByZXR1cm4gdGhpcy5Ub0dyZWdvcmlhbkRhdGVTdHJ1Y3QodG9kYXlHcmVnb3JpYW4sICdZWVlZL00vRCcpIDtcclxuICAgIH1cclxuXHJcbn1cclxuIl19
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.js b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.js
index ec69f15..3c221ca 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.js
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.js
@@ -6,6 +6,24 @@
 import { Component, ViewEncapsulation, Input, Output, EventEmitter, ViewChild } from '@angular/core';
 import { NgbCalendar, NgbCalendarIslamicUmalqura, NgbDatepickerI18n } from '@ng-bootstrap/ng-bootstrap';
 import { IslamicI18n } from '../IslamicI18n';
+import * as ɵngcc0 from '@angular/core';
+import * as ɵngcc1 from '../provide-parent-form.directive';
+import * as ɵngcc2 from '@ng-bootstrap/ng-bootstrap';
+import * as ɵngcc3 from '@angular/forms';
+
+const _c0 = ["d"];
+function HijriDatepickerComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {
+    const _r4 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelement(0, "hr", 4);
+    ɵngcc0.ɵɵelementStart(1, "button", 5);
+    ɵngcc0.ɵɵlistener("click", function HijriDatepickerComponent_ng_template_3_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r4); ɵngcc0.ɵɵnextContext(); const _r0 = ɵngcc0.ɵɵreference(2); return _r0.close(); });
+    ɵngcc0.ɵɵtext(2, "Close");
+    ɵngcc0.ɵɵelementEnd();
+    ɵngcc0.ɵɵelementStart(3, "button", 6);
+    ɵngcc0.ɵɵlistener("click", function HijriDatepickerComponent_ng_template_3_Template_button_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.clear(); });
+    ɵngcc0.ɵɵtext(4, "Clear");
+    ɵngcc0.ɵɵelementEnd();
+} }
 export class HijriDatepickerComponent {
     constructor() {
         this.selectedDateChange = new EventEmitter();
@@ -36,18 +54,28 @@ export class HijriDatepickerComponent {
         this.selectedDateChange.emit(null);
     }
 }
-HijriDatepickerComponent.decorators = [
-    { type: Component, args: [{
-                selector: 'hijri-date-picker',
-                template: "<div provideParentForm>\n<input\n    class=\"form-control hijriInput\"\n    [(ngModel)]=\"selectedDate\"\n    [placeholder]=\"placeHolder ?placeHolder : 'd/M/yyyy'\"\n    ngbDatepicker\n    (click)=\"d.toggle()\"\n    (dateSelect)=\"changeDate()\"\n    #d=\"ngbDatepicker\"\n    [readonly]=\"readonly\"\n    [minDate]=\"min\"\n    [maxDate]=\"max\"\n    [required]=\"isRequired\"\n    [name]=\"name\"\n    (blur)=\"onBlur()\"\n    [footerTemplate]=\"footerTemplate\"\n    [disabled]=\"disabled\" />\n</div>\n\n\n<ng-template #footerTemplate>\n  <hr class=\"my-0\">\n  <button class=\"btn btn-secondary btn-sm m-2 float-right\" type=\"button\" (click)=\"d.close()\">Close</button>\n  <button class=\"btn btn-primary btn-sm m-2 float-left\" type=\"button\" (click)=\"clear()\">Clear</button>\n</ng-template>\n",
-                providers: [
-                    { provide: NgbCalendar, useClass: NgbCalendarIslamicUmalqura },
-                    { provide: NgbDatepickerI18n, useClass: IslamicI18n }
-                ],
-                encapsulation: ViewEncapsulation.None,
-                styles: [".hijriInput{border-top-left-radius:0;border-bottom-left-radius:0}.ngb-dp-weekday{width:2.1rem!important}"]
-            }] }
-];
+HijriDatepickerComponent.ɵfac = function HijriDatepickerComponent_Factory(t) { return new (t || HijriDatepickerComponent)(); };
+HijriDatepickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: HijriDatepickerComponent, selectors: [["hijri-date-picker"]], viewQuery: function HijriDatepickerComponent_Query(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵviewQuery(_c0, true);
+    } if (rf & 2) {
+        var _t;
+        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.datePicker = _t.first);
+    } }, inputs: { readonly: "readonly", isRequired: "isRequired", disabled: "disabled", selectedDate: "selectedDate", min: "min", max: "max", name: "name", placeHolder: "placeHolder" }, outputs: { selectedDateChange: "selectedDateChange" }, features: [ɵngcc0.ɵɵProvidersFeature([
+            { provide: NgbCalendar, useClass: NgbCalendarIslamicUmalqura },
+            { provide: NgbDatepickerI18n, useClass: IslamicI18n }
+        ])], decls: 5, vars: 9, consts: [["provideParentForm", ""], ["ngbDatepicker", "", 1, "form-control", "hijriInput", 3, "ngModel", "placeholder", "readonly", "minDate", "maxDate", "required", "name", "footerTemplate", "disabled", "ngModelChange", "click", "dateSelect", "blur"], ["d", "ngbDatepicker"], ["footerTemplate", ""], [1, "my-0"], ["type", "button", 1, "btn", "btn-secondary", "btn-sm", "m-2", "float-right", 3, "click"], ["type", "button", 1, "btn", "btn-primary", "btn-sm", "m-2", "float-left", 3, "click"]], template: function HijriDatepickerComponent_Template(rf, ctx) { if (rf & 1) {
+        const _r6 = ɵngcc0.ɵɵgetCurrentView();
+        ɵngcc0.ɵɵelementStart(0, "div", 0);
+        ɵngcc0.ɵɵelementStart(1, "input", 1, 2);
+        ɵngcc0.ɵɵlistener("ngModelChange", function HijriDatepickerComponent_Template_input_ngModelChange_1_listener($event) { return ctx.selectedDate = $event; })("click", function HijriDatepickerComponent_Template_input_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r6); const _r0 = ɵngcc0.ɵɵreference(2); return _r0.toggle(); })("dateSelect", function HijriDatepickerComponent_Template_input_dateSelect_1_listener() { return ctx.changeDate(); })("blur", function HijriDatepickerComponent_Template_input_blur_1_listener() { return ctx.onBlur(); });
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵtemplate(3, HijriDatepickerComponent_ng_template_3_Template, 5, 0, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
+    } if (rf & 2) {
+        const _r1 = ɵngcc0.ɵɵreference(4);
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵproperty("ngModel", ctx.selectedDate)("placeholder", ctx.placeHolder ? ctx.placeHolder : "d/M/yyyy")("readonly", ctx.readonly)("minDate", ctx.min)("maxDate", ctx.max)("required", ctx.isRequired)("name", ctx.name)("footerTemplate", _r1)("disabled", ctx.disabled);
+    } }, directives: [ɵngcc1.ProvideParentFormDirective, ɵngcc2.NgbInputDatepicker, ɵngcc3.DefaultValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.NgModel, ɵngcc3.RequiredValidator], styles: [".hijriInput{border-top-left-radius:0;border-bottom-left-radius:0}.ngb-dp-weekday{width:2.1rem!important}"], encapsulation: 2 });
 /** @nocollapse */
 HijriDatepickerComponent.ctorParameters = () => [];
 HijriDatepickerComponent.propDecorators = {
@@ -62,6 +90,40 @@ HijriDatepickerComponent.propDecorators = {
     name: [{ type: Input }],
     placeHolder: [{ type: Input }]
 };
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HijriDatepickerComponent, [{
+        type: Component,
+        args: [{
+                selector: 'hijri-date-picker',
+                template: "<div provideParentForm>\n<input\n    class=\"form-control hijriInput\"\n    [(ngModel)]=\"selectedDate\"\n    [placeholder]=\"placeHolder ?placeHolder : 'd/M/yyyy'\"\n    ngbDatepicker\n    (click)=\"d.toggle()\"\n    (dateSelect)=\"changeDate()\"\n    #d=\"ngbDatepicker\"\n    [readonly]=\"readonly\"\n    [minDate]=\"min\"\n    [maxDate]=\"max\"\n    [required]=\"isRequired\"\n    [name]=\"name\"\n    (blur)=\"onBlur()\"\n    [footerTemplate]=\"footerTemplate\"\n    [disabled]=\"disabled\" />\n</div>\n\n\n<ng-template #footerTemplate>\n  <hr class=\"my-0\">\n  <button class=\"btn btn-secondary btn-sm m-2 float-right\" type=\"button\" (click)=\"d.close()\">Close</button>\n  <button class=\"btn btn-primary btn-sm m-2 float-left\" type=\"button\" (click)=\"clear()\">Clear</button>\n</ng-template>\n",
+                providers: [
+                    { provide: NgbCalendar, useClass: NgbCalendarIslamicUmalqura },
+                    { provide: NgbDatepickerI18n, useClass: IslamicI18n }
+                ],
+                encapsulation: ViewEncapsulation.None,
+                styles: [".hijriInput{border-top-left-radius:0;border-bottom-left-radius:0}.ngb-dp-weekday{width:2.1rem!important}"]
+            }]
+    }], function () { return []; }, { selectedDateChange: [{
+            type: Output
+        }], readonly: [{
+            type: Input
+        }], isRequired: [{
+            type: Input
+        }], disabled: [{
+            type: Input
+        }], selectedDate: [{
+            type: Input
+        }], datePicker: [{
+            type: ViewChild,
+            args: ['d']
+        }], min: [{
+            type: Input
+        }], max: [{
+            type: Input
+        }], name: [{
+            type: Input
+        }], placeHolder: [{
+            type: Input
+        }] }); })();
 if (false) {
     /** @type {?} */
     HijriDatepickerComponent.prototype.datePicker;
@@ -84,4 +146,4 @@ if (false) {
     /** @type {?} */
     HijriDatepickerComponent.prototype.placeHolder;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlqcmktZGF0ZXBpY2tlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvIiwic291cmNlcyI6WyJsaWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvaGlqcmktZGF0ZXBpY2tlci9oaWpyaS1kYXRlcGlja2VyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdHLE9BQU8sRUFBRSxXQUFXLEVBQUUsMEJBQTBCLEVBQUUsaUJBQWlCLEVBQWlCLE1BQU0sNEJBQTRCLENBQUM7QUFDdkgsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBZTdDLE1BQU0sT0FBTyx3QkFBd0I7SUFnQm5DO1FBWFUsdUJBQWtCLEdBQWdDLElBQUksWUFBWSxFQUFFLENBQUM7UUFFdEUsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUNqQixlQUFVLEdBQUcsS0FBSyxDQUFDO1FBQ25CLGFBQVEsR0FBRyxLQUFLLENBQUM7SUFPVixDQUFDOzs7O0lBRWpCLFVBQVU7UUFDUixJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUNsRCxDQUFDOzs7O0lBRUQsTUFBTTtRQUNKLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQ3RCLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDcEM7SUFDSCxDQUFDOzs7O0lBRUQsS0FBSztRQUNILElBQUksQ0FBQyxZQUFZLEdBQUcsU0FBUyxDQUFDO1FBQzlCLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDeEIsSUFBSSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNyQyxDQUFDOzs7WUE1Q0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxtQkFBbUI7Z0JBQzdCLG16QkFBZ0Q7Z0JBQ2hELFNBQVMsRUFBRTtvQkFDVCxFQUFFLE9BQU8sRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLDBCQUEwQixFQUFFO29CQUM5RCxFQUFFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxRQUFRLEVBQUUsV0FBVyxFQUFFO2lCQUN0RDtnQkFJRCxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTs7YUFDdEM7Ozs7O3lCQUdFLFNBQVMsU0FBQyxHQUFHOzJCQUViLEtBQUs7aUNBQ0wsTUFBTTt1QkFFTixLQUFLO3lCQUNMLEtBQUs7dUJBQ0wsS0FBSztrQkFDTCxLQUFLO2tCQUNMLEtBQUs7bUJBQ0wsS0FBSzswQkFFTCxLQUFLOzs7O0lBWk4sOENBQWdDOztJQUVoQyxnREFBcUM7O0lBQ3JDLHNEQUErRTs7SUFFL0UsNENBQTBCOztJQUMxQiw4Q0FBNEI7O0lBQzVCLDRDQUEwQjs7SUFDMUIsdUNBQTRCOztJQUM1Qix1Q0FBNEI7O0lBQzVCLHdDQUFzQjs7SUFFdEIsK0NBQTZCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIFZpZXdFbmNhcHN1bGF0aW9uLCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdiQ2FsZW5kYXIsIE5nYkNhbGVuZGFySXNsYW1pY1VtYWxxdXJhLCBOZ2JEYXRlcGlja2VySTE4biwgTmdiRGF0ZVN0cnVjdCB9IGZyb20gJ0BuZy1ib290c3RyYXAvbmctYm9vdHN0cmFwJztcbmltcG9ydCB7IElzbGFtaWNJMThuIH0gZnJvbSAnLi4vSXNsYW1pY0kxOG4nO1xuaW1wb3J0IHsgQ29udHJvbENvbnRhaW5lciwgTmdGb3JtIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdoaWpyaS1kYXRlLXBpY2tlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9oaWpyaS1kYXRlcGlja2VyLmNvbXBvbmVudC5odG1sJyxcbiAgcHJvdmlkZXJzOiBbXG4gICAgeyBwcm92aWRlOiBOZ2JDYWxlbmRhciwgdXNlQ2xhc3M6IE5nYkNhbGVuZGFySXNsYW1pY1VtYWxxdXJhIH0sXG4gICAgeyBwcm92aWRlOiBOZ2JEYXRlcGlja2VySTE4biwgdXNlQ2xhc3M6IElzbGFtaWNJMThuIH1cbiAgXSxcbiAgc3R5bGVVcmxzOiBbXG4gICAgJy4vaGlqcmktZGF0ZS1waWNrZXIuY29tcG9uZW50LmNzcydcbiAgXSxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBIaWpyaURhdGVwaWNrZXJDb21wb25lbnQge1xuXG4gIEBWaWV3Q2hpbGQoJ2QnKSBkYXRlUGlja2VyOiBhbnk7XG5cbiAgQElucHV0KCkgc2VsZWN0ZWREYXRlOiBOZ2JEYXRlU3RydWN0O1xuICBAT3V0cHV0KCkgc2VsZWN0ZWREYXRlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8TmdiRGF0ZVN0cnVjdD4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgQElucHV0KCkgcmVhZG9ubHkgPSBmYWxzZTtcbiAgQElucHV0KCkgaXNSZXF1aXJlZCA9IGZhbHNlO1xuICBASW5wdXQoKSBkaXNhYmxlZCA9IGZhbHNlO1xuICBASW5wdXQoKSBtaW46IE5nYkRhdGVTdHJ1Y3Q7XG4gIEBJbnB1dCgpIG1heDogTmdiRGF0ZVN0cnVjdDtcbiAgQElucHV0KCkgbmFtZTogc3RyaW5nO1xuXG4gIEBJbnB1dCgpIHBsYWNlSG9sZGVyOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxuICBjaGFuZ2VEYXRlKCkge1xuICAgIHRoaXMuc2VsZWN0ZWREYXRlQ2hhbmdlLmVtaXQodGhpcy5zZWxlY3RlZERhdGUpO1xuICB9XG5cbiAgb25CbHVyKCkge1xuICAgIGlmICghdGhpcy5zZWxlY3RlZERhdGUpIHtcbiAgICAgIHRoaXMuc2VsZWN0ZWREYXRlQ2hhbmdlLmVtaXQobnVsbCk7XG4gICAgfVxuICB9XG5cbiAgY2xlYXIoKSB7XG4gICAgdGhpcy5zZWxlY3RlZERhdGUgPSB1bmRlZmluZWQ7XG4gICAgdGhpcy5kYXRlUGlja2VyLmNsb3NlKCk7XG4gICAgdGhpcy5zZWxlY3RlZERhdGVDaGFuZ2UuZW1pdChudWxsKTtcbiAgfVxuXG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlqcmktZGF0ZXBpY2tlci5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIm5neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9saWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvaGlqcmktZGF0ZXBpY2tlci9oaWpyaS1kYXRlcGlja2VyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdHLE9BQU8sRUFBRSxXQUFXLEVBQUUsMEJBQTBCLEVBQUUsaUJBQWlCLEVBQWlCLE1BQU0sNEJBQTRCLENBQUM7QUFDdkgsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZTdDLE1BQU0sT0FBTyx3QkFBd0I7QUFDckMsSUFlRTtBQUFnQixRQVhOLHVCQUFrQixHQUFnQyxJQUFJLFlBQVksRUFBRSxDQUFDO0FBQ2pGLFFBQ1csYUFBUSxHQUFHLEtBQUssQ0FBQztBQUM1QixRQUFXLGVBQVUsR0FBRyxLQUFLLENBQUM7QUFDOUIsUUFBVyxhQUFRLEdBQUcsS0FBSyxDQUFDO0FBQzVCLElBTWtCLENBQUM7QUFDbkI7QUFDTztBQUNFO0FBQVEsSUFEZixVQUFVO0FBQ1osUUFBSSxJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUNwRCxJQUFFLENBQUM7QUFDSDtBQUNPO0FBQ007QUFBUSxJQURuQixNQUFNO0FBQ1IsUUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRTtBQUM1QixZQUFNLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDekMsU0FBSztBQUNMLElBQUUsQ0FBQztBQUNIO0FBQ087QUFDTztBQUFRLElBRHBCLEtBQUs7QUFDUCxRQUFJLElBQUksQ0FBQyxZQUFZLEdBQUcsU0FBUyxDQUFDO0FBQ2xDLFFBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztBQUM1QixRQUFJLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDdkMsSUFBRSxDQUFDO0FBQ0g7b0RBN0NDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsbUJBQW1CO09BQzdCOzs7Ozs7OztvQ0FBZ0Qsa0JBQ2hELFNBQVMsRUFBRSxzQkFDVCxFQUFFLE9BQU8sRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLDBCQUEwQixFQUFFLHNCQUM5RCxFQUFFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxRQUFRLEVBQUUsV0FBVyxFQUFFLGtCQUN0RCxrQkFJRCxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSSxvSkFDdEM7Ozs7Ozs7Ozs7Ozs4VEFDRztBQUFDO0FBQW1CO0FBR3hCO0FBRUcseUJBSEEsU0FBUyxTQUFDLEdBQUc7QUFBTywyQkFFcEIsS0FBSztBQUFLLGlDQUNWLE1BQU07QUFBSyx1QkFFWCxLQUFLO0FBQUsseUJBQ1YsS0FBSztBQUFLLHVCQUNWLEtBQUs7QUFBSyxrQkFDVixLQUFLO0FBQUssa0JBQ1YsS0FBSztBQUFLLG1CQUNWLEtBQUs7QUFBSywwQkFFVixLQUFLO0FBQUk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQUU7QUFBQztBQUFhO0FBRVosSUFkZCw4Q0FBZ0M7QUFDbEM7QUFDb0IsSUFBbEIsZ0RBQXFDO0FBQ3ZDO0FBQXFCLElBQW5CLHNEQUErRTtBQUNqRjtBQUNvQixJQUFsQiw0Q0FBMEI7QUFDNUI7QUFBcUIsSUFBbkIsOENBQTRCO0FBQzlCO0FBQXFCLElBQW5CLDRDQUEwQjtBQUM1QjtBQUFxQixJQUFuQix1Q0FBNEI7QUFDOUI7QUFBcUIsSUFBbkIsdUNBQTRCO0FBQzlCO0FBQXFCLElBQW5CLHdDQUFzQjtBQUN4QjtBQUNvQixJQUFsQiwrQ0FBNkI7O0FBL0JBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFlQSxBQUFBLEFBQUEsQUFBQSxBQWdCQSxBQVhBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBT0EsQUFBQSxBQUVBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBNUNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUlBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBR0EsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFaQSxBQUFBLEFBRUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIFZpZXdFbmNhcHN1bGF0aW9uLCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdiQ2FsZW5kYXIsIE5nYkNhbGVuZGFySXNsYW1pY1VtYWxxdXJhLCBOZ2JEYXRlcGlja2VySTE4biwgTmdiRGF0ZVN0cnVjdCB9IGZyb20gJ0BuZy1ib290c3RyYXAvbmctYm9vdHN0cmFwJztcbmltcG9ydCB7IElzbGFtaWNJMThuIH0gZnJvbSAnLi4vSXNsYW1pY0kxOG4nO1xuaW1wb3J0IHsgQ29udHJvbENvbnRhaW5lciwgTmdGb3JtIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdoaWpyaS1kYXRlLXBpY2tlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9oaWpyaS1kYXRlcGlja2VyLmNvbXBvbmVudC5odG1sJyxcbiAgcHJvdmlkZXJzOiBbXG4gICAgeyBwcm92aWRlOiBOZ2JDYWxlbmRhciwgdXNlQ2xhc3M6IE5nYkNhbGVuZGFySXNsYW1pY1VtYWxxdXJhIH0sXG4gICAgeyBwcm92aWRlOiBOZ2JEYXRlcGlja2VySTE4biwgdXNlQ2xhc3M6IElzbGFtaWNJMThuIH1cbiAgXSxcbiAgc3R5bGVVcmxzOiBbXG4gICAgJy4vaGlqcmktZGF0ZS1waWNrZXIuY29tcG9uZW50LmNzcydcbiAgXSxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBIaWpyaURhdGVwaWNrZXJDb21wb25lbnQge1xuXG4gIEBWaWV3Q2hpbGQoJ2QnKSBkYXRlUGlja2VyOiBhbnk7XG5cbiAgQElucHV0KCkgc2VsZWN0ZWREYXRlOiBOZ2JEYXRlU3RydWN0O1xuICBAT3V0cHV0KCkgc2VsZWN0ZWREYXRlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8TmdiRGF0ZVN0cnVjdD4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgQElucHV0KCkgcmVhZG9ubHkgPSBmYWxzZTtcbiAgQElucHV0KCkgaXNSZXF1aXJlZCA9IGZhbHNlO1xuICBASW5wdXQoKSBkaXNhYmxlZCA9IGZhbHNlO1xuICBASW5wdXQoKSBtaW46IE5nYkRhdGVTdHJ1Y3Q7XG4gIEBJbnB1dCgpIG1heDogTmdiRGF0ZVN0cnVjdDtcbiAgQElucHV0KCkgbmFtZTogc3RyaW5nO1xuXG4gIEBJbnB1dCgpIHBsYWNlSG9sZGVyOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxuICBjaGFuZ2VEYXRlKCkge1xuICAgIHRoaXMuc2VsZWN0ZWREYXRlQ2hhbmdlLmVtaXQodGhpcy5zZWxlY3RlZERhdGUpO1xuICB9XG5cbiAgb25CbHVyKCkge1xuICAgIGlmICghdGhpcy5zZWxlY3RlZERhdGUpIHtcbiAgICAgIHRoaXMuc2VsZWN0ZWREYXRlQ2hhbmdlLmVtaXQobnVsbCk7XG4gICAgfVxuICB9XG5cbiAgY2xlYXIoKSB7XG4gICAgdGhpcy5zZWxlY3RlZERhdGUgPSB1bmRlZmluZWQ7XG4gICAgdGhpcy5kYXRlUGlja2VyLmNsb3NlKCk7XG4gICAgdGhpcy5zZWxlY3RlZERhdGVDaGFuZ2UuZW1pdChudWxsKTtcbiAgfVxuXG59XG4iXX0=
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.js.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.js.__ivy_ngcc_bak
new file mode 100644
index 0000000..ec69f15
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.js.__ivy_ngcc_bak
@@ -0,0 +1,87 @@
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+import { Component, ViewEncapsulation, Input, Output, EventEmitter, ViewChild } from '@angular/core';
+import { NgbCalendar, NgbCalendarIslamicUmalqura, NgbDatepickerI18n } from '@ng-bootstrap/ng-bootstrap';
+import { IslamicI18n } from '../IslamicI18n';
+export class HijriDatepickerComponent {
+    constructor() {
+        this.selectedDateChange = new EventEmitter();
+        this.readonly = false;
+        this.isRequired = false;
+        this.disabled = false;
+    }
+    /**
+     * @return {?}
+     */
+    changeDate() {
+        this.selectedDateChange.emit(this.selectedDate);
+    }
+    /**
+     * @return {?}
+     */
+    onBlur() {
+        if (!this.selectedDate) {
+            this.selectedDateChange.emit(null);
+        }
+    }
+    /**
+     * @return {?}
+     */
+    clear() {
+        this.selectedDate = undefined;
+        this.datePicker.close();
+        this.selectedDateChange.emit(null);
+    }
+}
+HijriDatepickerComponent.decorators = [
+    { type: Component, args: [{
+                selector: 'hijri-date-picker',
+                template: "<div provideParentForm>\n<input\n    class=\"form-control hijriInput\"\n    [(ngModel)]=\"selectedDate\"\n    [placeholder]=\"placeHolder ?placeHolder : 'd/M/yyyy'\"\n    ngbDatepicker\n    (click)=\"d.toggle()\"\n    (dateSelect)=\"changeDate()\"\n    #d=\"ngbDatepicker\"\n    [readonly]=\"readonly\"\n    [minDate]=\"min\"\n    [maxDate]=\"max\"\n    [required]=\"isRequired\"\n    [name]=\"name\"\n    (blur)=\"onBlur()\"\n    [footerTemplate]=\"footerTemplate\"\n    [disabled]=\"disabled\" />\n</div>\n\n\n<ng-template #footerTemplate>\n  <hr class=\"my-0\">\n  <button class=\"btn btn-secondary btn-sm m-2 float-right\" type=\"button\" (click)=\"d.close()\">Close</button>\n  <button class=\"btn btn-primary btn-sm m-2 float-left\" type=\"button\" (click)=\"clear()\">Clear</button>\n</ng-template>\n",
+                providers: [
+                    { provide: NgbCalendar, useClass: NgbCalendarIslamicUmalqura },
+                    { provide: NgbDatepickerI18n, useClass: IslamicI18n }
+                ],
+                encapsulation: ViewEncapsulation.None,
+                styles: [".hijriInput{border-top-left-radius:0;border-bottom-left-radius:0}.ngb-dp-weekday{width:2.1rem!important}"]
+            }] }
+];
+/** @nocollapse */
+HijriDatepickerComponent.ctorParameters = () => [];
+HijriDatepickerComponent.propDecorators = {
+    datePicker: [{ type: ViewChild, args: ['d',] }],
+    selectedDate: [{ type: Input }],
+    selectedDateChange: [{ type: Output }],
+    readonly: [{ type: Input }],
+    isRequired: [{ type: Input }],
+    disabled: [{ type: Input }],
+    min: [{ type: Input }],
+    max: [{ type: Input }],
+    name: [{ type: Input }],
+    placeHolder: [{ type: Input }]
+};
+if (false) {
+    /** @type {?} */
+    HijriDatepickerComponent.prototype.datePicker;
+    /** @type {?} */
+    HijriDatepickerComponent.prototype.selectedDate;
+    /** @type {?} */
+    HijriDatepickerComponent.prototype.selectedDateChange;
+    /** @type {?} */
+    HijriDatepickerComponent.prototype.readonly;
+    /** @type {?} */
+    HijriDatepickerComponent.prototype.isRequired;
+    /** @type {?} */
+    HijriDatepickerComponent.prototype.disabled;
+    /** @type {?} */
+    HijriDatepickerComponent.prototype.min;
+    /** @type {?} */
+    HijriDatepickerComponent.prototype.max;
+    /** @type {?} */
+    HijriDatepickerComponent.prototype.name;
+    /** @type {?} */
+    HijriDatepickerComponent.prototype.placeHolder;
+}
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlqcmktZGF0ZXBpY2tlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvIiwic291cmNlcyI6WyJsaWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvaGlqcmktZGF0ZXBpY2tlci9oaWpyaS1kYXRlcGlja2VyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdHLE9BQU8sRUFBRSxXQUFXLEVBQUUsMEJBQTBCLEVBQUUsaUJBQWlCLEVBQWlCLE1BQU0sNEJBQTRCLENBQUM7QUFDdkgsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBZTdDLE1BQU0sT0FBTyx3QkFBd0I7SUFnQm5DO1FBWFUsdUJBQWtCLEdBQWdDLElBQUksWUFBWSxFQUFFLENBQUM7UUFFdEUsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUNqQixlQUFVLEdBQUcsS0FBSyxDQUFDO1FBQ25CLGFBQVEsR0FBRyxLQUFLLENBQUM7SUFPVixDQUFDOzs7O0lBRWpCLFVBQVU7UUFDUixJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUNsRCxDQUFDOzs7O0lBRUQsTUFBTTtRQUNKLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQ3RCLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDcEM7SUFDSCxDQUFDOzs7O0lBRUQsS0FBSztRQUNILElBQUksQ0FBQyxZQUFZLEdBQUcsU0FBUyxDQUFDO1FBQzlCLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDeEIsSUFBSSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNyQyxDQUFDOzs7WUE1Q0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxtQkFBbUI7Z0JBQzdCLG16QkFBZ0Q7Z0JBQ2hELFNBQVMsRUFBRTtvQkFDVCxFQUFFLE9BQU8sRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLDBCQUEwQixFQUFFO29CQUM5RCxFQUFFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxRQUFRLEVBQUUsV0FBVyxFQUFFO2lCQUN0RDtnQkFJRCxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTs7YUFDdEM7Ozs7O3lCQUdFLFNBQVMsU0FBQyxHQUFHOzJCQUViLEtBQUs7aUNBQ0wsTUFBTTt1QkFFTixLQUFLO3lCQUNMLEtBQUs7dUJBQ0wsS0FBSztrQkFDTCxLQUFLO2tCQUNMLEtBQUs7bUJBQ0wsS0FBSzswQkFFTCxLQUFLOzs7O0lBWk4sOENBQWdDOztJQUVoQyxnREFBcUM7O0lBQ3JDLHNEQUErRTs7SUFFL0UsNENBQTBCOztJQUMxQiw4Q0FBNEI7O0lBQzVCLDRDQUEwQjs7SUFDMUIsdUNBQTRCOztJQUM1Qix1Q0FBNEI7O0lBQzVCLHdDQUFzQjs7SUFFdEIsK0NBQTZCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIFZpZXdFbmNhcHN1bGF0aW9uLCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdiQ2FsZW5kYXIsIE5nYkNhbGVuZGFySXNsYW1pY1VtYWxxdXJhLCBOZ2JEYXRlcGlja2VySTE4biwgTmdiRGF0ZVN0cnVjdCB9IGZyb20gJ0BuZy1ib290c3RyYXAvbmctYm9vdHN0cmFwJztcbmltcG9ydCB7IElzbGFtaWNJMThuIH0gZnJvbSAnLi4vSXNsYW1pY0kxOG4nO1xuaW1wb3J0IHsgQ29udHJvbENvbnRhaW5lciwgTmdGb3JtIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdoaWpyaS1kYXRlLXBpY2tlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9oaWpyaS1kYXRlcGlja2VyLmNvbXBvbmVudC5odG1sJyxcbiAgcHJvdmlkZXJzOiBbXG4gICAgeyBwcm92aWRlOiBOZ2JDYWxlbmRhciwgdXNlQ2xhc3M6IE5nYkNhbGVuZGFySXNsYW1pY1VtYWxxdXJhIH0sXG4gICAgeyBwcm92aWRlOiBOZ2JEYXRlcGlja2VySTE4biwgdXNlQ2xhc3M6IElzbGFtaWNJMThuIH1cbiAgXSxcbiAgc3R5bGVVcmxzOiBbXG4gICAgJy4vaGlqcmktZGF0ZS1waWNrZXIuY29tcG9uZW50LmNzcydcbiAgXSxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBIaWpyaURhdGVwaWNrZXJDb21wb25lbnQge1xuXG4gIEBWaWV3Q2hpbGQoJ2QnKSBkYXRlUGlja2VyOiBhbnk7XG5cbiAgQElucHV0KCkgc2VsZWN0ZWREYXRlOiBOZ2JEYXRlU3RydWN0O1xuICBAT3V0cHV0KCkgc2VsZWN0ZWREYXRlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8TmdiRGF0ZVN0cnVjdD4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgQElucHV0KCkgcmVhZG9ubHkgPSBmYWxzZTtcbiAgQElucHV0KCkgaXNSZXF1aXJlZCA9IGZhbHNlO1xuICBASW5wdXQoKSBkaXNhYmxlZCA9IGZhbHNlO1xuICBASW5wdXQoKSBtaW46IE5nYkRhdGVTdHJ1Y3Q7XG4gIEBJbnB1dCgpIG1heDogTmdiRGF0ZVN0cnVjdDtcbiAgQElucHV0KCkgbmFtZTogc3RyaW5nO1xuXG4gIEBJbnB1dCgpIHBsYWNlSG9sZGVyOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxuICBjaGFuZ2VEYXRlKCkge1xuICAgIHRoaXMuc2VsZWN0ZWREYXRlQ2hhbmdlLmVtaXQodGhpcy5zZWxlY3RlZERhdGUpO1xuICB9XG5cbiAgb25CbHVyKCkge1xuICAgIGlmICghdGhpcy5zZWxlY3RlZERhdGUpIHtcbiAgICAgIHRoaXMuc2VsZWN0ZWREYXRlQ2hhbmdlLmVtaXQobnVsbCk7XG4gICAgfVxuICB9XG5cbiAgY2xlYXIoKSB7XG4gICAgdGhpcy5zZWxlY3RlZERhdGUgPSB1bmRlZmluZWQ7XG4gICAgdGhpcy5kYXRlUGlja2VyLmNsb3NlKCk7XG4gICAgdGhpcy5zZWxlY3RlZERhdGVDaGFuZ2UuZW1pdChudWxsKTtcbiAgfVxuXG59XG4iXX0=
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.js b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.js
index 3334409..6bd99f9 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.js
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.js
@@ -8,6 +8,55 @@ import { DateType } from './consts';
 import { DateFormatterService } from './date-formatter.service';
 import * as momentjs from 'moment';
 /** @type {?} */
+import * as ɵngcc0 from '@angular/core';
+import * as ɵngcc1 from './date-formatter.service';
+import * as ɵngcc2 from './provide-parent-form.directive';
+import * as ɵngcc3 from '@angular/common';
+import * as ɵngcc4 from '@ng-bootstrap/ng-bootstrap';
+import * as ɵngcc5 from '@angular/forms';
+import * as ɵngcc6 from './hijri-datepicker/hijri-datepicker.component';
+
+const _c0 = ["d"];
+function HijriGregorianDatepickerComponent_label_1_Template(rf, ctx) { if (rf & 1) {
+    ɵngcc0.ɵɵelementStart(0, "label", 8);
+    ɵngcc0.ɵɵtext(1);
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    const ctx_r0 = ɵngcc0.ɵɵnextContext();
+    ɵngcc0.ɵɵadvance(1);
+    ɵngcc0.ɵɵtextInterpolate1("", ctx_r0.label, " ");
+} }
+function HijriGregorianDatepickerComponent_input_3_Template(rf, ctx) { if (rf & 1) {
+    const _r7 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "input", 9, 10);
+    ɵngcc0.ɵɵlistener("ngModelChange", function HijriGregorianDatepickerComponent_input_3_Template_input_ngModelChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.selectedDate = $event; })("click", function HijriGregorianDatepickerComponent_input_3_Template_input_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r7); const _r5 = ɵngcc0.ɵɵreference(1); return _r5.toggle(); })("dateSelect", function HijriGregorianDatepickerComponent_input_3_Template_input_dateSelect_0_listener() { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.dateSelected(); });
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    const ctx_r1 = ɵngcc0.ɵɵnextContext();
+    const _r2 = ɵngcc0.ɵɵreference(5);
+    ɵngcc0.ɵɵproperty("placeholder", ctx_r1.placeHolder ? ctx_r1.placeHolder : "d/M/yyyy")("name", ctx_r1.label)("ngModel", ctx_r1.selectedDate)("readonly", ctx_r1.readonly)("minDate", ctx_r1.minGreg)("maxDate", ctx_r1.maxGreg)("required", ctx_r1.isRequired)("disabled", ctx_r1.disabled)("footerTemplate", _r2);
+} }
+function HijriGregorianDatepickerComponent_ng_template_4_Template(rf, ctx) { if (rf & 1) {
+    const _r11 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelement(0, "hr", 11);
+    ɵngcc0.ɵɵelementStart(1, "button", 12);
+    ɵngcc0.ɵɵlistener("click", function HijriGregorianDatepickerComponent_ng_template_4_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r11); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.close(); });
+    ɵngcc0.ɵɵtext(2, "Close");
+    ɵngcc0.ɵɵelementEnd();
+    ɵngcc0.ɵɵelementStart(3, "button", 13);
+    ɵngcc0.ɵɵlistener("click", function HijriGregorianDatepickerComponent_ng_template_4_Template_button_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r11); const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.clear(); });
+    ɵngcc0.ɵɵtext(4, "Clear");
+    ɵngcc0.ɵɵelementEnd();
+} }
+function HijriGregorianDatepickerComponent_hijri_date_picker_6_Template(rf, ctx) { if (rf & 1) {
+    const _r14 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "hijri-date-picker", 14);
+    ɵngcc0.ɵɵlistener("selectedDateChange", function HijriGregorianDatepickerComponent_hijri_date_picker_6_Template_hijri_date_picker_selectedDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.selectedDate = $event; })("selectedDateChange", function HijriGregorianDatepickerComponent_hijri_date_picker_6_Template_hijri_date_picker_selectedDateChange_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15.dateSelected(); });
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    const ctx_r4 = ɵngcc0.ɵɵnextContext();
+    ɵngcc0.ɵɵproperty("selectedDate", ctx_r4.selectedDate)("readonly", ctx_r4.readonly)("min", ctx_r4.minHijri)("max", ctx_r4.maxHijri)("name", ctx_r4.label)("isRequired", ctx_r4.isRequired)("placeHolder", ctx_r4.placeHolder)("disabled", ctx_r4.disabled);
+} }
 const moment = momentjs;
 import * as moment_ from 'moment-hijri';
 /** @type {?} */
@@ -96,12 +145,49 @@ export class HijriGregorianDatepickerComponent {
         this.selectedDateChange.emit(this.selectedDate);
     }
 }
-HijriGregorianDatepickerComponent.decorators = [
-    { type: Component, args: [{
-                selector: 'hijri-gregorian-datepicker',
-                template: "\n    <div class=\"form-group\" provideParentForm>\n      <label class=\"requiredInput\" *ngIf=\"showLabel\" for=\"input-birth-Date\">{{ label }} </label>\n\n      <div class=\"input-group\">\n\n        <input  class=\"form-control\"\n                  [placeholder]=\"placeHolder ? placeHolder : 'd/M/yyyy'\"\n                  [name]=\"label\"\n                  *ngIf=\"selectedDateType == DateType.Gregorian\"\n                  [(ngModel)]=\"selectedDate\"\n                  ngbDatepicker (click)=\"d.toggle()\"\n                  (dateSelect)=\"dateSelected()\"\n                  autocomplete=\"off\"\n                  [readonly]=\"readonly\"\n                  [minDate]=\"minGreg\"\n                  [maxDate]=\"maxGreg\"\n                  [required]=\"isRequired\"\n                  [disabled]=\"disabled\"\n                  [footerTemplate]=\"footerTemplate\"\n                  #d=\"ngbDatepicker\">\n\n          <ng-template #footerTemplate>\n            <hr class=\"my-0\">\n            <button class=\"btn btn-secondary btn-sm m-2 float-right\" type=\"button\" (click)=\"close()\">Close</button>\n            <button class=\"btn btn-primary btn-sm m-2 float-left\" type=\"button\" (click)=\"clear()\">Clear</button>\n          </ng-template>\n\n          <hijri-date-picker *ngIf=\"selectedDateType == DateType.Hijri\"\n                             [(selectedDate)]=\"selectedDate\"\n                             (selectedDateChange)=\"dateSelected()\"\n                             [readonly]=\"readonly\"\n                             [min]=\"minHijri\" [max]=\"maxHijri\"\n                             style=\"flex: 1 1 auto;\"\n                             [name]=\"label\"\n                             [isRequired]=\"isRequired\"\n                             [placeHolder]=\"placeHolder\"\n                             [disabled]=\"disabled\">\n          </hijri-date-picker>\n\n          <div class=\"input-group-append\">\n                  <button class=\"btn btn-sm {{selectedDateType == DateType.Hijri ? 'btn-info focus active' :  'btn-outline-info'}}\" (click)=\"hijriClick()\"  [disabled]=\"disabled\" type=\"button\">\n                     {{hijriLabel ? hijriLabel : 'Hijri' }}\n                  </button>\n                  <button class=\"btn btn-sm {{selectedDateType == DateType.Gregorian ? 'btn-info focus active' :  'btn-outline-info'}}\" (click)=\"gregClick()\" [disabled]=\"disabled\" type=\"button\">\n                      {{GregLabel ? GregLabel : 'Gregorian' }}\n                  </button>\n           </div>\n\n      </div>\n  </div>\n"
-            }] }
-];
+HijriGregorianDatepickerComponent.ɵfac = function HijriGregorianDatepickerComponent_Factory(t) { return new (t || HijriGregorianDatepickerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DateFormatterService)); };
+HijriGregorianDatepickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: HijriGregorianDatepickerComponent, selectors: [["hijri-gregorian-datepicker"]], viewQuery: function HijriGregorianDatepickerComponent_Query(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵviewQuery(_c0, true);
+    } if (rf & 2) {
+        var _t;
+        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.datePicker = _t.first);
+    } }, inputs: { showLabel: "showLabel", readonly: "readonly", isRequired: "isRequired", disabled: "disabled", selectedDateType: "selectedDateType", selectedDate: "selectedDate", label: "label", minHijri: "minHijri", maxHijri: "maxHijri", minGreg: "minGreg", maxGreg: "maxGreg", hijriLabel: "hijriLabel", GregLabel: "GregLabel", placeHolder: "placeHolder" }, outputs: { selectedDateChange: "selectedDateChange" }, decls: 12, vars: 13, consts: [["provideParentForm", "", 1, "form-group"], ["class", "requiredInput", "for", "input-birth-Date", 4, "ngIf"], [1, "input-group"], ["class", "form-control", "ngbDatepicker", "", "autocomplete", "off", 3, "placeholder", "name", "ngModel", "readonly", "minDate", "maxDate", "required", "disabled", "footerTemplate", "ngModelChange", "click", "dateSelect", 4, "ngIf"], ["footerTemplate", ""], ["style", "flex: 1 1 auto;", 3, "selectedDate", "readonly", "min", "max", "name", "isRequired", "placeHolder", "disabled", "selectedDateChange", 4, "ngIf"], [1, "input-group-append"], ["type", "button", 3, "disabled", "click"], ["for", "input-birth-Date", 1, "requiredInput"], ["ngbDatepicker", "", "autocomplete", "off", 1, "form-control", 3, "placeholder", "name", "ngModel", "readonly", "minDate", "maxDate", "required", "disabled", "footerTemplate", "ngModelChange", "click", "dateSelect"], ["d", "ngbDatepicker"], [1, "my-0"], ["type", "button", 1, "btn", "btn-secondary", "btn-sm", "m-2", "float-right", 3, "click"], ["type", "button", 1, "btn", "btn-primary", "btn-sm", "m-2", "float-left", 3, "click"], [2, "flex", "1 1 auto", 3, "selectedDate", "readonly", "min", "max", "name", "isRequired", "placeHolder", "disabled", "selectedDateChange"]], template: function HijriGregorianDatepickerComponent_Template(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵelementStart(0, "div", 0);
+        ɵngcc0.ɵɵtemplate(1, HijriGregorianDatepickerComponent_label_1_Template, 2, 1, "label", 1);
+        ɵngcc0.ɵɵelementStart(2, "div", 2);
+        ɵngcc0.ɵɵtemplate(3, HijriGregorianDatepickerComponent_input_3_Template, 2, 9, "input", 3);
+        ɵngcc0.ɵɵtemplate(4, HijriGregorianDatepickerComponent_ng_template_4_Template, 5, 0, "ng-template", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);
+        ɵngcc0.ɵɵtemplate(6, HijriGregorianDatepickerComponent_hijri_date_picker_6_Template, 1, 8, "hijri-date-picker", 5);
+        ɵngcc0.ɵɵelementStart(7, "div", 6);
+        ɵngcc0.ɵɵelementStart(8, "button", 7);
+        ɵngcc0.ɵɵlistener("click", function HijriGregorianDatepickerComponent_Template_button_click_8_listener() { return ctx.hijriClick(); });
+        ɵngcc0.ɵɵtext(9);
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵelementStart(10, "button", 7);
+        ɵngcc0.ɵɵlistener("click", function HijriGregorianDatepickerComponent_Template_button_click_10_listener() { return ctx.gregClick(); });
+        ɵngcc0.ɵɵtext(11);
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵelementEnd();
+    } if (rf & 2) {
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.showLabel);
+        ɵngcc0.ɵɵadvance(2);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.selectedDateType == ctx.DateType.Gregorian);
+        ɵngcc0.ɵɵadvance(3);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.selectedDateType == ctx.DateType.Hijri);
+        ɵngcc0.ɵɵadvance(2);
+        ɵngcc0.ɵɵclassMapInterpolate1("btn btn-sm ", ctx.selectedDateType == ctx.DateType.Hijri ? "btn-info focus active" : "btn-outline-info", "");
+        ɵngcc0.ɵɵproperty("disabled", ctx.disabled);
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.hijriLabel ? ctx.hijriLabel : "Hijri", " ");
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵclassMapInterpolate1("btn btn-sm ", ctx.selectedDateType == ctx.DateType.Gregorian ? "btn-info focus active" : "btn-outline-info", "");
+        ɵngcc0.ɵɵproperty("disabled", ctx.disabled);
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.GregLabel ? ctx.GregLabel : "Gregorian", " ");
+    } }, directives: [ɵngcc2.ProvideParentFormDirective, ɵngcc3.NgIf, ɵngcc4.NgbInputDatepicker, ɵngcc5.DefaultValueAccessor, ɵngcc5.NgControlStatus, ɵngcc5.NgModel, ɵngcc5.RequiredValidator, ɵngcc6.HijriDatepickerComponent], encapsulation: 2 });
 /** @nocollapse */
 HijriGregorianDatepickerComponent.ctorParameters = () => [
     { type: DateFormatterService }
@@ -124,6 +210,46 @@ HijriGregorianDatepickerComponent.propDecorators = {
     GregLabel: [{ type: Input }],
     placeHolder: [{ type: Input }]
 };
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HijriGregorianDatepickerComponent, [{
+        type: Component,
+        args: [{
+                selector: 'hijri-gregorian-datepicker',
+                template: "\n    <div class=\"form-group\" provideParentForm>\n      <label class=\"requiredInput\" *ngIf=\"showLabel\" for=\"input-birth-Date\">{{ label }} </label>\n\n      <div class=\"input-group\">\n\n        <input  class=\"form-control\"\n                  [placeholder]=\"placeHolder ? placeHolder : 'd/M/yyyy'\"\n                  [name]=\"label\"\n                  *ngIf=\"selectedDateType == DateType.Gregorian\"\n                  [(ngModel)]=\"selectedDate\"\n                  ngbDatepicker (click)=\"d.toggle()\"\n                  (dateSelect)=\"dateSelected()\"\n                  autocomplete=\"off\"\n                  [readonly]=\"readonly\"\n                  [minDate]=\"minGreg\"\n                  [maxDate]=\"maxGreg\"\n                  [required]=\"isRequired\"\n                  [disabled]=\"disabled\"\n                  [footerTemplate]=\"footerTemplate\"\n                  #d=\"ngbDatepicker\">\n\n          <ng-template #footerTemplate>\n            <hr class=\"my-0\">\n            <button class=\"btn btn-secondary btn-sm m-2 float-right\" type=\"button\" (click)=\"close()\">Close</button>\n            <button class=\"btn btn-primary btn-sm m-2 float-left\" type=\"button\" (click)=\"clear()\">Clear</button>\n          </ng-template>\n\n          <hijri-date-picker *ngIf=\"selectedDateType == DateType.Hijri\"\n                             [(selectedDate)]=\"selectedDate\"\n                             (selectedDateChange)=\"dateSelected()\"\n                             [readonly]=\"readonly\"\n                             [min]=\"minHijri\" [max]=\"maxHijri\"\n                             style=\"flex: 1 1 auto;\"\n                             [name]=\"label\"\n                             [isRequired]=\"isRequired\"\n                             [placeHolder]=\"placeHolder\"\n                             [disabled]=\"disabled\">\n          </hijri-date-picker>\n\n          <div class=\"input-group-append\">\n                  <button class=\"btn btn-sm {{selectedDateType == DateType.Hijri ? 'btn-info focus active' :  'btn-outline-info'}}\" (click)=\"hijriClick()\"  [disabled]=\"disabled\" type=\"button\">\n                     {{hijriLabel ? hijriLabel : 'Hijri' }}\n                  </button>\n                  <button class=\"btn btn-sm {{selectedDateType == DateType.Gregorian ? 'btn-info focus active' :  'btn-outline-info'}}\" (click)=\"gregClick()\" [disabled]=\"disabled\" type=\"button\">\n                      {{GregLabel ? GregLabel : 'Gregorian' }}\n                  </button>\n           </div>\n\n      </div>\n  </div>\n"
+            }]
+    }], function () { return [{ type: ɵngcc1.DateFormatterService }]; }, { selectedDateChange: [{
+            type: Output
+        }], showLabel: [{
+            type: Input
+        }], readonly: [{
+            type: Input
+        }], isRequired: [{
+            type: Input
+        }], disabled: [{
+            type: Input
+        }], selectedDateType: [{
+            type: Input
+        }], selectedDate: [{
+            type: Input
+        }], datePicker: [{
+            type: ViewChild,
+            args: ['d']
+        }], label: [{
+            type: Input
+        }], minHijri: [{
+            type: Input
+        }], maxHijri: [{
+            type: Input
+        }], minGreg: [{
+            type: Input
+        }], maxGreg: [{
+            type: Input
+        }], hijriLabel: [{
+            type: Input
+        }], GregLabel: [{
+            type: Input
+        }], placeHolder: [{
+            type: Input
+        }] }); })();
 if (false) {
     /** @type {?} */
     HijriGregorianDatepickerComponent.prototype.datePicker;
@@ -163,4 +289,4 @@ if (false) {
      */
     HijriGregorianDatepickerComponent.prototype.dateFormatterService;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLyIsInNvdXJjZXMiOlsibGliL2hpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyL2hpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTFGLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDcEMsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFFaEUsT0FBTyxLQUFLLFFBQVEsTUFBTSxRQUFRLENBQUM7O01BQzdCLE1BQU0sR0FBRyxRQUFRO0FBR3ZCLE9BQU8sS0FBSyxPQUFPLE1BQU0sY0FBYyxDQUFDOztNQUVsQyxXQUFXLEdBQUcsT0FBTztBQU8zQixNQUFNLE9BQU8saUNBQWlDOzs7O0lBK0I1QyxZQUFxQixvQkFBMEM7UUFBMUMseUJBQW9CLEdBQXBCLG9CQUFvQixDQUFzQjtRQXhCckQsdUJBQWtCLEdBQWdDLElBQUksWUFBWSxFQUFFLENBQUM7UUFHdEUsY0FBUyxHQUFHLElBQUksQ0FBQztRQUdqQixhQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ2pCLGVBQVUsR0FBRyxLQUFLLENBQUM7UUFDbkIsYUFBUSxHQUFHLEtBQUssQ0FBQztJQWdCeUMsQ0FBQzs7OztJQUpwRSxJQUFJLFFBQVE7UUFDVixPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDOzs7O0lBSUQsUUFBUTtRQUNOLElBQUksQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLEVBQUU7WUFDMUIsSUFBSSxDQUFDLGdCQUFnQixHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUM7U0FDeEM7SUFD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bXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7TmdiRGF0ZVN0cnVjdCwgTmdiRGF0ZXBpY2tlcn0gZnJvbSAnQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAnO1xuaW1wb3J0IHsgRGF0ZVR5cGUgfSBmcm9tICcuL2NvbnN0cyc7XG5pbXBvcnQgeyBEYXRlRm9ybWF0dGVyU2VydmljZSB9IGZyb20gJy4vZGF0ZS1mb3JtYXR0ZXIuc2VydmljZSc7XG5cbmltcG9ydCAqIGFzIG1vbWVudGpzIGZyb20gJ21vbWVudCc7XG5jb25zdCBtb21lbnQgPSBtb21lbnRqcztcblxuXG5pbXBvcnQgKiBhcyBtb21lbnRfIGZyb20gJ21vbWVudC1oaWpyaSc7XG5pbXBvcnQgeyBOZ0Zvcm0sIENvbnRyb2xDb250YWluZXIgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5jb25zdCBtb21lbnRIaWpyaSA9IG1vbWVudF87XG5cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXInLFxuICB0ZW1wbGF0ZVVybDogJy4vaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIEhpanJpR3JlZ29yaWFuRGF0ZXBpY2tlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgQFZpZXdDaGlsZCgnZCcpIGRhdGVQaWNrZXI6IGFueTtcblxuXG4gIEBJbnB1dCgpIHNlbGVjdGVkRGF0ZVR5cGU6IERhdGVUeXBlO1xuICBASW5wdXQoKSBzZWxlY3RlZERhdGU6IE5nYkRhdGVTdHJ1Y3Q7XG4gIEBPdXRwdXQoKSBzZWxlY3RlZERhdGVDaGFuZ2U6IEV2ZW50RW1pdHRlcjxOZ2JEYXRlU3RydWN0PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBASW5wdXQoKSBsYWJlbDogc3RyaW5nO1xuICBASW5wdXQoKSBzaG93TGFiZWwgPSB0cnVlO1xuXG5cbiAgQElucHV0KCkgcmVhZG9ubHkgPSBmYWxzZTtcbiAgQElucHV0KCkgaXNSZXF1aXJlZCA9IGZhbHNlO1xuICBASW5wdXQoKSBkaXNhYmxlZCA9IGZhbHNlO1xuXG4gIEBJbnB1dCgpIG1pbkhpanJpOiBOZ2JEYXRlU3RydWN0O1xuICBASW5wdXQoKSBtYXhIaWpyaTogTmdiRGF0ZVN0cnVjdDtcbiAgQElucHV0KCkgbWluR3JlZzogTmdiRGF0ZVN0cnVjdDtcbiAgQElucHV0KCkgbWF4R3JlZzogTmdiRGF0ZVN0cnVjdDtcblxuICBASW5wdXQoKSBoaWpyaUxhYmVsOiBzdHJpbmc7XG4gIEBJbnB1dCgpIEdyZWdMYWJlbDogc3RyaW5nO1xuXG4gIEBJbnB1dCgpIHBsYWNlSG9sZGVyOiBzdHJpbmc7XG5cbiAgZ2V0IERhdGVUeXBlKCkge1xuICAgIHJldHVybiBEYXRlVHlwZTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKCBwcml2YXRlIGRhdGVGb3JtYXR0ZXJTZXJ2aWNlOiBEYXRlRm9ybWF0dGVyU2VydmljZSkgeyB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgaWYgKCF0aGlzLnNlbGVjdGVkRGF0ZVR5cGUpIHtcbiAgICAgIHRoaXMuc2VsZWN0ZWREYXRlVHlwZSA9IERhdGVUeXBlLkhpanJpO1xuICAgIH1cbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIHRoaXMuZGF0ZVBpY2tlci5jbG9zZSgpO1xuICB9XG5cbiAgY2xlYXIoKSB7XG4gICAgdGhpcy5zZWxlY3RlZERhdGUgPSB1bmRlZmluZWQ7XG4gICAgdGhpcy5jbG9zZSgpO1xuICAgIHRoaXMuc2VsZWN0ZWREYXRlQ2hhbmdlLmVtaXQobnVsbCk7XG4gIH1cbiAgZ2V0U2VsZWN0ZWREYXRlKCk6IHN0cmluZyB7XG5cbiAgICBsZXQgZm9ybWF0dGVkRGF0ZSA9IHRoaXMuZGF0ZUZvcm1hdHRlclNlcnZpY2UuVG9TdHJpbmcodGhpcy5zZWxlY3RlZERhdGUpO1xuXG4gICAgaWYgKHRoaXMuc2VsZWN0ZWREYXRlVHlwZSA9PSBEYXRlVHlwZS5IaWpyaSkge1xuICAgICAgcmV0dXJuIG1vbWVudEhpanJpKGZvcm1hdHRlZERhdGUsICdpRC9pTS9pWVlZWScpLmxvY2FsZSgnZW4nKS5mb3JtYXQoKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5zZWxlY3RlZERhdGVUeXBlID09IERhdGVUeXBlLkdyZWdvcmlhbikge1xuICAgICAgcmV0dXJuIG1vbWVudChmb3JtYXR0ZWREYXRlLCAnRC9NL1lZWVknKS5sb2NhbGUoJ2VuJykuZm9ybWF0KCk7XG4gICAgfVxuICB9XG5cbiAgZGF0ZVNlbGVjdGVkKCkge1xuICAgIHRoaXMuc2VsZWN0ZWREYXRlQ2hhbmdlLmVtaXQodGhpcy5zZWxlY3RlZERhdGUpO1xuICB9XG5cbiAgaGlqcmlDbGljaygpIHtcbiAgICBpZiAodGhpcy5zZWxlY3RlZERhdGVUeXBlID09IERhdGVUeXBlLkhpanJpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuc2VsZWN0ZWREYXRlVHlwZSA9IERhdGVUeXBlLkhpanJpO1xuICAgIC8vdG8gaGlqcmlcbiAgICB0aGlzLnNlbGVjdGVkRGF0ZSA9IHRoaXMuZGF0ZUZvcm1hdHRlclNlcnZpY2UuVG9IaWpyaSh0aGlzLnNlbGVjdGVkRGF0ZSk7XG4gICAgdGhpcy5zZWxlY3RlZERhdGVDaGFuZ2UuZW1pdCh0aGlzLnNlbGVjdGVkRGF0ZSk7XG4gIH1cbiAgZ3JlZ0NsaWNrKCkge1xuICAgIGlmICh0aGlzLnNlbGVjdGVkRGF0ZVR5cGUgPT0gRGF0ZVR5cGUuR3JlZ29yaWFuKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuc2VsZWN0ZWREYXRlVHlwZSA9IERhdGVUeXBlLkdyZWdvcmlhbjtcbiAgICAvL3RvIEdyZWdvcmlhblxuICAgIHRoaXMuc2VsZWN0ZWREYXRlID0gdGhpcy5kYXRlRm9ybWF0dGVyU2VydmljZS5Ub0dyZWdvcmlhbih0aGlzLnNlbGVjdGVkRGF0ZSk7XG4gICAgdGhpcy5zZWxlY3RlZERhdGVDaGFuZ2UuZW1pdCh0aGlzLnNlbGVjdGVkRGF0ZSk7XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;charset=utf-8;base64,
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.js.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.js.__ivy_ngcc_bak
new file mode 100644
index 0000000..3334409
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.js.__ivy_ngcc_bak
@@ -0,0 +1,166 @@
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';
+import { DateType } from './consts';
+import { DateFormatterService } from './date-formatter.service';
+import * as momentjs from 'moment';
+/** @type {?} */
+const moment = momentjs;
+import * as moment_ from 'moment-hijri';
+/** @type {?} */
+const momentHijri = moment_;
+export class HijriGregorianDatepickerComponent {
+    /**
+     * @param {?} dateFormatterService
+     */
+    constructor(dateFormatterService) {
+        this.dateFormatterService = dateFormatterService;
+        this.selectedDateChange = new EventEmitter();
+        this.showLabel = true;
+        this.readonly = false;
+        this.isRequired = false;
+        this.disabled = false;
+    }
+    /**
+     * @return {?}
+     */
+    get DateType() {
+        return DateType;
+    }
+    /**
+     * @return {?}
+     */
+    ngOnInit() {
+        if (!this.selectedDateType) {
+            this.selectedDateType = DateType.Hijri;
+        }
+    }
+    /**
+     * @return {?}
+     */
+    close() {
+        this.datePicker.close();
+    }
+    /**
+     * @return {?}
+     */
+    clear() {
+        this.selectedDate = undefined;
+        this.close();
+        this.selectedDateChange.emit(null);
+    }
+    /**
+     * @return {?}
+     */
+    getSelectedDate() {
+        /** @type {?} */
+        let formattedDate = this.dateFormatterService.ToString(this.selectedDate);
+        if (this.selectedDateType == DateType.Hijri) {
+            return momentHijri(formattedDate, 'iD/iM/iYYYY').locale('en').format();
+        }
+        if (this.selectedDateType == DateType.Gregorian) {
+            return moment(formattedDate, 'D/M/YYYY').locale('en').format();
+        }
+    }
+    /**
+     * @return {?}
+     */
+    dateSelected() {
+        this.selectedDateChange.emit(this.selectedDate);
+    }
+    /**
+     * @return {?}
+     */
+    hijriClick() {
+        if (this.selectedDateType == DateType.Hijri) {
+            return;
+        }
+        this.selectedDateType = DateType.Hijri;
+        //to hijri
+        this.selectedDate = this.dateFormatterService.ToHijri(this.selectedDate);
+        this.selectedDateChange.emit(this.selectedDate);
+    }
+    /**
+     * @return {?}
+     */
+    gregClick() {
+        if (this.selectedDateType == DateType.Gregorian) {
+            return;
+        }
+        this.selectedDateType = DateType.Gregorian;
+        //to Gregorian
+        this.selectedDate = this.dateFormatterService.ToGregorian(this.selectedDate);
+        this.selectedDateChange.emit(this.selectedDate);
+    }
+}
+HijriGregorianDatepickerComponent.decorators = [
+    { type: Component, args: [{
+                selector: 'hijri-gregorian-datepicker',
+                template: "\n    <div class=\"form-group\" provideParentForm>\n      <label class=\"requiredInput\" *ngIf=\"showLabel\" for=\"input-birth-Date\">{{ label }} </label>\n\n      <div class=\"input-group\">\n\n        <input  class=\"form-control\"\n                  [placeholder]=\"placeHolder ? placeHolder : 'd/M/yyyy'\"\n                  [name]=\"label\"\n                  *ngIf=\"selectedDateType == DateType.Gregorian\"\n                  [(ngModel)]=\"selectedDate\"\n                  ngbDatepicker (click)=\"d.toggle()\"\n                  (dateSelect)=\"dateSelected()\"\n                  autocomplete=\"off\"\n                  [readonly]=\"readonly\"\n                  [minDate]=\"minGreg\"\n                  [maxDate]=\"maxGreg\"\n                  [required]=\"isRequired\"\n                  [disabled]=\"disabled\"\n                  [footerTemplate]=\"footerTemplate\"\n                  #d=\"ngbDatepicker\">\n\n          <ng-template #footerTemplate>\n            <hr class=\"my-0\">\n            <button class=\"btn btn-secondary btn-sm m-2 float-right\" type=\"button\" (click)=\"close()\">Close</button>\n            <button class=\"btn btn-primary btn-sm m-2 float-left\" type=\"button\" (click)=\"clear()\">Clear</button>\n          </ng-template>\n\n          <hijri-date-picker *ngIf=\"selectedDateType == DateType.Hijri\"\n                             [(selectedDate)]=\"selectedDate\"\n                             (selectedDateChange)=\"dateSelected()\"\n                             [readonly]=\"readonly\"\n                             [min]=\"minHijri\" [max]=\"maxHijri\"\n                             style=\"flex: 1 1 auto;\"\n                             [name]=\"label\"\n                             [isRequired]=\"isRequired\"\n                             [placeHolder]=\"placeHolder\"\n                             [disabled]=\"disabled\">\n          </hijri-date-picker>\n\n          <div class=\"input-group-append\">\n                  <button class=\"btn btn-sm {{selectedDateType == DateType.Hijri ? 'btn-info focus active' :  'btn-outline-info'}}\" (click)=\"hijriClick()\"  [disabled]=\"disabled\" type=\"button\">\n                     {{hijriLabel ? hijriLabel : 'Hijri' }}\n                  </button>\n                  <button class=\"btn btn-sm {{selectedDateType == DateType.Gregorian ? 'btn-info focus active' :  'btn-outline-info'}}\" (click)=\"gregClick()\" [disabled]=\"disabled\" type=\"button\">\n                      {{GregLabel ? GregLabel : 'Gregorian' }}\n                  </button>\n           </div>\n\n      </div>\n  </div>\n"
+            }] }
+];
+/** @nocollapse */
+HijriGregorianDatepickerComponent.ctorParameters = () => [
+    { type: DateFormatterService }
+];
+HijriGregorianDatepickerComponent.propDecorators = {
+    datePicker: [{ type: ViewChild, args: ['d',] }],
+    selectedDateType: [{ type: Input }],
+    selectedDate: [{ type: Input }],
+    selectedDateChange: [{ type: Output }],
+    label: [{ type: Input }],
+    showLabel: [{ type: Input }],
+    readonly: [{ type: Input }],
+    isRequired: [{ type: Input }],
+    disabled: [{ type: Input }],
+    minHijri: [{ type: Input }],
+    maxHijri: [{ type: Input }],
+    minGreg: [{ type: Input }],
+    maxGreg: [{ type: Input }],
+    hijriLabel: [{ type: Input }],
+    GregLabel: [{ type: Input }],
+    placeHolder: [{ type: Input }]
+};
+if (false) {
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.datePicker;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.selectedDateType;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.selectedDate;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.selectedDateChange;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.label;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.showLabel;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.readonly;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.isRequired;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.disabled;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.minHijri;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.maxHijri;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.minGreg;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.maxGreg;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.hijriLabel;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.GregLabel;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.placeHolder;
+    /**
+     * @type {?}
+     * @private
+     */
+    HijriGregorianDatepickerComponent.prototype.dateFormatterService;
+}
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLyIsInNvdXJjZXMiOlsibGliL2hpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyL2hpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTFGLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDcEMsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFFaEUsT0FBTyxLQUFLLFFBQVEsTUFBTSxRQUFRLENBQUM7O01BQzdCLE1BQU0sR0FBRyxRQUFRO0FBR3ZCLE9BQU8sS0FBSyxPQUFPLE1BQU0sY0FBYyxDQUFDOztNQUVsQyxXQUFXLEdBQUcsT0FBTztBQU8zQixNQUFNLE9BQU8saUNBQWlDOzs7O0lBK0I1QyxZQUFxQixvQkFBMEM7UUFBMUMseUJBQW9CLEdBQXBCLG9CQUFvQixDQUFzQjtRQXhCckQsdUJBQWtCLEdBQWdDLElBQUksWUFBWSxFQUFFLENBQUM7UUFHdEUsY0FBUyxHQUFHLElBQUksQ0FBQztRQUdqQixhQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ2pCLGVBQVUsR0FBRyxLQUFLLENBQUM7UUFDbkIsYUFBUSxHQUFHLEtBQUssQ0FBQztJQWdCeUMsQ0FBQzs7OztJQUpwRSxJQUFJLFFBQVE7UUFDVixPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDOzs7O0lBSUQsUUFBUTtRQUNOLElBQUksQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLEVBQUU7WUFDMUIsSUFBSSxDQUFDLGdCQUFnQixHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUM7U0FDeEM7SUFD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bXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7TmdiRGF0ZVN0cnVjdCwgTmdiRGF0ZXBpY2tlcn0gZnJvbSAnQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAnO1xuaW1wb3J0IHsgRGF0ZVR5cGUgfSBmcm9tICcuL2NvbnN0cyc7XG5pbXBvcnQgeyBEYXRlRm9ybWF0dGVyU2VydmljZSB9IGZyb20gJy4vZGF0ZS1mb3JtYXR0ZXIuc2VydmljZSc7XG5cbmltcG9ydCAqIGFzIG1vbWVudGpzIGZyb20gJ21vbWVudCc7XG5jb25zdCBtb21lbnQgPSBtb21lbnRqcztcblxuXG5pbXBvcnQgKiBhcyBtb21lbnRfIGZyb20gJ21vbWVudC1oaWpyaSc7XG5pbXBvcnQgeyBOZ0Zvcm0sIENvbnRyb2xDb250YWluZXIgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5jb25zdCBtb21lbnRIaWpyaSA9IG1vbWVudF87XG5cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXInLFxuICB0ZW1wbGF0ZVVybDogJy4vaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIEhpanJpR3JlZ29yaWFuRGF0ZXBpY2tlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgQFZpZXdDaGlsZCgnZCcpIGRhdGVQaWNrZXI6IGFueTtcblxuXG4gIEBJbnB1dCgpIHNlbGVjdGVkRGF0ZVR5cGU6IERhdGVUeXBlO1xuICBASW5wdXQoKSBzZWxlY3RlZERhdGU6IE5nYkRhdGVTdHJ1Y3Q7XG4gIEBPdXRwdXQoKSBzZWxlY3RlZERhdGVDaGFuZ2U6IEV2ZW50RW1pdHRlcjxOZ2JEYXRlU3RydWN0PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBASW5wdXQoKSBsYWJlbDogc3RyaW5nO1xuICBASW5wdXQoKSBzaG93TGFiZWwgPSB0cnVlO1xuXG5cbiAgQElucHV0KCkgcmVhZG9ubHkgPSBmYWxzZTtcbiAgQElucHV0KCkgaXNSZXF1aXJlZCA9IGZhbHNlO1xuICBASW5wdXQoKSBkaXNhYmxlZCA9IGZhbHNlO1xuXG4gIEBJbnB1dCgpIG1pbkhpanJpOiBOZ2JEYXRlU3RydWN0O1xuICBASW5wdXQoKSBtYXhIaWpyaTogTmdiRGF0ZVN0cnVjdDtcbiAgQElucHV0KCkgbWluR3JlZzogTmdiRGF0ZVN0cnVjdDtcbiAgQElucHV0KCkgbWF4R3JlZzogTmdiRGF0ZVN0cnVjdDtcblxuICBASW5wdXQoKSBoaWpyaUxhYmVsOiBzdHJpbmc7XG4gIEBJbnB1dCgpIEdyZWdMYWJlbDogc3RyaW5nO1xuXG4gIEBJbnB1dCgpIHBsYWNlSG9sZGVyOiBzdHJpbmc7XG5cbiAgZ2V0IERhdGVUeXBlKCkge1xuICAgIHJldHVybiBEYXRlVHlwZTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKCBwcml2YXRlIGRhdGVGb3JtYXR0ZXJTZXJ2aWNlOiBEYXRlRm9ybWF0dGVyU2VydmljZSkgeyB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgaWYgKCF0aGlzLnNlbGVjdGVkRGF0ZVR5cGUpIHtcbiAgICAgIHRoaXMuc2VsZWN0ZWREYXRlVHlwZSA9IERhdGVUeXBlLkhpanJpO1xuICAgIH1cbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIHRoaXMuZGF0ZVBpY2tlci5jbG9zZSgpO1xuICB9XG5cbiAgY2xlYXIoKSB7XG4gICAgdGhpcy5zZWxlY3RlZERhdGUgPSB1bmRlZmluZWQ7XG4gICAgdGhpcy5jbG9zZSgpO1xuICAgIHRoaXMuc2VsZWN0ZWREYXRlQ2hhbmdlLmVtaXQobnVsbCk7XG4gIH1cbiAgZ2V0U2VsZWN0ZWREYXRlKCk6IHN0cmluZyB7XG5cbiAgICBsZXQgZm9ybWF0dGVkRGF0ZSA9IHRoaXMuZGF0ZUZvcm1hdHRlclNlcnZpY2UuVG9TdHJpbmcodGhpcy5zZWxlY3RlZERhdGUpO1xuXG4gICAgaWYgKHRoaXMuc2VsZWN0ZWREYXRlVHlwZSA9PSBEYXRlVHlwZS5IaWpyaSkge1xuICAgICAgcmV0dXJuIG1vbWVudEhpanJpKGZvcm1hdHRlZERhdGUsICdpRC9pTS9pWVlZWScpLmxvY2FsZSgnZW4nKS5mb3JtYXQoKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5zZWxlY3RlZERhdGVUeXBlID09IERhdGVUeXBlLkdyZWdvcmlhbikge1xuICAgICAgcmV0dXJuIG1vbWVudChmb3JtYXR0ZWREYXRlLCAnRC9NL1lZWVknKS5sb2NhbGUoJ2VuJykuZm9ybWF0KCk7XG4gICAgfVxuICB9XG5cbiAgZGF0ZVNlbGVjdGVkKCkge1xuICAgIHRoaXMuc2VsZWN0ZWREYXRlQ2hhbmdlLmVtaXQodGhpcy5zZWxlY3RlZERhdGUpO1xuICB9XG5cbiAgaGlqcmlDbGljaygpIHtcbiAgICBpZiAodGhpcy5zZWxlY3RlZERhdGVUeXBlID09IERhdGVUeXBlLkhpanJpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuc2VsZWN0ZWREYXRlVHlwZSA9IERhdGVUeXBlLkhpanJpO1xuICAgIC8vdG8gaGlqcmlcbiAgICB0aGlzLnNlbGVjdGVkRGF0ZSA9IHRoaXMuZGF0ZUZvcm1hdHRlclNlcnZpY2UuVG9IaWpyaSh0aGlzLnNlbGVjdGVkRGF0ZSk7XG4gICAgdGhpcy5zZWxlY3RlZERhdGVDaGFuZ2UuZW1pdCh0aGlzLnNlbGVjdGVkRGF0ZSk7XG4gIH1cbiAgZ3JlZ0NsaWNrKCkge1xuICAgIGlmICh0aGlzLnNlbGVjdGVkRGF0ZVR5cGUgPT0gRGF0ZVR5cGUuR3JlZ29yaWFuKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuc2VsZWN0ZWREYXRlVHlwZSA9IERhdGVUeXBlLkdyZWdvcmlhbjtcbiAgICAvL3RvIEdyZWdvcmlhblxuICAgIHRoaXMuc2VsZWN0ZWREYXRlID0gdGhpcy5kYXRlRm9ybWF0dGVyU2VydmljZS5Ub0dyZWdvcmlhbih0aGlzLnNlbGVjdGVkRGF0ZSk7XG4gICAgdGhpcy5zZWxlY3RlZERhdGVDaGFuZ2UuZW1pdCh0aGlzLnNlbGVjdGVkRGF0ZSk7XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/provide-parent-form.directive.js b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/provide-parent-form.directive.js
index 7ca589b..5c3f091 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/provide-parent-form.directive.js
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/provide-parent-form.directive.js
@@ -9,14 +9,26 @@ import { ControlContainer, NgForm } from '@angular/forms';
  * @param {?} form
  * @return {?}
  */
+import * as ɵngcc0 from '@angular/core';
 export function test(form) {
     return form;
 }
 export class ProvideParentFormDirective {
     constructor() { }
 }
-ProvideParentFormDirective.decorators = [
-    { type: Directive, args: [{
+ProvideParentFormDirective.ɵfac = function ProvideParentFormDirective_Factory(t) { return new (t || ProvideParentFormDirective)(); };
+ProvideParentFormDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ProvideParentFormDirective, selectors: [["", "provideParentForm", ""]], features: [ɵngcc0.ɵɵProvidersFeature([
+            {
+                provide: ControlContainer,
+                useFactory: test,
+                deps: [[new Optional(), new SkipSelf(), NgForm]]
+            }
+        ])] });
+/** @nocollapse */
+ProvideParentFormDirective.ctorParameters = () => [];
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ProvideParentFormDirective, [{
+        type: Directive,
+        args: [{
                 selector: '[provideParentForm]',
                 providers: [
                     {
@@ -25,8 +37,6 @@ ProvideParentFormDirective.decorators = [
                         deps: [[new Optional(), new SkipSelf(), NgForm]]
                     }
                 ]
-            },] }
-];
-/** @nocollapse */
-ProvideParentFormDirective.ctorParameters = () => [];
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdmlkZS1wYXJlbnQtZm9ybS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvIiwic291cmNlcyI6WyJsaWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvcHJvdmlkZS1wYXJlbnQtZm9ybS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7OztBQUUxRCxNQUFNLFVBQVUsSUFBSSxDQUFDLElBQVk7SUFDL0IsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDO0FBWUQsTUFBTSxPQUFPLDBCQUEwQjtJQUVyQyxnQkFBZ0IsQ0FBQzs7O1lBWmxCLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUscUJBQXFCO2dCQUMvQixTQUFTLEVBQUU7b0JBQ1Q7d0JBQ0UsT0FBTyxFQUFFLGdCQUFnQjt3QkFDekIsVUFBVSxFQUFHLElBQUk7d0JBQ2pCLElBQUksRUFBRSxDQUFDLENBQUMsSUFBSSxRQUFRLEVBQUUsRUFBRSxJQUFJLFFBQVEsRUFBRSxFQUFFLE1BQU0sQ0FBQyxDQUFDO3FCQUNqRDtpQkFDSjthQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBPcHRpb25hbCwgU2tpcFNlbGYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbnRyb2xDb250YWluZXIsIE5nRm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuZXhwb3J0IGZ1bmN0aW9uIHRlc3QoZm9ybTogTmdGb3JtKSB7XG4gIHJldHVybiBmb3JtO1xufVxuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbcHJvdmlkZVBhcmVudEZvcm1dJyxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogQ29udHJvbENvbnRhaW5lcixcbiAgICAgIHVzZUZhY3Rvcnk6ICB0ZXN0ICxcbiAgICAgIGRlcHM6IFtbbmV3IE9wdGlvbmFsKCksIG5ldyBTa2lwU2VsZigpLCBOZ0Zvcm1dXVxuICAgIH1cbl1cbn0pXG5leHBvcnQgY2xhc3MgUHJvdmlkZVBhcmVudEZvcm1EaXJlY3RpdmUge1xuXG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbn1cbiJdfQ==
\ No newline at end of file
+            }]
+    }], function () { return []; }, null); })();
+//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdmlkZS1wYXJlbnQtZm9ybS5kaXJlY3RpdmUuanMiLCJzb3VyY2VzIjpbIm5neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9saWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvcHJvdmlkZS1wYXJlbnQtZm9ybS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzFEO0FBQ0c7QUFBbUI7QUFDdEI7O0FBREEsTUFBTSxVQUFVLElBQUksQ0FBQyxJQUFZO0FBQ2pDLElBQUUsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDO0FBWUQsTUFBTSxPQUFPLDBCQUEwQjtBQUN2QyxJQUNFLGdCQUFnQixDQUFDO0FBQ25CO3NEQWJDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUscUJBQXFCO0tBQy9CLFNBQVMsRUFBRSxzQkFDVCwwQkFDRSxPQUFPLEVBQUUsZ0JBQWdCLDBCQUN6QixVQUFVLEVBQUcsSUFBSSwwQkFDakIsSUFBSSxFQUFFLENBQUMsQ0FBQyxJQUFJLFFBQVE7Q0FBRSxFQUFFLElBQUk7Q0FBUSxFQUFFLEVBQUUsTUFBTSxDQUFDLENBQUMsc0JBQ2pEO1VBQ0osY0FDQTs7O2VBQ0k7QUFBQztBQUFtQjs7Ozs7Ozs7Ozs7Ozs7QUFqQkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFZQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQVpBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIE9wdGlvbmFsLCBTa2lwU2VsZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29udHJvbENvbnRhaW5lciwgTmdGb3JtIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5leHBvcnQgZnVuY3Rpb24gdGVzdChmb3JtOiBOZ0Zvcm0pIHtcbiAgcmV0dXJuIGZvcm07XG59XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1twcm92aWRlUGFyZW50Rm9ybV0nLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBDb250cm9sQ29udGFpbmVyLFxuICAgICAgdXNlRmFjdG9yeTogIHRlc3QgLFxuICAgICAgZGVwczogW1tuZXcgT3B0aW9uYWwoKSwgbmV3IFNraXBTZWxmKCksIE5nRm9ybV1dXG4gICAgfVxuXVxufSlcbmV4cG9ydCBjbGFzcyBQcm92aWRlUGFyZW50Rm9ybURpcmVjdGl2ZSB7XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxufVxuIl19
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/provide-parent-form.directive.js.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/provide-parent-form.directive.js.__ivy_ngcc_bak
new file mode 100644
index 0000000..7ca589b
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/hijri-gregorian-datepicker/provide-parent-form.directive.js.__ivy_ngcc_bak
@@ -0,0 +1,32 @@
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/hijri-gregorian-datepicker/provide-parent-form.directive.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+import { Directive, Optional, SkipSelf } from '@angular/core';
+import { ControlContainer, NgForm } from '@angular/forms';
+/**
+ * @param {?} form
+ * @return {?}
+ */
+export function test(form) {
+    return form;
+}
+export class ProvideParentFormDirective {
+    constructor() { }
+}
+ProvideParentFormDirective.decorators = [
+    { type: Directive, args: [{
+                selector: '[provideParentForm]',
+                providers: [
+                    {
+                        provide: ControlContainer,
+                        useFactory: test,
+                        deps: [[new Optional(), new SkipSelf(), NgForm]]
+                    }
+                ]
+            },] }
+];
+/** @nocollapse */
+ProvideParentFormDirective.ctorParameters = () => [];
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdmlkZS1wYXJlbnQtZm9ybS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvIiwic291cmNlcyI6WyJsaWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvcHJvdmlkZS1wYXJlbnQtZm9ybS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7OztBQUUxRCxNQUFNLFVBQVUsSUFBSSxDQUFDLElBQVk7SUFDL0IsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDO0FBWUQsTUFBTSxPQUFPLDBCQUEwQjtJQUVyQyxnQkFBZ0IsQ0FBQzs7O1lBWmxCLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUscUJBQXFCO2dCQUMvQixTQUFTLEVBQUU7b0JBQ1Q7d0JBQ0UsT0FBTyxFQUFFLGdCQUFnQjt3QkFDekIsVUFBVSxFQUFHLElBQUk7d0JBQ2pCLElBQUksRUFBRSxDQUFDLENBQUMsSUFBSSxRQUFRLEVBQUUsRUFBRSxJQUFJLFFBQVEsRUFBRSxFQUFFLE1BQU0sQ0FBQyxDQUFDO3FCQUNqRDtpQkFDSjthQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBPcHRpb25hbCwgU2tpcFNlbGYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbnRyb2xDb250YWluZXIsIE5nRm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuZXhwb3J0IGZ1bmN0aW9uIHRlc3QoZm9ybTogTmdGb3JtKSB7XG4gIHJldHVybiBmb3JtO1xufVxuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbcHJvdmlkZVBhcmVudEZvcm1dJyxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogQ29udHJvbENvbnRhaW5lcixcbiAgICAgIHVzZUZhY3Rvcnk6ICB0ZXN0ICxcbiAgICAgIGRlcHM6IFtbbmV3IE9wdGlvbmFsKCksIG5ldyBTa2lwU2VsZigpLCBOZ0Zvcm1dXVxuICAgIH1cbl1cbn0pXG5leHBvcnQgY2xhc3MgUHJvdmlkZVBhcmVudEZvcm1EaXJlY3RpdmUge1xuXG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbn1cbiJdfQ==
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/ngx-hijri-gregorian-datepicker.component.js b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/ngx-hijri-gregorian-datepicker.component.js
index de39a83..a57ef42 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/ngx-hijri-gregorian-datepicker.component.js
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/ngx-hijri-gregorian-datepicker.component.js
@@ -4,6 +4,7 @@
  * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
  */
 import { Component } from '@angular/core';
+import * as ɵngcc0 from '@angular/core';
 export class NgxHijriGregorianDatepickerComponent {
     constructor() { }
     /**
@@ -12,16 +13,23 @@ export class NgxHijriGregorianDatepickerComponent {
     ngOnInit() {
     }
 }
-NgxHijriGregorianDatepickerComponent.decorators = [
-    { type: Component, args: [{
+NgxHijriGregorianDatepickerComponent.ɵfac = function NgxHijriGregorianDatepickerComponent_Factory(t) { return new (t || NgxHijriGregorianDatepickerComponent)(); };
+NgxHijriGregorianDatepickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxHijriGregorianDatepickerComponent, selectors: [["lib-ngx-hijri-gregorian-datepicker"]], decls: 2, vars: 0, template: function NgxHijriGregorianDatepickerComponent_Template(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵelementStart(0, "p");
+        ɵngcc0.ɵɵtext(1, " ngx-hijri-gregorian-datepicker works! ");
+        ɵngcc0.ɵɵelementEnd();
+    } }, encapsulation: 2 });
+/** @nocollapse */
+NgxHijriGregorianDatepickerComponent.ctorParameters = () => [];
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxHijriGregorianDatepickerComponent, [{
+        type: Component,
+        args: [{
                 selector: 'lib-ngx-hijri-gregorian-datepicker',
                 template: `
     <p>
       ngx-hijri-gregorian-datepicker works!
     </p>
   `
-            }] }
-];
-/** @nocollapse */
-NgxHijriGregorianDatepickerComponent.ctorParameters = () => [];
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci8iLCJzb3VyY2VzIjpbImxpYi9uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQVdsRCxNQUFNLE9BQU8sb0NBQW9DO0lBRS9DLGdCQUFnQixDQUFDOzs7O0lBRWpCLFFBQVE7SUFDUixDQUFDOzs7WUFkRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLG9DQUFvQztnQkFDOUMsUUFBUSxFQUFFOzs7O0dBSVQ7YUFFRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2xpYi1uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXInLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxwPlxuICAgICAgbmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyIHdvcmtzIVxuICAgIDwvcD5cbiAgYCxcbiAgc3R5bGVzOiBbXVxufSlcbmV4cG9ydCBjbGFzcyBOZ3hIaWpyaUdyZWdvcmlhbkRhdGVwaWNrZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgbmdPbkluaXQoKSB7XG4gIH1cblxufVxuIl19
\ No newline at end of file
+            }]
+    }], function () { return []; }, null); })();
+//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyL2xpYi9uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQzs7QUFXbEQsTUFBTSxPQUFPLG9DQUFvQztBQUFHLElBRWxELGdCQUFnQixDQUFDO0FBQ25CO0FBQ087QUFJSDtBQUFRLElBSlYsUUFBUTtBQUNWLElBQUUsQ0FBQztBQUNIO2dFQWZDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsb0NBQW9DO0FBQzlDLFFBQVEsRUFBRSxrRUFJVCxjQUVGOzs7OzZCQUNHO0FBQUM7QUFBbUI7Ozs7Ozs7Ozs7OztBQVhBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFXQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFDQSxBQUFBLEFBZEEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFJQSxBQUVBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbGliLW5neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlcicsXG4gIHRlbXBsYXRlOiBgXG4gICAgPHA+XG4gICAgICBuZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIgd29ya3MhXG4gICAgPC9wPlxuICBgLFxuICBzdHlsZXM6IFtdXG59KVxuZXhwb3J0IGNsYXNzIE5neEhpanJpR3JlZ29yaWFuRGF0ZXBpY2tlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxuICBuZ09uSW5pdCgpIHtcbiAgfVxuXG59XG4iXX0=
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/ngx-hijri-gregorian-datepicker.component.js.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/ngx-hijri-gregorian-datepicker.component.js.__ivy_ngcc_bak
new file mode 100644
index 0000000..de39a83
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/ngx-hijri-gregorian-datepicker.component.js.__ivy_ngcc_bak
@@ -0,0 +1,27 @@
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/ngx-hijri-gregorian-datepicker.component.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+import { Component } from '@angular/core';
+export class NgxHijriGregorianDatepickerComponent {
+    constructor() { }
+    /**
+     * @return {?}
+     */
+    ngOnInit() {
+    }
+}
+NgxHijriGregorianDatepickerComponent.decorators = [
+    { type: Component, args: [{
+                selector: 'lib-ngx-hijri-gregorian-datepicker',
+                template: `
+    <p>
+      ngx-hijri-gregorian-datepicker works!
+    </p>
+  `
+            }] }
+];
+/** @nocollapse */
+NgxHijriGregorianDatepickerComponent.ctorParameters = () => [];
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci8iLCJzb3VyY2VzIjpbImxpYi9uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQVdsRCxNQUFNLE9BQU8sb0NBQW9DO0lBRS9DLGdCQUFnQixDQUFDOzs7O0lBRWpCLFFBQVE7SUFDUixDQUFDOzs7WUFkRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLG9DQUFvQztnQkFDOUMsUUFBUSxFQUFFOzs7O0dBSVQ7YUFFRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2xpYi1uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXInLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxwPlxuICAgICAgbmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyIHdvcmtzIVxuICAgIDwvcD5cbiAgYCxcbiAgc3R5bGVzOiBbXVxufSlcbmV4cG9ydCBjbGFzcyBOZ3hIaWpyaUdyZWdvcmlhbkRhdGVwaWNrZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgbmdPbkluaXQoKSB7XG4gIH1cblxufVxuIl19
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/ngx-hijri-gregorian-datepicker.module.js b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/ngx-hijri-gregorian-datepicker.module.js
index 31106cb..cc4ed5a 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/ngx-hijri-gregorian-datepicker.module.js
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/ngx-hijri-gregorian-datepicker.module.js
@@ -13,10 +13,29 @@ import { NgbModule, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';
 import { DateFormatterService } from './hijri-gregorian-datepicker/date-formatter.service';
 import { CustomNgbDateParserFormatter } from './hijri-gregorian-datepicker/CustomNgbDateParserFormatter';
 import { ProvideParentFormDirective } from './hijri-gregorian-datepicker/provide-parent-form.directive';
+import * as ɵngcc0 from '@angular/core';
 export class NgxHijriGregorianDatepickerModule {
 }
-NgxHijriGregorianDatepickerModule.decorators = [
-    { type: NgModule, args: [{
+NgxHijriGregorianDatepickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxHijriGregorianDatepickerModule });
+NgxHijriGregorianDatepickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxHijriGregorianDatepickerModule_Factory(t) { return new (t || NgxHijriGregorianDatepickerModule)(); }, providers: [
+        { provide: NgbDateParserFormatter, useClass: CustomNgbDateParserFormatter },
+        DateFormatterService
+    ], imports: [[
+            CommonModule,
+            ReactiveFormsModule,
+            FormsModule,
+            NgbModule
+        ]] });
+(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxHijriGregorianDatepickerModule, { declarations: function () { return [NgxHijriGregorianDatepickerComponent,
+        HijriGregorianDatepickerComponent,
+        HijriDatepickerComponent,
+        ProvideParentFormDirective]; }, imports: function () { return [CommonModule,
+        ReactiveFormsModule,
+        FormsModule,
+        NgbModule]; }, exports: function () { return [HijriGregorianDatepickerComponent, NgxHijriGregorianDatepickerComponent]; } }); })();
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxHijriGregorianDatepickerModule, [{
+        type: NgModule,
+        args: [{
                 declarations: [
                     NgxHijriGregorianDatepickerComponent,
                     HijriGregorianDatepickerComponent,
@@ -34,6 +53,6 @@ NgxHijriGregorianDatepickerModule.decorators = [
                     DateFormatterService
                 ],
                 exports: [HijriGregorianDatepickerComponent, NgxHijriGregorianDatepickerComponent]
-            },] }
-];
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci8iLCJzb3VyY2VzIjpbImxpYi9uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsb0NBQW9DLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUNsRyxPQUFPLEVBQUUsaUNBQWlDLEVBQUUsTUFBTSxtRUFBbUUsQ0FBQztBQUN0SCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSwwRUFBMEUsQ0FBQztBQUNwSCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLG1CQUFtQixFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxTQUFTLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUMvRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQUMzRixPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSwyREFBMkQsQ0FBQztBQUN6RyxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSw0REFBNEQsQ0FBQztBQXFCeEcsTUFBTSxPQUFPLGlDQUFpQzs7O1lBbkI3QyxRQUFRLFNBQUM7Z0JBQ1IsWUFBWSxFQUFFO29CQUNaLG9DQUFvQztvQkFDcEMsaUNBQWlDO29CQUNqQyx3QkFBd0I7b0JBQ3hCLDBCQUEwQjtpQkFDM0I7Z0JBQ0QsT0FBTyxFQUFFO29CQUNQLFlBQVk7b0JBQ1osbUJBQW1CO29CQUNuQixXQUFXO29CQUNYLFNBQVM7aUJBQ1Y7Z0JBQ0QsU0FBUyxFQUFFO29CQUNULEVBQUMsT0FBTyxFQUFFLHNCQUFzQixFQUFFLFFBQVEsRUFBRSw0QkFBNEIsRUFBQztvQkFDekUsb0JBQW9CO2lCQUNyQjtnQkFDRCxPQUFPLEVBQUUsQ0FBRSxpQ0FBaUMsRUFBRSxvQ0FBb0MsQ0FBQzthQUNwRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ3hIaWpyaUdyZWdvcmlhbkRhdGVwaWNrZXJDb21wb25lbnQgfSBmcm9tICcuL25neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgSGlqcmlHcmVnb3JpYW5EYXRlcGlja2VyQ29tcG9uZW50IH0gZnJvbSAnLi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgSGlqcmlEYXRlcGlja2VyQ29tcG9uZW50IH0gZnJvbSAnLi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9oaWpyaS1kYXRlcGlja2VyL2hpanJpLWRhdGVwaWNrZXIuY29tcG9uZW50JztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBSZWFjdGl2ZUZvcm1zTW9kdWxlLCBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IE5nYk1vZHVsZSwgTmdiRGF0ZVBhcnNlckZvcm1hdHRlciB9IGZyb20gJ0BuZy1ib290c3RyYXAvbmctYm9vdHN0cmFwJztcbmltcG9ydCB7IERhdGVGb3JtYXR0ZXJTZXJ2aWNlIH0gZnJvbSAnLi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9kYXRlLWZvcm1hdHRlci5zZXJ2aWNlJztcbmltcG9ydCB7IEN1c3RvbU5nYkRhdGVQYXJzZXJGb3JtYXR0ZXIgfSBmcm9tICcuL2hpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyL0N1c3RvbU5nYkRhdGVQYXJzZXJGb3JtYXR0ZXInO1xuaW1wb3J0IHsgUHJvdmlkZVBhcmVudEZvcm1EaXJlY3RpdmUgfSBmcm9tICcuL2hpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyL3Byb3ZpZGUtcGFyZW50LWZvcm0uZGlyZWN0aXZlJztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgTmd4SGlqcmlHcmVnb3JpYW5EYXRlcGlja2VyQ29tcG9uZW50LFxuICAgIEhpanJpR3JlZ29yaWFuRGF0ZXBpY2tlckNvbXBvbmVudCxcbiAgICBIaWpyaURhdGVwaWNrZXJDb21wb25lbnQsXG4gICAgUHJvdmlkZVBhcmVudEZvcm1EaXJlY3RpdmVcbiAgXSxcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSAsXG4gICAgUmVhY3RpdmVGb3Jtc01vZHVsZSxcbiAgICBGb3Jtc01vZHVsZSxcbiAgICBOZ2JNb2R1bGVcbiAgXSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge3Byb3ZpZGU6IE5nYkRhdGVQYXJzZXJGb3JtYXR0ZXIsIHVzZUNsYXNzOiBDdXN0b21OZ2JEYXRlUGFyc2VyRm9ybWF0dGVyfSxcbiAgICBEYXRlRm9ybWF0dGVyU2VydmljZVxuICBdLFxuICBleHBvcnRzOiBbIEhpanJpR3JlZ29yaWFuRGF0ZXBpY2tlckNvbXBvbmVudCwgTmd4SGlqcmlHcmVnb3JpYW5EYXRlcGlja2VyQ29tcG9uZW50XVxufSlcbmV4cG9ydCBjbGFzcyBOZ3hIaWpyaUdyZWdvcmlhbkRhdGVwaWNrZXJNb2R1bGUgeyB9XG4iXX0=
\ No newline at end of file
+            }]
+    }], null, null); })();
+//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyL2xpYi9uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsb0NBQW9DLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUNsRyxPQUFPLEVBQUUsaUNBQWlDLEVBQUUsTUFBTSxtRUFBbUUsQ0FBQztBQUN0SCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSwwRUFBMEUsQ0FBQztBQUNwSCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLG1CQUFtQixFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxTQUFTLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUMvRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQUMzRixPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSwyREFBMkQsQ0FBQztBQUN6RyxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSw0REFBNEQsQ0FBQzs7QUFxQnhHLE1BQU0sT0FBTyxpQ0FBaUM7QUFBRzs2REFuQmhELFFBQVEsU0FBQyxrQkFDUixZQUFZLEVBQUU7cUJBQ1osb0NBQW9DLHNCQUNwQyxpQ0FBaUMsc0JBQ2pDLHdCQUF3QixzQkFDeEI7R0FBMEIsa0JBQzNCLGtCQUNELE9BQU8sRUFBRSxzQkFDUCxZQUFZO21CQUNaO1NBQW1CO1lBQ25CLFdBQVc7bUJBQ1gsU0FBUzthQUNWO01BQ0QsU0FBUyxFQUFFOztFQUNULEVBQUMsT0FBTyxFQUFFLHNCQUFzQixFQUFFLFFBQVEsRUFBRSw0QkFBNEIsRUFBQyxzQkFDekUsb0JBQW9CLGtCQUNyQixrQkFDRCxPQUFPLEVBQUUsQ0FBRSxpQ0FBaUMsRUFBRTtpQ0FBb0MsQ0FBQztLQUNwRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBN0JBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQXFCQSxBQUFBLEFBQUEsQUFBQSxBQW5CQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ3hIaWpyaUdyZWdvcmlhbkRhdGVwaWNrZXJDb21wb25lbnQgfSBmcm9tICcuL25neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgSGlqcmlHcmVnb3JpYW5EYXRlcGlja2VyQ29tcG9uZW50IH0gZnJvbSAnLi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgSGlqcmlEYXRlcGlja2VyQ29tcG9uZW50IH0gZnJvbSAnLi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9oaWpyaS1kYXRlcGlja2VyL2hpanJpLWRhdGVwaWNrZXIuY29tcG9uZW50JztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBSZWFjdGl2ZUZvcm1zTW9kdWxlLCBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IE5nYk1vZHVsZSwgTmdiRGF0ZVBhcnNlckZvcm1hdHRlciB9IGZyb20gJ0BuZy1ib290c3RyYXAvbmctYm9vdHN0cmFwJztcbmltcG9ydCB7IERhdGVGb3JtYXR0ZXJTZXJ2aWNlIH0gZnJvbSAnLi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9kYXRlLWZvcm1hdHRlci5zZXJ2aWNlJztcbmltcG9ydCB7IEN1c3RvbU5nYkRhdGVQYXJzZXJGb3JtYXR0ZXIgfSBmcm9tICcuL2hpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyL0N1c3RvbU5nYkRhdGVQYXJzZXJGb3JtYXR0ZXInO1xuaW1wb3J0IHsgUHJvdmlkZVBhcmVudEZvcm1EaXJlY3RpdmUgfSBmcm9tICcuL2hpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyL3Byb3ZpZGUtcGFyZW50LWZvcm0uZGlyZWN0aXZlJztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgTmd4SGlqcmlHcmVnb3JpYW5EYXRlcGlja2VyQ29tcG9uZW50LFxuICAgIEhpanJpR3JlZ29yaWFuRGF0ZXBpY2tlckNvbXBvbmVudCxcbiAgICBIaWpyaURhdGVwaWNrZXJDb21wb25lbnQsXG4gICAgUHJvdmlkZVBhcmVudEZvcm1EaXJlY3RpdmVcbiAgXSxcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSAsXG4gICAgUmVhY3RpdmVGb3Jtc01vZHVsZSxcbiAgICBGb3Jtc01vZHVsZSxcbiAgICBOZ2JNb2R1bGVcbiAgXSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge3Byb3ZpZGU6IE5nYkRhdGVQYXJzZXJGb3JtYXR0ZXIsIHVzZUNsYXNzOiBDdXN0b21OZ2JEYXRlUGFyc2VyRm9ybWF0dGVyfSxcbiAgICBEYXRlRm9ybWF0dGVyU2VydmljZVxuICBdLFxuICBleHBvcnRzOiBbIEhpanJpR3JlZ29yaWFuRGF0ZXBpY2tlckNvbXBvbmVudCwgTmd4SGlqcmlHcmVnb3JpYW5EYXRlcGlja2VyQ29tcG9uZW50XVxufSlcbmV4cG9ydCBjbGFzcyBOZ3hIaWpyaUdyZWdvcmlhbkRhdGVwaWNrZXJNb2R1bGUgeyB9XG4iXX0=
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/ngx-hijri-gregorian-datepicker.module.js.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/ngx-hijri-gregorian-datepicker.module.js.__ivy_ngcc_bak
new file mode 100644
index 0000000..31106cb
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/ngx-hijri-gregorian-datepicker.module.js.__ivy_ngcc_bak
@@ -0,0 +1,39 @@
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/ngx-hijri-gregorian-datepicker.module.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+import { NgModule } from '@angular/core';
+import { NgxHijriGregorianDatepickerComponent } from './ngx-hijri-gregorian-datepicker.component';
+import { HijriGregorianDatepickerComponent } from './hijri-gregorian-datepicker/hijri-gregorian-datepicker.component';
+import { HijriDatepickerComponent } from './hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component';
+import { CommonModule } from '@angular/common';
+import { ReactiveFormsModule, FormsModule } from '@angular/forms';
+import { NgbModule, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';
+import { DateFormatterService } from './hijri-gregorian-datepicker/date-formatter.service';
+import { CustomNgbDateParserFormatter } from './hijri-gregorian-datepicker/CustomNgbDateParserFormatter';
+import { ProvideParentFormDirective } from './hijri-gregorian-datepicker/provide-parent-form.directive';
+export class NgxHijriGregorianDatepickerModule {
+}
+NgxHijriGregorianDatepickerModule.decorators = [
+    { type: NgModule, args: [{
+                declarations: [
+                    NgxHijriGregorianDatepickerComponent,
+                    HijriGregorianDatepickerComponent,
+                    HijriDatepickerComponent,
+                    ProvideParentFormDirective
+                ],
+                imports: [
+                    CommonModule,
+                    ReactiveFormsModule,
+                    FormsModule,
+                    NgbModule
+                ],
+                providers: [
+                    { provide: NgbDateParserFormatter, useClass: CustomNgbDateParserFormatter },
+                    DateFormatterService
+                ],
+                exports: [HijriGregorianDatepickerComponent, NgxHijriGregorianDatepickerComponent]
+            },] }
+];
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci8iLCJzb3VyY2VzIjpbImxpYi9uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsb0NBQW9DLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUNsRyxPQUFPLEVBQUUsaUNBQWlDLEVBQUUsTUFBTSxtRUFBbUUsQ0FBQztBQUN0SCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSwwRUFBMEUsQ0FBQztBQUNwSCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLG1CQUFtQixFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxTQUFTLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUMvRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQUMzRixPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSwyREFBMkQsQ0FBQztBQUN6RyxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSw0REFBNEQsQ0FBQztBQXFCeEcsTUFBTSxPQUFPLGlDQUFpQzs7O1lBbkI3QyxRQUFRLFNBQUM7Z0JBQ1IsWUFBWSxFQUFFO29CQUNaLG9DQUFvQztvQkFDcEMsaUNBQWlDO29CQUNqQyx3QkFBd0I7b0JBQ3hCLDBCQUEwQjtpQkFDM0I7Z0JBQ0QsT0FBTyxFQUFFO29CQUNQLFlBQVk7b0JBQ1osbUJBQW1CO29CQUNuQixXQUFXO29CQUNYLFNBQVM7aUJBQ1Y7Z0JBQ0QsU0FBUyxFQUFFO29CQUNULEVBQUMsT0FBTyxFQUFFLHNCQUFzQixFQUFFLFFBQVEsRUFBRSw0QkFBNEIsRUFBQztvQkFDekUsb0JBQW9CO2lCQUNyQjtnQkFDRCxPQUFPLEVBQUUsQ0FBRSxpQ0FBaUMsRUFBRSxvQ0FBb0MsQ0FBQzthQUNwRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ3hIaWpyaUdyZWdvcmlhbkRhdGVwaWNrZXJDb21wb25lbnQgfSBmcm9tICcuL25neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgSGlqcmlHcmVnb3JpYW5EYXRlcGlja2VyQ29tcG9uZW50IH0gZnJvbSAnLi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgSGlqcmlEYXRlcGlja2VyQ29tcG9uZW50IH0gZnJvbSAnLi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9oaWpyaS1kYXRlcGlja2VyL2hpanJpLWRhdGVwaWNrZXIuY29tcG9uZW50JztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBSZWFjdGl2ZUZvcm1zTW9kdWxlLCBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IE5nYk1vZHVsZSwgTmdiRGF0ZVBhcnNlckZvcm1hdHRlciB9IGZyb20gJ0BuZy1ib290c3RyYXAvbmctYm9vdHN0cmFwJztcbmltcG9ydCB7IERhdGVGb3JtYXR0ZXJTZXJ2aWNlIH0gZnJvbSAnLi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9kYXRlLWZvcm1hdHRlci5zZXJ2aWNlJztcbmltcG9ydCB7IEN1c3RvbU5nYkRhdGVQYXJzZXJGb3JtYXR0ZXIgfSBmcm9tICcuL2hpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyL0N1c3RvbU5nYkRhdGVQYXJzZXJGb3JtYXR0ZXInO1xuaW1wb3J0IHsgUHJvdmlkZVBhcmVudEZvcm1EaXJlY3RpdmUgfSBmcm9tICcuL2hpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyL3Byb3ZpZGUtcGFyZW50LWZvcm0uZGlyZWN0aXZlJztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgTmd4SGlqcmlHcmVnb3JpYW5EYXRlcGlja2VyQ29tcG9uZW50LFxuICAgIEhpanJpR3JlZ29yaWFuRGF0ZXBpY2tlckNvbXBvbmVudCxcbiAgICBIaWpyaURhdGVwaWNrZXJDb21wb25lbnQsXG4gICAgUHJvdmlkZVBhcmVudEZvcm1EaXJlY3RpdmVcbiAgXSxcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSAsXG4gICAgUmVhY3RpdmVGb3Jtc01vZHVsZSxcbiAgICBGb3Jtc01vZHVsZSxcbiAgICBOZ2JNb2R1bGVcbiAgXSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge3Byb3ZpZGU6IE5nYkRhdGVQYXJzZXJGb3JtYXR0ZXIsIHVzZUNsYXNzOiBDdXN0b21OZ2JEYXRlUGFyc2VyRm9ybWF0dGVyfSxcbiAgICBEYXRlRm9ybWF0dGVyU2VydmljZVxuICBdLFxuICBleHBvcnRzOiBbIEhpanJpR3JlZ29yaWFuRGF0ZXBpY2tlckNvbXBvbmVudCwgTmd4SGlqcmlHcmVnb3JpYW5EYXRlcGlja2VyQ29tcG9uZW50XVxufSlcbmV4cG9ydCBjbGFzcyBOZ3hIaWpyaUdyZWdvcmlhbkRhdGVwaWNrZXJNb2R1bGUgeyB9XG4iXX0=
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/ngx-hijri-gregorian-datepicker.service.js b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/ngx-hijri-gregorian-datepicker.service.js
index a859807..789f0e1 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/ngx-hijri-gregorian-datepicker.service.js
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/ngx-hijri-gregorian-datepicker.service.js
@@ -5,15 +5,19 @@
  */
 import { Injectable } from '@angular/core';
 import * as i0 from "@angular/core";
+import * as ɵngcc0 from '@angular/core';
 export class NgxHijriGregorianDatepickerService {
     constructor() { }
 }
-NgxHijriGregorianDatepickerService.decorators = [
-    { type: Injectable, args: [{
-                providedIn: 'root'
-            },] }
-];
+NgxHijriGregorianDatepickerService.ɵfac = function NgxHijriGregorianDatepickerService_Factory(t) { return new (t || NgxHijriGregorianDatepickerService)(); };
+NgxHijriGregorianDatepickerService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgxHijriGregorianDatepickerService, factory: NgxHijriGregorianDatepickerService.ɵfac, providedIn: 'root' });
 /** @nocollapse */
 NgxHijriGregorianDatepickerService.ctorParameters = () => [];
 /** @nocollapse */ NgxHijriGregorianDatepickerService.ngInjectableDef = i0.defineInjectable({ factory: function NgxHijriGregorianDatepickerService_Factory() { return new NgxHijriGregorianDatepickerService(); }, token: NgxHijriGregorianDatepickerService, providedIn: "root" });
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvIiwic291cmNlcyI6WyJsaWIvbmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQUszQyxNQUFNLE9BQU8sa0NBQWtDO0lBRTdDLGdCQUFnQixDQUFDOzs7WUFMbEIsVUFBVSxTQUFDO2dCQUNWLFVBQVUsRUFBRSxNQUFNO2FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBOZ3hIaWpyaUdyZWdvcmlhbkRhdGVwaWNrZXJTZXJ2aWNlIHtcblxuICBjb25zdHJ1Y3RvcigpIHsgfVxufVxuIl19
\ No newline at end of file
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxHijriGregorianDatepickerService, [{
+        type: Injectable,
+        args: [{
+                providedIn: 'root'
+            }]
+    }], function () { return []; }, null); })();
+//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLnNlcnZpY2UuanMiLCJzb3VyY2VzIjpbIm5neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9saWIvbmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDOztBQUlBLE1BQU0sT0FBTyxrQ0FBa0M7QUFDL0MsSUFDRSxnQkFBZ0IsQ0FBQztBQUNuQjs4REFOQyxVQUFVLFNBQUMsa0JBQ1YsVUFBVSxFQUFFLE1BQU0sY0FDbkI7MExBQ0k7QUFBQztBQUFtQjtBQUlYOzs7Ozs7O0FBVEEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUtBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBTEEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgTmd4SGlqcmlHcmVnb3JpYW5EYXRlcGlja2VyU2VydmljZSB7XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cbn1cbiJdfQ==
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/ngx-hijri-gregorian-datepicker.service.js.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/ngx-hijri-gregorian-datepicker.service.js.__ivy_ngcc_bak
new file mode 100644
index 0000000..a859807
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/lib/ngx-hijri-gregorian-datepicker.service.js.__ivy_ngcc_bak
@@ -0,0 +1,19 @@
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/ngx-hijri-gregorian-datepicker.service.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+import { Injectable } from '@angular/core';
+import * as i0 from "@angular/core";
+export class NgxHijriGregorianDatepickerService {
+    constructor() { }
+}
+NgxHijriGregorianDatepickerService.decorators = [
+    { type: Injectable, args: [{
+                providedIn: 'root'
+            },] }
+];
+/** @nocollapse */
+NgxHijriGregorianDatepickerService.ctorParameters = () => [];
+/** @nocollapse */ NgxHijriGregorianDatepickerService.ngInjectableDef = i0.defineInjectable({ factory: function NgxHijriGregorianDatepickerService_Factory() { return new NgxHijriGregorianDatepickerService(); }, token: NgxHijriGregorianDatepickerService, providedIn: "root" });
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvIiwic291cmNlcyI6WyJsaWIvbmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQUszQyxNQUFNLE9BQU8sa0NBQWtDO0lBRTdDLGdCQUFnQixDQUFDOzs7WUFMbEIsVUFBVSxTQUFDO2dCQUNWLFVBQVUsRUFBRSxNQUFNO2FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBOZ3hIaWpyaUdyZWdvcmlhbkRhdGVwaWNrZXJTZXJ2aWNlIHtcblxuICBjb25zdHJ1Y3RvcigpIHsgfVxufVxuIl19
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/ngx-hijri-gregorian-datepicker.js b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/ngx-hijri-gregorian-datepicker.js
index 3484206..8766692 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/ngx-hijri-gregorian-datepicker.js
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/ngx-hijri-gregorian-datepicker.js
@@ -11,4 +11,4 @@ export { CustomNgbDateParserFormatter as ɵe } from './lib/hijri-gregorian-datep
 export { IslamicI18n as ɵb } from './lib/hijri-gregorian-datepicker/IslamicI18n';
 export { HijriDatepickerComponent as ɵa } from './lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component';
 export { ProvideParentFormDirective as ɵd, test as ɵc } from './lib/hijri-gregorian-datepicker/provide-parent-form.directive';
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLyIsInNvdXJjZXMiOlsibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBSUEsK0xBQWMsY0FBYyxDQUFDO0FBRTdCLE9BQU8sRUFBQyw0QkFBNEIsSUFBSSxFQUFFLEVBQUMsTUFBTSwrREFBK0QsQ0FBQztBQUNqSCxPQUFPLEVBQUMsV0FBVyxJQUFJLEVBQUUsRUFBQyxNQUFNLDhDQUE4QyxDQUFDO0FBQy9FLE9BQU8sRUFBQyx3QkFBd0IsSUFBSSxFQUFFLEVBQUMsTUFBTSw4RUFBOEUsQ0FBQztBQUM1SCxPQUFPLEVBQUMsMEJBQTBCLElBQUksRUFBRSxFQUFDLElBQUksSUFBSSxFQUFFLEVBQUMsTUFBTSxnRUFBZ0UsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWMtYXBpJztcblxuZXhwb3J0IHtDdXN0b21OZ2JEYXRlUGFyc2VyRm9ybWF0dGVyIGFzIMm1ZX0gZnJvbSAnLi9saWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvQ3VzdG9tTmdiRGF0ZVBhcnNlckZvcm1hdHRlcic7XG5leHBvcnQge0lzbGFtaWNJMThuIGFzIMm1Yn0gZnJvbSAnLi9saWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvSXNsYW1pY0kxOG4nO1xuZXhwb3J0IHtIaWpyaURhdGVwaWNrZXJDb21wb25lbnQgYXMgybVhfSBmcm9tICcuL2xpYi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9oaWpyaS1kYXRlcGlja2VyL2hpanJpLWRhdGVwaWNrZXIuY29tcG9uZW50JztcbmV4cG9ydCB7UHJvdmlkZVBhcmVudEZvcm1EaXJlY3RpdmUgYXMgybVkLHRlc3QgYXMgybVjfSBmcm9tICcuL2xpYi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9wcm92aWRlLXBhcmVudC1mb3JtLmRpcmVjdGl2ZSc7Il19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLmpzIiwic291cmNlcyI6WyJuZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvbmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBSUEsK0xBQWMsY0FBYyxDQUFDO0FBRTdCLE9BQU8sRUFBQyw0QkFBNEIsSUFBSSxFQUFFLEVBQUMsTUFBTSwrREFBK0QsQ0FBQztBQUNqSCxPQUFPLEVBQUMsV0FBVyxJQUFJLEVBQUUsRUFBQyxNQUFNLDhDQUE4QyxDQUFDO0FBQy9FLE9BQU8sRUFBQyx3QkFBd0IsSUFBSSxFQUFFLEVBQUMsTUFBTSw4RUFBOEUsQ0FBQzs7QUFKQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdlbmVyYXRlZCBidW5kbGUgaW5kZXguIERvIG5vdCBlZGl0LlxuICovXG5cbmV4cG9ydCAqIGZyb20gJy4vcHVibGljLWFwaSc7XG5cbmV4cG9ydCB7Q3VzdG9tTmdiRGF0ZVBhcnNlckZvcm1hdHRlciBhcyDJtWV9IGZyb20gJy4vbGliL2hpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyL0N1c3RvbU5nYkRhdGVQYXJzZXJGb3JtYXR0ZXInO1xuZXhwb3J0IHtJc2xhbWljSTE4biBhcyDJtWJ9IGZyb20gJy4vbGliL2hpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyL0lzbGFtaWNJMThuJztcbmV4cG9ydCB7SGlqcmlEYXRlcGlja2VyQ29tcG9uZW50IGFzIMm1YX0gZnJvbSAnLi9saWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvaGlqcmktZGF0ZXBpY2tlci9oaWpyaS1kYXRlcGlja2VyLmNvbXBvbmVudCc7XG5leHBvcnQge1Byb3ZpZGVQYXJlbnRGb3JtRGlyZWN0aXZlIGFzIMm1ZCx0ZXN0IGFzIMm1Y30gZnJvbSAnLi9saWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvcHJvdmlkZS1wYXJlbnQtZm9ybS5kaXJlY3RpdmUnOyJdfQ==
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm2015/ngx-hijri-gregorian-datepicker.js.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/ngx-hijri-gregorian-datepicker.js.__ivy_ngcc_bak
new file mode 100644
index 0000000..3484206
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm2015/ngx-hijri-gregorian-datepicker.js.__ivy_ngcc_bak
@@ -0,0 +1,14 @@
+/**
+ * @fileoverview added by tsickle
+ * Generated from: ngx-hijri-gregorian-datepicker.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+/**
+ * Generated bundle index. Do not edit.
+ */
+export { DateType, DateFormatterService, NgxHijriGregorianDatepickerService, NgxHijriGregorianDatepickerComponent, HijriGregorianDatepickerComponent, NgxHijriGregorianDatepickerModule } from './public-api';
+export { CustomNgbDateParserFormatter as ɵe } from './lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter';
+export { IslamicI18n as ɵb } from './lib/hijri-gregorian-datepicker/IslamicI18n';
+export { HijriDatepickerComponent as ɵa } from './lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component';
+export { ProvideParentFormDirective as ɵd, test as ɵc } from './lib/hijri-gregorian-datepicker/provide-parent-form.directive';
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLyIsInNvdXJjZXMiOlsibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBSUEsK0xBQWMsY0FBYyxDQUFDO0FBRTdCLE9BQU8sRUFBQyw0QkFBNEIsSUFBSSxFQUFFLEVBQUMsTUFBTSwrREFBK0QsQ0FBQztBQUNqSCxPQUFPLEVBQUMsV0FBVyxJQUFJLEVBQUUsRUFBQyxNQUFNLDhDQUE4QyxDQUFDO0FBQy9FLE9BQU8sRUFBQyx3QkFBd0IsSUFBSSxFQUFFLEVBQUMsTUFBTSw4RUFBOEUsQ0FBQztBQUM1SCxPQUFPLEVBQUMsMEJBQTBCLElBQUksRUFBRSxFQUFDLElBQUksSUFBSSxFQUFFLEVBQUMsTUFBTSxnRUFBZ0UsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWMtYXBpJztcblxuZXhwb3J0IHtDdXN0b21OZ2JEYXRlUGFyc2VyRm9ybWF0dGVyIGFzIMm1ZX0gZnJvbSAnLi9saWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvQ3VzdG9tTmdiRGF0ZVBhcnNlckZvcm1hdHRlcic7XG5leHBvcnQge0lzbGFtaWNJMThuIGFzIMm1Yn0gZnJvbSAnLi9saWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvSXNsYW1pY0kxOG4nO1xuZXhwb3J0IHtIaWpyaURhdGVwaWNrZXJDb21wb25lbnQgYXMgybVhfSBmcm9tICcuL2xpYi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9oaWpyaS1kYXRlcGlja2VyL2hpanJpLWRhdGVwaWNrZXIuY29tcG9uZW50JztcbmV4cG9ydCB7UHJvdmlkZVBhcmVudEZvcm1EaXJlY3RpdmUgYXMgybVkLHRlc3QgYXMgybVjfSBmcm9tICcuL2xpYi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9wcm92aWRlLXBhcmVudC1mb3JtLmRpcmVjdGl2ZSc7Il19
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.js b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.js
index 925fbd9..7898110 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.js
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.js
@@ -7,6 +7,7 @@ import * as tslib_1 from "tslib";
 import { NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';
 import { DatePipe } from '@angular/common';
 import { Injectable } from '@angular/core';
+import * as ɵngcc0 from '@angular/core';
 var CustomNgbDateParserFormatter = /** @class */ (function (_super) {
     tslib_1.__extends(CustomNgbDateParserFormatter, _super);
     function CustomNgbDateParserFormatter() {
@@ -59,11 +60,13 @@ var CustomNgbDateParserFormatter = /** @class */ (function (_super) {
         }
         return returnVal;
     };
-    CustomNgbDateParserFormatter.decorators = [
-        { type: Injectable }
-    ];
     /** @nocollapse */
     CustomNgbDateParserFormatter.ctorParameters = function () { return []; };
+CustomNgbDateParserFormatter.ɵfac = function CustomNgbDateParserFormatter_Factory(t) { return new (t || CustomNgbDateParserFormatter)(); };
+CustomNgbDateParserFormatter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: CustomNgbDateParserFormatter, factory: function (t) { return CustomNgbDateParserFormatter.ɵfac(t); } });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CustomNgbDateParserFormatter, [{
+        type: Injectable
+    }], function () { return []; }, null); })();
     return CustomNgbDateParserFormatter;
 }(NgbDateParserFormatter));
 export { CustomNgbDateParserFormatter };
@@ -71,4 +74,4 @@ if (false) {
     /** @type {?} */
     CustomNgbDateParserFormatter.prototype.datePipe;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ3VzdG9tTmdiRGF0ZVBhcnNlckZvcm1hdHRlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci8iLCJzb3VyY2VzIjpbImxpYi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9DdXN0b21OZ2JEYXRlUGFyc2VyRm9ybWF0dGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE9BQU8sRUFBRSxzQkFBc0IsRUFBaUIsTUFBTSw0QkFBNEIsQ0FBQztBQUNuRixPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDM0MsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQztJQUNrRCx3REFBc0I7SUFFdEU7UUFBQSxZQUNFLGlCQUFPLFNBQ1I7UUFIRCxjQUFRLEdBQUcsSUFBSSxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUM7O0lBR2pDLENBQUM7Ozs7O0lBQ0QsNkNBQU07Ozs7SUFBTixVQUFPLElBQW1CO1FBQ3hCLElBQUksSUFBSSxLQUFLLElBQUksRUFBRTtZQUNqQixPQUFPLEVBQUUsQ0FBQztTQUNYO1FBQ0QsSUFBSTtZQUNGLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsVUFBVSxDQUFDLENBQUM7U0FDM0Y7UUFBQyxPQUFPLENBQUMsRUFBRTtZQUNWLE9BQU8sRUFBRSxDQUFDO1NBQ1g7SUFDSCxDQUFDOzs7OztJQUNELDRDQUFLOzs7O0lBQUwsVUFBTSxLQUFhOztZQUNiLFNBQXdCO1FBQzVCLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDVixTQUFTLEdBQUcsSUFBSSxDQUFDO1NBQ2xCO2FBQU07WUFDTCxJQUFJOztvQkFDRSxTQUFTLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUM7Z0JBQ2xFLFNBQVMsR0FBRyxFQUFFLElBQUksRUFBRSxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsS0FBSyxFQUFFLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7YUFDMUc7WUFBQyxPQUFPLENBQUMsRUFBRTtnQkFDVixTQUFTLEdBQUcsSUFBSSxDQUFDO2FBQ2xCO1NBQ0Y7UUFDRCxPQUFPLFNBQVMsQ0FBQztJQUNuQixDQUFDOztnQkE3QkYsVUFBVTs7OztJQThCWCxtQ0FBQztDQUFBLEFBOUJELENBQ2tELHNCQUFzQixHQTZCdkU7U0E3QlksNEJBQTRCOzs7SUFDdkMsZ0RBQWlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdiRGF0ZVBhcnNlckZvcm1hdHRlciwgTmdiRGF0ZVN0cnVjdCB9IGZyb20gJ0BuZy1ib290c3RyYXAvbmctYm9vdHN0cmFwJztcclxuaW1wb3J0IHsgRGF0ZVBpcGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBDdXN0b21OZ2JEYXRlUGFyc2VyRm9ybWF0dGVyIGV4dGVuZHMgTmdiRGF0ZVBhcnNlckZvcm1hdHRlciB7XHJcbiAgZGF0ZVBpcGUgPSBuZXcgRGF0ZVBpcGUoJ2VuLVVTJyk7XHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICBzdXBlcigpO1xyXG4gIH1cclxuICBmb3JtYXQoZGF0ZTogTmdiRGF0ZVN0cnVjdCk6IHN0cmluZyB7XHJcbiAgICBpZiAoZGF0ZSA9PT0gbnVsbCkge1xyXG4gICAgICByZXR1cm4gJyc7XHJcbiAgICB9XHJcbiAgICB0cnkge1xyXG4gICAgICByZXR1cm4gdGhpcy5kYXRlUGlwZS50cmFuc2Zvcm0obmV3IERhdGUoZGF0ZS55ZWFyLCBkYXRlLm1vbnRoIC0gMSwgZGF0ZS5kYXkpLCAnZC9NL3l5eXknKTtcclxuICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgcmV0dXJuICcnO1xyXG4gICAgfVxyXG4gIH1cclxuICBwYXJzZSh2YWx1ZTogc3RyaW5nKTogTmdiRGF0ZVN0cnVjdCB7XHJcbiAgICBsZXQgcmV0dXJuVmFsOiBOZ2JEYXRlU3RydWN0O1xyXG4gICAgaWYgKCF2YWx1ZSkge1xyXG4gICAgICByZXR1cm5WYWwgPSBudWxsO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBsZXQgZGF0ZVBhcnRzID0gdGhpcy5kYXRlUGlwZS50cmFuc2Zvcm0odmFsdWUsICdNLWQteScpLnNwbGl0KCctJyk7XHJcbiAgICAgICAgcmV0dXJuVmFsID0geyB5ZWFyOiBwYXJzZUludChkYXRlUGFydHNbMl0pLCBtb250aDogcGFyc2VJbnQoZGF0ZVBhcnRzWzBdKSwgZGF5OiBwYXJzZUludChkYXRlUGFydHNbMV0pIH07XHJcbiAgICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICByZXR1cm5WYWwgPSBudWxsO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gcmV0dXJuVmFsO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ3VzdG9tTmdiRGF0ZVBhcnNlckZvcm1hdHRlci5qcyIsInNvdXJjZXMiOlsibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyL2xpYi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9DdXN0b21OZ2JEYXRlUGFyc2VyRm9ybWF0dGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE9BQU8sRUFBRSxzQkFBc0IsRUFBaUIsTUFBTSw0QkFBNEIsQ0FBQztBQUNuRixPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDM0MsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFFM0M7QUFDd0QsSUFBTix3REFBc0I7QUFBQyxJQUV2RTtBQUdPLFFBSFAsWUFDRSxpQkFBTyxTQUNSO0FBQ0gsUUFKRSxjQUFRLEdBQUcsSUFBSSxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDbkM7QUFDSSxJQUNGLENBQUM7QUFDSDtBQUFRO0FBQXVCO0FBQ3JCO0FBQVEsSUFEaEIsNkNBQU07QUFBTztBQUF1QjtBQUNyQjtBQUNqQixJQUZFLFVBQU8sSUFBbUI7QUFBSSxRQUM1QixJQUFJLElBQUksS0FBSyxJQUFJLEVBQUU7QUFDdkIsWUFBTSxPQUFPLEVBQUUsQ0FBQztBQUNoQixTQUFLO0FBQ0wsUUFBSSxJQUFJO0FBQ1IsWUFBTSxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0FBQ2hHLFNBQUs7QUFBQyxRQUFBLE9BQU8sQ0FBQyxFQUFFO0FBQ2hCLFlBQU0sT0FBTyxFQUFFLENBQUM7QUFDaEIsU0FBSztBQUNMLElBQUUsQ0FBQztBQUNGO0FBQVE7QUFBd0I7QUFDckI7QUFBUSxJQURsQiw0Q0FBSztBQUFPO0FBQXdCO0FBQ3JCO0FBQVEsSUFEdkIsVUFBTSxLQUFhO0FBQUk7QUFDZixZQUFGLFNBQXdCO0FBQ2hDLFFBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtBQUNoQixZQUFNLFNBQVMsR0FBRyxJQUFJLENBQUM7QUFDdkIsU0FBSztBQUFDLGFBQUs7QUFDWCxZQUFNLElBQUk7QUFDVjtBQUFpQyxvQkFBckIsU0FBUyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDO0FBQzFFLGdCQUFRLFNBQVMsR0FBRyxFQUFFLElBQUksRUFBRSxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsS0FBSyxFQUFFLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7QUFDakgsYUFBTztBQUFDLFlBQUEsT0FBTyxDQUFDLEVBQUU7QUFDbEIsZ0JBQVEsU0FBUyxHQUFHLElBQUksQ0FBQztBQUN6QixhQUFPO0FBQ1AsU0FBSztBQUNMLFFBQUksT0FBTyxTQUFTLENBQUM7QUFDckIsSUFBRSxDQUFDLENBNUJHO0FBQUM7eUNBRE4sVUFBVSxuREFDbUI7Ozs7O2dEQUNFO0FBQUMsSUE0QmpDLG1DQUFDO0FBQ0EsQ0FEQSxBQTlCRCxDQUNrRCxzQkFBc0IsR0E2QnZFO0FBQ0QsU0E5QmEsNEJBQTRCO0FBQUk7QUFBYTtBQUN0RCxJQUFGLGdEQUFpQzs7QUFOQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBSEEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBR0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBN0JBLEFBQUEsQUE4QkEsQUFBQSxBQUFBLEFBOUJBLEFBQ0EsQUFBQSxBQTZCQSxBQTdCQSxBQUFBLEFBQ0EsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nYkRhdGVQYXJzZXJGb3JtYXR0ZXIsIE5nYkRhdGVTdHJ1Y3QgfSBmcm9tICdAbmctYm9vdHN0cmFwL25nLWJvb3RzdHJhcCc7XHJcbmltcG9ydCB7IERhdGVQaXBlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgQ3VzdG9tTmdiRGF0ZVBhcnNlckZvcm1hdHRlciBleHRlbmRzIE5nYkRhdGVQYXJzZXJGb3JtYXR0ZXIge1xyXG4gIGRhdGVQaXBlID0gbmV3IERhdGVQaXBlKCdlbi1VUycpO1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgc3VwZXIoKTtcclxuICB9XHJcbiAgZm9ybWF0KGRhdGU6IE5nYkRhdGVTdHJ1Y3QpOiBzdHJpbmcge1xyXG4gICAgaWYgKGRhdGUgPT09IG51bGwpIHtcclxuICAgICAgcmV0dXJuICcnO1xyXG4gICAgfVxyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIHRoaXMuZGF0ZVBpcGUudHJhbnNmb3JtKG5ldyBEYXRlKGRhdGUueWVhciwgZGF0ZS5tb250aCAtIDEsIGRhdGUuZGF5KSwgJ2QvTS95eXl5Jyk7XHJcbiAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgIHJldHVybiAnJztcclxuICAgIH1cclxuICB9XHJcbiAgcGFyc2UodmFsdWU6IHN0cmluZyk6IE5nYkRhdGVTdHJ1Y3Qge1xyXG4gICAgbGV0IHJldHVyblZhbDogTmdiRGF0ZVN0cnVjdDtcclxuICAgIGlmICghdmFsdWUpIHtcclxuICAgICAgcmV0dXJuVmFsID0gbnVsbDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgbGV0IGRhdGVQYXJ0cyA9IHRoaXMuZGF0ZVBpcGUudHJhbnNmb3JtKHZhbHVlLCAnTS1kLXknKS5zcGxpdCgnLScpO1xyXG4gICAgICAgIHJldHVyblZhbCA9IHsgeWVhcjogcGFyc2VJbnQoZGF0ZVBhcnRzWzJdKSwgbW9udGg6IHBhcnNlSW50KGRhdGVQYXJ0c1swXSksIGRheTogcGFyc2VJbnQoZGF0ZVBhcnRzWzFdKSB9O1xyXG4gICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgcmV0dXJuVmFsID0gbnVsbDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHJldHVyblZhbDtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.js.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.js.__ivy_ngcc_bak
new file mode 100644
index 0000000..925fbd9
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.js.__ivy_ngcc_bak
@@ -0,0 +1,74 @@
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+import * as tslib_1 from "tslib";
+import { NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';
+import { DatePipe } from '@angular/common';
+import { Injectable } from '@angular/core';
+var CustomNgbDateParserFormatter = /** @class */ (function (_super) {
+    tslib_1.__extends(CustomNgbDateParserFormatter, _super);
+    function CustomNgbDateParserFormatter() {
+        var _this = _super.call(this) || this;
+        _this.datePipe = new DatePipe('en-US');
+        return _this;
+    }
+    /**
+     * @param {?} date
+     * @return {?}
+     */
+    CustomNgbDateParserFormatter.prototype.format = /**
+     * @param {?} date
+     * @return {?}
+     */
+    function (date) {
+        if (date === null) {
+            return '';
+        }
+        try {
+            return this.datePipe.transform(new Date(date.year, date.month - 1, date.day), 'd/M/yyyy');
+        }
+        catch (e) {
+            return '';
+        }
+    };
+    /**
+     * @param {?} value
+     * @return {?}
+     */
+    CustomNgbDateParserFormatter.prototype.parse = /**
+     * @param {?} value
+     * @return {?}
+     */
+    function (value) {
+        /** @type {?} */
+        var returnVal;
+        if (!value) {
+            returnVal = null;
+        }
+        else {
+            try {
+                /** @type {?} */
+                var dateParts = this.datePipe.transform(value, 'M-d-y').split('-');
+                returnVal = { year: parseInt(dateParts[2]), month: parseInt(dateParts[0]), day: parseInt(dateParts[1]) };
+            }
+            catch (e) {
+                returnVal = null;
+            }
+        }
+        return returnVal;
+    };
+    CustomNgbDateParserFormatter.decorators = [
+        { type: Injectable }
+    ];
+    /** @nocollapse */
+    CustomNgbDateParserFormatter.ctorParameters = function () { return []; };
+    return CustomNgbDateParserFormatter;
+}(NgbDateParserFormatter));
+export { CustomNgbDateParserFormatter };
+if (false) {
+    /** @type {?} */
+    CustomNgbDateParserFormatter.prototype.datePipe;
+}
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ3VzdG9tTmdiRGF0ZVBhcnNlckZvcm1hdHRlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci8iLCJzb3VyY2VzIjpbImxpYi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9DdXN0b21OZ2JEYXRlUGFyc2VyRm9ybWF0dGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE9BQU8sRUFBRSxzQkFBc0IsRUFBaUIsTUFBTSw0QkFBNEIsQ0FBQztBQUNuRixPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDM0MsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQztJQUNrRCx3REFBc0I7SUFFdEU7UUFBQSxZQUNFLGlCQUFPLFNBQ1I7UUFIRCxjQUFRLEdBQUcsSUFBSSxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUM7O0lBR2pDLENBQUM7Ozs7O0lBQ0QsNkNBQU07Ozs7SUFBTixVQUFPLElBQW1CO1FBQ3hCLElBQUksSUFBSSxLQUFLLElBQUksRUFBRTtZQUNqQixPQUFPLEVBQUUsQ0FBQztTQUNYO1FBQ0QsSUFBSTtZQUNGLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsVUFBVSxDQUFDLENBQUM7U0FDM0Y7UUFBQyxPQUFPLENBQUMsRUFBRTtZQUNWLE9BQU8sRUFBRSxDQUFDO1NBQ1g7SUFDSCxDQUFDOzs7OztJQUNELDRDQUFLOzs7O0lBQUwsVUFBTSxLQUFhOztZQUNiLFNBQXdCO1FBQzVCLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDVixTQUFTLEdBQUcsSUFBSSxDQUFDO1NBQ2xCO2FBQU07WUFDTCxJQUFJOztvQkFDRSxTQUFTLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUM7Z0JBQ2xFLFNBQVMsR0FBRyxFQUFFLElBQUksRUFBRSxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsS0FBSyxFQUFFLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7YUFDMUc7WUFBQyxPQUFPLENBQUMsRUFBRTtnQkFDVixTQUFTLEdBQUcsSUFBSSxDQUFDO2FBQ2xCO1NBQ0Y7UUFDRCxPQUFPLFNBQVMsQ0FBQztJQUNuQixDQUFDOztnQkE3QkYsVUFBVTs7OztJQThCWCxtQ0FBQztDQUFBLEFBOUJELENBQ2tELHNCQUFzQixHQTZCdkU7U0E3QlksNEJBQTRCOzs7SUFDdkMsZ0RBQWlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdiRGF0ZVBhcnNlckZvcm1hdHRlciwgTmdiRGF0ZVN0cnVjdCB9IGZyb20gJ0BuZy1ib290c3RyYXAvbmctYm9vdHN0cmFwJztcclxuaW1wb3J0IHsgRGF0ZVBpcGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBDdXN0b21OZ2JEYXRlUGFyc2VyRm9ybWF0dGVyIGV4dGVuZHMgTmdiRGF0ZVBhcnNlckZvcm1hdHRlciB7XHJcbiAgZGF0ZVBpcGUgPSBuZXcgRGF0ZVBpcGUoJ2VuLVVTJyk7XHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICBzdXBlcigpO1xyXG4gIH1cclxuICBmb3JtYXQoZGF0ZTogTmdiRGF0ZVN0cnVjdCk6IHN0cmluZyB7XHJcbiAgICBpZiAoZGF0ZSA9PT0gbnVsbCkge1xyXG4gICAgICByZXR1cm4gJyc7XHJcbiAgICB9XHJcbiAgICB0cnkge1xyXG4gICAgICByZXR1cm4gdGhpcy5kYXRlUGlwZS50cmFuc2Zvcm0obmV3IERhdGUoZGF0ZS55ZWFyLCBkYXRlLm1vbnRoIC0gMSwgZGF0ZS5kYXkpLCAnZC9NL3l5eXknKTtcclxuICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgcmV0dXJuICcnO1xyXG4gICAgfVxyXG4gIH1cclxuICBwYXJzZSh2YWx1ZTogc3RyaW5nKTogTmdiRGF0ZVN0cnVjdCB7XHJcbiAgICBsZXQgcmV0dXJuVmFsOiBOZ2JEYXRlU3RydWN0O1xyXG4gICAgaWYgKCF2YWx1ZSkge1xyXG4gICAgICByZXR1cm5WYWwgPSBudWxsO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBsZXQgZGF0ZVBhcnRzID0gdGhpcy5kYXRlUGlwZS50cmFuc2Zvcm0odmFsdWUsICdNLWQteScpLnNwbGl0KCctJyk7XHJcbiAgICAgICAgcmV0dXJuVmFsID0geyB5ZWFyOiBwYXJzZUludChkYXRlUGFydHNbMl0pLCBtb250aDogcGFyc2VJbnQoZGF0ZVBhcnRzWzBdKSwgZGF5OiBwYXJzZUludChkYXRlUGFydHNbMV0pIH07XHJcbiAgICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICByZXR1cm5WYWwgPSBudWxsO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gcmV0dXJuVmFsO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/IslamicI18n.js b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/IslamicI18n.js
index ce752a6..9d42e69 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/IslamicI18n.js
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/IslamicI18n.js
@@ -7,7 +7,8 @@ import * as tslib_1 from "tslib";
 import { Injectable } from '@angular/core';
 import { NgbDatepickerI18n } from '@ng-bootstrap/ng-bootstrap';
 /** @type {?} */
-var WEEKDAYS = ['أحد', 'إثنين', 'ثلاثاء', 'أربعاء', 'خميس', 'جمعة', 'سبت'];
+import * as ɵngcc0 from '@angular/core';
+var WEEKDAYS = ['إ', 'ث', 'ر', 'خ', 'ج', 'س', 'ح'];
 /** @type {?} */
 var MONTHS = ['محرم', 'صفر', 'ربيع الأول', 'ربيع الآخر', 'جمادى الأولى', 'جمادى الآخرة', 'رجب', 'شعبان', 'رمضان', 'شوال',
     'ذو القعدة', 'ذو الحجة'];
@@ -60,10 +61,13 @@ var IslamicI18n = /** @class */ (function (_super) {
     function (date) {
         return date.day + "-" + date.month + "-" + date.year;
     };
-    IslamicI18n.decorators = [
-        { type: Injectable }
-    ];
+IslamicI18n.ɵfac = function IslamicI18n_Factory(t) { return ɵIslamicI18n_BaseFactory(t || IslamicI18n); };
+IslamicI18n.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: IslamicI18n, factory: function (t) { return IslamicI18n.ɵfac(t); } });
+var ɵIslamicI18n_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(IslamicI18n);
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IslamicI18n, [{
+        type: Injectable
+    }], null, null); })();
     return IslamicI18n;
 }(NgbDatepickerI18n));
 export { IslamicI18n };
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSXNsYW1pY0kxOG4uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvIiwic291cmNlcyI6WyJsaWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvSXNsYW1pY0kxOG4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsaUJBQWlCLEVBQWlCLE1BQU0sNEJBQTRCLENBQUM7O0lBRXhFLFFBQVEsR0FBRyxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLEtBQUssQ0FBQzs7SUFDdEUsTUFBTSxHQUFHLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLGNBQWMsRUFBRSxjQUFjLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTTtJQUN4SCxXQUFXLEVBQUUsVUFBVSxDQUFDO0FBRTFCO0lBQ2lDLHVDQUFpQjtJQURsRDs7SUFrQkEsQ0FBQzs7Ozs7SUFmQyx5Q0FBbUI7Ozs7SUFBbkIsVUFBb0IsT0FBZTtRQUNqQyxPQUFPLFFBQVEsQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDL0IsQ0FBQzs7Ozs7SUFFRCx1Q0FBaUI7Ozs7SUFBakIsVUFBa0IsS0FBYTtRQUM3QixPQUFPLE1BQU0sQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDM0IsQ0FBQzs7Ozs7SUFFRCxzQ0FBZ0I7Ozs7SUFBaEIsVUFBaUIsS0FBYTtRQUM1QixPQUFPLE1BQU0sQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDM0IsQ0FBQzs7Ozs7SUFFRCxxQ0FBZTs7OztJQUFmLFVBQWdCLElBQW1CO1FBQ2pDLE9BQVUsSUFBSSxDQUFDLEdBQUcsU0FBSSxJQUFJLENBQUMsS0FBSyxTQUFJLElBQUksQ0FBQyxJQUFNLENBQUM7SUFDbEQsQ0FBQzs7Z0JBakJGLFVBQVU7O0lBa0JYLGtCQUFDO0NBQUEsQUFsQkQsQ0FDaUMsaUJBQWlCLEdBaUJqRDtTQWpCWSxXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBOZ2JEYXRlcGlja2VySTE4biwgTmdiRGF0ZVN0cnVjdCB9IGZyb20gJ0BuZy1ib290c3RyYXAvbmctYm9vdHN0cmFwJztcclxuXHJcbmNvbnN0IFdFRUtEQVlTID0gWyfYo9it2K8nLCAn2KXYq9mG2YrZhicsICfYq9mE2KfYq9in2KEnLCAn2KPYsdio2LnYp9ihJywgJ9iu2YXZitizJywgJ9is2YXYudipJywgJ9iz2KjYqiddO1xyXG5jb25zdCBNT05USFMgPSBbJ9mF2K3YsdmFJywgJ9i12YHYsScsICfYsdio2YrYuSDYp9mE2KPZiNmEJywgJ9ix2KjZiti5INin2YTYotiu2LEnLCAn2KzZhdin2K/ZiSDYp9mE2KPZiNmE2YknLCAn2KzZhdin2K/ZiSDYp9mE2KLYrtix2KknLCAn2LHYrNioJywgJ9i02LnYqNin2YYnLCAn2LHZhdi22KfZhicsICfYtNmI2KfZhCcsXHJcbiAgJ9iw2Ygg2KfZhNmC2LnYr9ipJywgJ9iw2Ygg2KfZhNit2KzYqSddO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgSXNsYW1pY0kxOG4gZXh0ZW5kcyBOZ2JEYXRlcGlja2VySTE4biB7XHJcblxyXG4gIGdldFdlZWtkYXlTaG9ydE5hbWUod2Vla2RheTogbnVtYmVyKSB7XHJcbiAgICByZXR1cm4gV0VFS0RBWVNbd2Vla2RheSAtIDFdO1xyXG4gIH1cclxuXHJcbiAgZ2V0TW9udGhTaG9ydE5hbWUobW9udGg6IG51bWJlcikge1xyXG4gICAgcmV0dXJuIE1PTlRIU1ttb250aCAtIDFdO1xyXG4gIH1cclxuXHJcbiAgZ2V0TW9udGhGdWxsTmFtZShtb250aDogbnVtYmVyKSB7XHJcbiAgICByZXR1cm4gTU9OVEhTW21vbnRoIC0gMV07XHJcbiAgfVxyXG5cclxuICBnZXREYXlBcmlhTGFiZWwoZGF0ZTogTmdiRGF0ZVN0cnVjdCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gYCR7ZGF0ZS5kYXl9LSR7ZGF0ZS5tb250aH0tJHtkYXRlLnllYXJ9YDtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSXNsYW1pY0kxOG4uanMiLCJzb3VyY2VzIjpbIm5neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9saWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvSXNsYW1pY0kxOG4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsaUJBQWlCLEVBQWlCLE1BQU0sNEJBQTRCLENBQUM7QUFDOUU7O0FBQ2dCLElBQVYsUUFBUSxHQUFHLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsS0FBSyxDQUFDO0FBQzVFO0FBQWlCLElBQVgsTUFBTSxHQUFHLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLGNBQWMsRUFBRSxjQUFjLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTTtBQUMxSCxJQUFFLFdBQVcsRUFBRSxVQUFVLENBQUM7QUFFMUI7QUFDdUMsSUFBTix1Q0FBaUI7QUFBQyxJQURuRDtBQUNXO0FBRW1CLElBZTlCLENBQUM7QUFDRDtBQUFRO0FBQTBCO0FBQW1CO0FBQVEsSUFoQjNELHlDQUFtQjtBQUFPO0FBQ2Y7QUFBbUI7QUFHL0IsSUFKQyxVQUFvQixPQUFlO0FBQ3JDLFFBQUksT0FBTyxRQUFRLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxDQUFDO0FBQ2pDLElBQUUsQ0FBQztBQUVIO0FBQVE7QUFBd0I7QUFDbEI7QUFBUSxJQURwQix1Q0FBaUI7QUFBTztBQUNiO0FBQ1g7QUFFRyxJQUpILFVBQWtCLEtBQWE7QUFDakMsUUFBSSxPQUFPLE1BQU0sQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUM7QUFDN0IsSUFBRSxDQUFDO0FBRUg7QUFBUTtBQUF3QjtBQUNqQjtBQUFRLElBRHJCLHNDQUFnQjtBQUFPO0FBQ1o7QUFDWDtBQUVHLElBSkgsVUFBaUIsS0FBYTtBQUNoQyxRQUFJLE9BQU8sTUFBTSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQztBQUM3QixJQUFFLENBQUM7QUFFSDtBQUFRO0FBQXVCO0FBQzlCO0FBQVEsSUFEUCxxQ0FBZTtBQUFPO0FBQXVCO0FBQzlCO0FBQVEsSUFEdkIsVUFBZ0IsSUFBbUI7QUFBSSxRQUNyQyxPQUFVLElBQUksQ0FBQyxHQUFHLFNBQUksSUFBSSxDQUFDLEtBQUssU0FBSSxJQUFJLENBQUMsSUFBTSxDQUFDO0FBQ3BELElBQUUsQ0FBQzsrQ0FqQkYsVUFBVTs7Ozs7MEJBQ0w7QUFBQyxJQWlCUCxrQkFBQztBQUNBLENBREEsQUFsQkQsQ0FDaUMsaUJBQWlCLEdBaUJqRDs7QUF6QkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQ0EsQUFBQSxBQURBLEFBa0JBLEFBQUEsQUFmQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFqQkEsQUFBQSxBQWtCQSxBQUFBLEFBQUEsQUFsQkEsQUFDQSxBQUFBLEFBaUJBLEFBakJBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE5nYkRhdGVwaWNrZXJJMThuLCBOZ2JEYXRlU3RydWN0IH0gZnJvbSAnQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAnO1xyXG5cclxuY29uc3QgV0VFS0RBWVMgPSBbJ9ij2K3YrycsICfYpdir2YbZitmGJywgJ9ir2YTYp9ir2KfYoScsICfYo9ix2KjYudin2KEnLCAn2K7ZhdmK2LMnLCAn2KzZhdi52KknLCAn2LPYqNiqJ107XHJcbmNvbnN0IE1PTlRIUyA9IFsn2YXYrdix2YUnLCAn2LXZgdixJywgJ9ix2KjZiti5INin2YTYo9mI2YQnLCAn2LHYqNmK2Lkg2KfZhNii2K7YsScsICfYrNmF2KfYr9mJINin2YTYo9mI2YTZiScsICfYrNmF2KfYr9mJINin2YTYotiu2LHYqScsICfYsdis2KgnLCAn2LTYudio2KfZhicsICfYsdmF2LbYp9mGJywgJ9i02YjYp9mEJyxcclxuICAn2LDZiCDYp9mE2YLYudiv2KknLCAn2LDZiCDYp9mE2K3YrNipJ107XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBJc2xhbWljSTE4biBleHRlbmRzIE5nYkRhdGVwaWNrZXJJMThuIHtcclxuXHJcbiAgZ2V0V2Vla2RheVNob3J0TmFtZSh3ZWVrZGF5OiBudW1iZXIpIHtcclxuICAgIHJldHVybiBXRUVLREFZU1t3ZWVrZGF5IC0gMV07XHJcbiAgfVxyXG5cclxuICBnZXRNb250aFNob3J0TmFtZShtb250aDogbnVtYmVyKSB7XHJcbiAgICByZXR1cm4gTU9OVEhTW21vbnRoIC0gMV07XHJcbiAgfVxyXG5cclxuICBnZXRNb250aEZ1bGxOYW1lKG1vbnRoOiBudW1iZXIpIHtcclxuICAgIHJldHVybiBNT05USFNbbW9udGggLSAxXTtcclxuICB9XHJcblxyXG4gIGdldERheUFyaWFMYWJlbChkYXRlOiBOZ2JEYXRlU3RydWN0KTogc3RyaW5nIHtcclxuICAgIHJldHVybiBgJHtkYXRlLmRheX0tJHtkYXRlLm1vbnRofS0ke2RhdGUueWVhcn1gO1xyXG4gIH1cclxufVxyXG4iXX0=
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/IslamicI18n.js.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/IslamicI18n.js.__ivy_ngcc_bak
new file mode 100644
index 0000000..ce752a6
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/IslamicI18n.js.__ivy_ngcc_bak
@@ -0,0 +1,69 @@
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/hijri-gregorian-datepicker/IslamicI18n.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+import * as tslib_1 from "tslib";
+import { Injectable } from '@angular/core';
+import { NgbDatepickerI18n } from '@ng-bootstrap/ng-bootstrap';
+/** @type {?} */
+var WEEKDAYS = ['أحد', 'إثنين', 'ثلاثاء', 'أربعاء', 'خميس', 'جمعة', 'سبت'];
+/** @type {?} */
+var MONTHS = ['محرم', 'صفر', 'ربيع الأول', 'ربيع الآخر', 'جمادى الأولى', 'جمادى الآخرة', 'رجب', 'شعبان', 'رمضان', 'شوال',
+    'ذو القعدة', 'ذو الحجة'];
+var IslamicI18n = /** @class */ (function (_super) {
+    tslib_1.__extends(IslamicI18n, _super);
+    function IslamicI18n() {
+        return _super !== null && _super.apply(this, arguments) || this;
+    }
+    /**
+     * @param {?} weekday
+     * @return {?}
+     */
+    IslamicI18n.prototype.getWeekdayShortName = /**
+     * @param {?} weekday
+     * @return {?}
+     */
+    function (weekday) {
+        return WEEKDAYS[weekday - 1];
+    };
+    /**
+     * @param {?} month
+     * @return {?}
+     */
+    IslamicI18n.prototype.getMonthShortName = /**
+     * @param {?} month
+     * @return {?}
+     */
+    function (month) {
+        return MONTHS[month - 1];
+    };
+    /**
+     * @param {?} month
+     * @return {?}
+     */
+    IslamicI18n.prototype.getMonthFullName = /**
+     * @param {?} month
+     * @return {?}
+     */
+    function (month) {
+        return MONTHS[month - 1];
+    };
+    /**
+     * @param {?} date
+     * @return {?}
+     */
+    IslamicI18n.prototype.getDayAriaLabel = /**
+     * @param {?} date
+     * @return {?}
+     */
+    function (date) {
+        return date.day + "-" + date.month + "-" + date.year;
+    };
+    IslamicI18n.decorators = [
+        { type: Injectable }
+    ];
+    return IslamicI18n;
+}(NgbDatepickerI18n));
+export { IslamicI18n };
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSXNsYW1pY0kxOG4uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvIiwic291cmNlcyI6WyJsaWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvSXNsYW1pY0kxOG4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsaUJBQWlCLEVBQWlCLE1BQU0sNEJBQTRCLENBQUM7O0lBRXhFLFFBQVEsR0FBRyxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLEtBQUssQ0FBQzs7SUFDdEUsTUFBTSxHQUFHLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLGNBQWMsRUFBRSxjQUFjLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTTtJQUN4SCxXQUFXLEVBQUUsVUFBVSxDQUFDO0FBRTFCO0lBQ2lDLHVDQUFpQjtJQURsRDs7SUFrQkEsQ0FBQzs7Ozs7SUFmQyx5Q0FBbUI7Ozs7SUFBbkIsVUFBb0IsT0FBZTtRQUNqQyxPQUFPLFFBQVEsQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDL0IsQ0FBQzs7Ozs7SUFFRCx1Q0FBaUI7Ozs7SUFBakIsVUFBa0IsS0FBYTtRQUM3QixPQUFPLE1BQU0sQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDM0IsQ0FBQzs7Ozs7SUFFRCxzQ0FBZ0I7Ozs7SUFBaEIsVUFBaUIsS0FBYTtRQUM1QixPQUFPLE1BQU0sQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDM0IsQ0FBQzs7Ozs7SUFFRCxxQ0FBZTs7OztJQUFmLFVBQWdCLElBQW1CO1FBQ2pDLE9BQVUsSUFBSSxDQUFDLEdBQUcsU0FBSSxJQUFJLENBQUMsS0FBSyxTQUFJLElBQUksQ0FBQyxJQUFNLENBQUM7SUFDbEQsQ0FBQzs7Z0JBakJGLFVBQVU7O0lBa0JYLGtCQUFDO0NBQUEsQUFsQkQsQ0FDaUMsaUJBQWlCLEdBaUJqRDtTQWpCWSxXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBOZ2JEYXRlcGlja2VySTE4biwgTmdiRGF0ZVN0cnVjdCB9IGZyb20gJ0BuZy1ib290c3RyYXAvbmctYm9vdHN0cmFwJztcclxuXHJcbmNvbnN0IFdFRUtEQVlTID0gWyfYo9it2K8nLCAn2KXYq9mG2YrZhicsICfYq9mE2KfYq9in2KEnLCAn2KPYsdio2LnYp9ihJywgJ9iu2YXZitizJywgJ9is2YXYudipJywgJ9iz2KjYqiddO1xyXG5jb25zdCBNT05USFMgPSBbJ9mF2K3YsdmFJywgJ9i12YHYsScsICfYsdio2YrYuSDYp9mE2KPZiNmEJywgJ9ix2KjZiti5INin2YTYotiu2LEnLCAn2KzZhdin2K/ZiSDYp9mE2KPZiNmE2YknLCAn2KzZhdin2K/ZiSDYp9mE2KLYrtix2KknLCAn2LHYrNioJywgJ9i02LnYqNin2YYnLCAn2LHZhdi22KfZhicsICfYtNmI2KfZhCcsXHJcbiAgJ9iw2Ygg2KfZhNmC2LnYr9ipJywgJ9iw2Ygg2KfZhNit2KzYqSddO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgSXNsYW1pY0kxOG4gZXh0ZW5kcyBOZ2JEYXRlcGlja2VySTE4biB7XHJcblxyXG4gIGdldFdlZWtkYXlTaG9ydE5hbWUod2Vla2RheTogbnVtYmVyKSB7XHJcbiAgICByZXR1cm4gV0VFS0RBWVNbd2Vla2RheSAtIDFdO1xyXG4gIH1cclxuXHJcbiAgZ2V0TW9udGhTaG9ydE5hbWUobW9udGg6IG51bWJlcikge1xyXG4gICAgcmV0dXJuIE1PTlRIU1ttb250aCAtIDFdO1xyXG4gIH1cclxuXHJcbiAgZ2V0TW9udGhGdWxsTmFtZShtb250aDogbnVtYmVyKSB7XHJcbiAgICByZXR1cm4gTU9OVEhTW21vbnRoIC0gMV07XHJcbiAgfVxyXG5cclxuICBnZXREYXlBcmlhTGFiZWwoZGF0ZTogTmdiRGF0ZVN0cnVjdCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gYCR7ZGF0ZS5kYXl9LSR7ZGF0ZS5tb250aH0tJHtkYXRlLnllYXJ9YDtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/date-formatter.service.js b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/date-formatter.service.js
index ccc57fb..b941eb0 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/date-formatter.service.js
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/date-formatter.service.js
@@ -7,6 +7,8 @@ import { Injectable } from '@angular/core';
 import { NgbDateParserFormatter, NgbDate } from '@ng-bootstrap/ng-bootstrap';
 import * as momentjs from 'moment';
 /** @type {?} */
+import * as ɵngcc0 from '@angular/core';
+import * as ɵngcc1 from '@ng-bootstrap/ng-bootstrap';
 var moment = momentjs;
 import * as moment_ from 'moment-hijri';
 /** @type {?} */
@@ -150,13 +152,15 @@ var DateFormatterService = /** @class */ (function () {
         var todayGregorian = moment().locale('en').format('YYYY/M/D');
         return this.ToGregorianDateStruct(todayGregorian, 'YYYY/M/D');
     };
-    DateFormatterService.decorators = [
-        { type: Injectable }
-    ];
     /** @nocollapse */
     DateFormatterService.ctorParameters = function () { return [
         { type: NgbDateParserFormatter }
     ]; };
+DateFormatterService.ɵfac = function DateFormatterService_Factory(t) { return new (t || DateFormatterService)(ɵngcc0.ɵɵinject(ɵngcc1.NgbDateParserFormatter)); };
+DateFormatterService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: DateFormatterService, factory: function (t) { return DateFormatterService.ɵfac(t); } });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DateFormatterService, [{
+        type: Injectable
+    }], function () { return [{ type: ɵngcc1.NgbDateParserFormatter }]; }, null); })();
     return DateFormatterService;
 }());
 export { DateFormatterService };
@@ -167,4 +171,4 @@ if (false) {
      */
     DateFormatterService.prototype.parserFormatter;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1mb3JtYXR0ZXIuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci8iLCJzb3VyY2VzIjpbImxpYi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9kYXRlLWZvcm1hdHRlci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQWlCLHNCQUFzQixFQUFFLE9BQU8sRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRTVGLE9BQU8sS0FBSyxRQUFRLE1BQU0sUUFBUSxDQUFDOztJQUM3QixNQUFNLEdBQUcsUUFBUTtBQUd2QixPQUFPLEtBQUssT0FBTyxNQUFNLGNBQWMsQ0FBQzs7SUFDbEMsV0FBVyxHQUFHLE9BQU87QUFFM0I7SUFHRSw4QkFBb0IsZUFBdUM7UUFBdkMsb0JBQWUsR0FBZixlQUFlLENBQXdCO0lBQUksQ0FBQzs7Ozs7SUFFOUQsdUNBQVE7Ozs7SUFBUixVQUFTLElBQW1COztZQUNsQixPQUFPLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDO1FBQ2pELE9BQU8sT0FBTyxDQUFDO0lBQ25CLENBQUM7Ozs7OztJQUVELGdEQUFpQjs7Ozs7SUFBakIsVUFBa0IsU0FBaUIsRUFBRSxNQUFjOztZQUUzQyxlQUFlLEdBQUksV0FBVyxDQUFDLFNBQVMsRUFBRyxNQUFNLENBQUM7OztZQUVsRCxHQUFHLEdBQUcsZUFBZSxDQUFDLEtBQUssRUFBRTs7WUFDN0IsS0FBSyxHQUFHLENBQUMsZUFBZSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUM7O1lBQ3JDLElBQUksR0FBRyxlQUFlLENBQUMsS0FBSyxFQUFFOztZQUU5QixNQUFNLEdBQUksSUFBSSxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLENBQUMsR0FBRyxDQUFDO1FBQy9DLE9BQU8sTUFBTSxDQUFDO0lBQ2pCLENBQUM7Ozs7OztJQUdBLG9EQUFxQjs7Ozs7SUFBckIsVUFBc0IsYUFBcUIsRUFBRSxNQUFjOztZQUVuRCxVQUFVLEdBQUcsTUFBTSxDQUFDLGFBQWEsRUFBRSxNQUFNLENBQUM7OztZQUUxQyxHQUFHLEdBQUcsVUFBVSxDQUFDLElBQUksRUFBRTs7WUFDdkIsS0FBSyxHQUFHLENBQUMsVUFBVSxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUM7O1lBQy9CLElBQUksR0FBRyxVQUFVLENBQUMsSUFBSSxFQUFFOztZQUV4QixNQUFNLEdBQUcsSUFBSSxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxHQUFHLENBQUM7UUFDL0MsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQzs7Ozs7SUFFRCxzQ0FBTzs7OztJQUFQLFVBQVEsSUFBbUI7UUFDdkIsSUFBSSxDQUFDLElBQUksRUFBRTtZQUNQLE9BQU8sSUFBSSxDQUFDO1NBQ2Y7O1lBQ0ssT0FBTyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDOztZQUU3QixVQUFVLEdBQUcsV0FBVyxDQUFDLE9BQU8sRUFBRSxVQUFVLENBQUM7O1lBRTdDLEdBQUcsR0FBRyxVQUFVLENBQUMsS0FBSyxFQUFFOztZQUN4QixLQUFLLEdBQUcsQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQzs7WUFDaEMsSUFBSSxHQUFHLFVBQVUsQ0FBQyxLQUFLLEVBQUU7O1lBRXpCLE1BQU0sR0FBSSxJQUFJLE9BQU8sQ0FBQyxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsQ0FBQyxHQUFHLENBQUM7UUFDL0MsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQzs7Ozs7SUFFRCwwQ0FBVzs7OztJQUFYLFVBQVksSUFBbUI7UUFDM0IsSUFBSSxDQUFDLElBQUksRUFBRTtZQUNQLE9BQU8sSUFBSSxDQUFDO1NBQ2Y7O1lBRUssT0FBTyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDOztZQUU3QixVQUFVLEdBQUcsV0FBVyxDQUFDLE9BQU8sRUFBRSxhQUFhLENBQUM7O1lBRWhELEdBQUcsR0FBRyxVQUFVLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUM7O1lBQ3pDLEtBQUssR0FBRyxVQUFVLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUM7O1lBQzNDLElBQUksR0FBRyxVQUFVLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUM7O1lBRTFDLE1BQU0sR0FBSSxJQUFJLE9BQU8sQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDLEdBQUcsQ0FBQztRQUNoRCxPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDOzs7O0lBRUQsNENBQWE7OztJQUFiOztZQUVRLFVBQVUsR0FBRyxXQUFXLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQztRQUVuRSxPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxVQUFVLEVBQUUsYUFBYSxDQUFDLENBQUU7SUFFNUQsQ0FBQzs7OztJQUVELGdEQUFpQjs7O0lBQWpCOztZQUVRLGNBQWMsR0FBRyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQztRQUUvRCxPQUFPLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxjQUFjLEVBQUUsVUFBVSxDQUFDLENBQUU7SUFDakUsQ0FBQzs7Z0JBakZKLFVBQVU7Ozs7Z0JBVGEsc0JBQXNCOztJQTRGOUMsMkJBQUM7Q0FBQSxBQW5GRCxJQW1GQztTQWxGWSxvQkFBb0I7Ozs7OztJQUVuQiwrQ0FBK0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE5nYkRhdGVTdHJ1Y3QsIE5nYkRhdGVQYXJzZXJGb3JtYXR0ZXIsIE5nYkRhdGUgfSBmcm9tICdAbmctYm9vdHN0cmFwL25nLWJvb3RzdHJhcCc7XHJcblxyXG5pbXBvcnQgKiBhcyBtb21lbnRqcyBmcm9tICdtb21lbnQnO1xyXG5jb25zdCBtb21lbnQgPSBtb21lbnRqcztcclxuXHJcblxyXG5pbXBvcnQgKiBhcyBtb21lbnRfIGZyb20gJ21vbWVudC1oaWpyaSc7XHJcbmNvbnN0IG1vbWVudEhpanJpID0gbW9tZW50XztcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIERhdGVGb3JtYXR0ZXJTZXJ2aWNlIHtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBwYXJzZXJGb3JtYXR0ZXI6IE5nYkRhdGVQYXJzZXJGb3JtYXR0ZXIpIHsgfVxyXG5cclxuICAgIFRvU3RyaW5nKGRhdGU6IE5nYkRhdGVTdHJ1Y3QpOiBzdHJpbmcge1xyXG4gICAgICAgIGNvbnN0IGRhdGVTdHIgPSB0aGlzLnBhcnNlckZvcm1hdHRlci5mb3JtYXQoZGF0ZSk7XHJcbiAgICAgICAgcmV0dXJuIGRhdGVTdHI7XHJcbiAgICB9XHJcblxyXG4gICAgVG9IaWpyaURhdGVTdHJ1Y3QoaGlqcmlEYXRlOiBzdHJpbmcsIGZvcm1hdDogc3RyaW5nKTogTmdiRGF0ZSAge1xyXG5cclxuICAgICAgY29uc3QgaGlqcmlNb21lbnREYXRlID0gIG1vbWVudEhpanJpKGhpanJpRGF0ZSAsIGZvcm1hdCk7IC8vIFBhcnNlIGEgSGlqcmkgZGF0ZSBiYXNlZCBvbiBmb3JtYXQuXHJcblxyXG4gICAgICBjb25zdCBkYXkgPSBoaWpyaU1vbWVudERhdGUuaURhdGUoKTtcclxuICAgICAgY29uc3QgbW9udGggPSAraGlqcmlNb21lbnREYXRlLmlNb250aCgpICsgMSA7XHJcbiAgICAgIGNvbnN0IHllYXIgPSBoaWpyaU1vbWVudERhdGUuaVllYXIoKTtcclxuXHJcbiAgICAgIGNvbnN0IG5nRGF0ZSA9ICBuZXcgTmdiRGF0ZSgreWVhciwgbW9udGgsICtkYXkpO1xyXG4gICAgICByZXR1cm4gbmdEYXRlO1xyXG4gICB9XHJcblxyXG5cclxuICAgIFRvR3JlZ29yaWFuRGF0ZVN0cnVjdChncmVnb3JpYW5EYXRlOiBzdHJpbmcsIGZvcm1hdDogc3RyaW5nKTogTmdiRGF0ZSB7XHJcblxyXG4gICAgICBjb25zdCBtb21lbnREYXRlID0gbW9tZW50KGdyZWdvcmlhbkRhdGUsIGZvcm1hdCk7IC8vIFBhcnNlIGEgR3JlZ29yaWFuIGRhdGUgYmFzZWQgb24gZm9ybWF0LlxyXG5cclxuICAgICAgY29uc3QgZGF5ID0gbW9tZW50RGF0ZS5kYXRlKCk7XHJcbiAgICAgIGNvbnN0IG1vbnRoID0gK21vbWVudERhdGUubW9udGgoKSArIDE7XHJcbiAgICAgIGNvbnN0IHllYXIgPSBtb21lbnREYXRlLnllYXIoKTtcclxuXHJcbiAgICAgIGNvbnN0IG5nRGF0ZSA9IG5ldyBOZ2JEYXRlKCt5ZWFyLCArbW9udGgsICtkYXkpO1xyXG4gICAgICByZXR1cm4gbmdEYXRlO1xyXG4gICAgfVxyXG5cclxuICAgIFRvSGlqcmkoZGF0ZTogTmdiRGF0ZVN0cnVjdCk6IE5nYkRhdGVTdHJ1Y3Qge1xyXG4gICAgICAgIGlmICghZGF0ZSkge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgZGF0ZVN0ciA9IHRoaXMuVG9TdHJpbmcoZGF0ZSk7XHJcblxyXG4gICAgICAgIGNvbnN0IG1vbWVudERhdGUgPSBtb21lbnRIaWpyaShkYXRlU3RyLCAnRC9NL1lZWVknKTtcclxuXHJcbiAgICAgICAgY29uc3QgZGF5ID0gbW9tZW50RGF0ZS5pRGF0ZSgpO1xyXG4gICAgICAgIGNvbnN0IG1vbnRoID0gK21vbWVudERhdGUuaU1vbnRoKCkgKyAxIDtcclxuICAgICAgICBjb25zdCB5ZWFyID0gbW9tZW50RGF0ZS5pWWVhcigpO1xyXG5cclxuICAgICAgICBjb25zdCBuZ0RhdGUgPSAgbmV3IE5nYkRhdGUoK3llYXIsIG1vbnRoLCArZGF5KTtcclxuICAgICAgICByZXR1cm4gbmdEYXRlO1xyXG4gICAgfVxyXG5cclxuICAgIFRvR3JlZ29yaWFuKGRhdGU6IE5nYkRhdGVTdHJ1Y3QpIHtcclxuICAgICAgICBpZiAoIWRhdGUpIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBkYXRlU3RyID0gdGhpcy5Ub1N0cmluZyhkYXRlKTtcclxuXHJcbiAgICAgICAgY29uc3QgbW9tZW50RGF0ZSA9IG1vbWVudEhpanJpKGRhdGVTdHIsICdpRC9pTS9pWVlZWScpO1xyXG5cclxuICAgICAgICBjb25zdCBkYXkgPSBtb21lbnREYXRlLmxvY2FsZSgnZW4nKS5mb3JtYXQoJ0QnKTtcclxuICAgICAgICBjb25zdCBtb250aCA9IG1vbWVudERhdGUubG9jYWxlKCdlbicpLmZvcm1hdCgnTScpIDtcclxuICAgICAgICBjb25zdCB5ZWFyID0gbW9tZW50RGF0ZS5sb2NhbGUoJ2VuJykuZm9ybWF0KCdZJyk7XHJcblxyXG4gICAgICAgIGNvbnN0IG5nRGF0ZSA9ICBuZXcgTmdiRGF0ZSgreWVhciwgK21vbnRoLCArZGF5KTtcclxuICAgICAgICByZXR1cm4gbmdEYXRlO1xyXG4gICAgfVxyXG5cclxuICAgIEdldFRvZGF5SGlqcmkoKTogTmdiRGF0ZVN0cnVjdCB7XHJcblxyXG4gICAgICBjb25zdCB0b2RheUhpanJpID0gbW9tZW50SGlqcmkoKS5sb2NhbGUoJ2VuJykuZm9ybWF0KCdpWVlZWS9pTS9pRCcpO1xyXG5cclxuICAgICAgcmV0dXJuIHRoaXMuVG9IaWpyaURhdGVTdHJ1Y3QodG9kYXlIaWpyaSwgJ2lZWVlZL2lNL2lEJykgO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBHZXRUb2RheUdyZWdvcmlhbigpOiBOZ2JEYXRlU3RydWN0IHtcclxuXHJcbiAgICAgIGNvbnN0IHRvZGF5R3JlZ29yaWFuID0gbW9tZW50KCkubG9jYWxlKCdlbicpLmZvcm1hdCgnWVlZWS9NL0QnKTtcclxuXHJcbiAgICAgIHJldHVybiB0aGlzLlRvR3JlZ29yaWFuRGF0ZVN0cnVjdCh0b2RheUdyZWdvcmlhbiwgJ1lZWVkvTS9EJykgO1xyXG4gICAgfVxyXG5cclxufVxyXG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;charset=utf-8;base64,
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/date-formatter.service.js.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/date-formatter.service.js.__ivy_ngcc_bak
new file mode 100644
index 0000000..ccc57fb
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/date-formatter.service.js.__ivy_ngcc_bak
@@ -0,0 +1,170 @@
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/hijri-gregorian-datepicker/date-formatter.service.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+import { Injectable } from '@angular/core';
+import { NgbDateParserFormatter, NgbDate } from '@ng-bootstrap/ng-bootstrap';
+import * as momentjs from 'moment';
+/** @type {?} */
+var moment = momentjs;
+import * as moment_ from 'moment-hijri';
+/** @type {?} */
+var momentHijri = moment_;
+var DateFormatterService = /** @class */ (function () {
+    function DateFormatterService(parserFormatter) {
+        this.parserFormatter = parserFormatter;
+    }
+    /**
+     * @param {?} date
+     * @return {?}
+     */
+    DateFormatterService.prototype.ToString = /**
+     * @param {?} date
+     * @return {?}
+     */
+    function (date) {
+        /** @type {?} */
+        var dateStr = this.parserFormatter.format(date);
+        return dateStr;
+    };
+    /**
+     * @param {?} hijriDate
+     * @param {?} format
+     * @return {?}
+     */
+    DateFormatterService.prototype.ToHijriDateStruct = /**
+     * @param {?} hijriDate
+     * @param {?} format
+     * @return {?}
+     */
+    function (hijriDate, format) {
+        /** @type {?} */
+        var hijriMomentDate = momentHijri(hijriDate, format);
+        // Parse a Hijri date based on format.
+        /** @type {?} */
+        var day = hijriMomentDate.iDate();
+        /** @type {?} */
+        var month = +hijriMomentDate.iMonth() + 1;
+        /** @type {?} */
+        var year = hijriMomentDate.iYear();
+        /** @type {?} */
+        var ngDate = new NgbDate(+year, month, +day);
+        return ngDate;
+    };
+    /**
+     * @param {?} gregorianDate
+     * @param {?} format
+     * @return {?}
+     */
+    DateFormatterService.prototype.ToGregorianDateStruct = /**
+     * @param {?} gregorianDate
+     * @param {?} format
+     * @return {?}
+     */
+    function (gregorianDate, format) {
+        /** @type {?} */
+        var momentDate = moment(gregorianDate, format);
+        // Parse a Gregorian date based on format.
+        /** @type {?} */
+        var day = momentDate.date();
+        /** @type {?} */
+        var month = +momentDate.month() + 1;
+        /** @type {?} */
+        var year = momentDate.year();
+        /** @type {?} */
+        var ngDate = new NgbDate(+year, +month, +day);
+        return ngDate;
+    };
+    /**
+     * @param {?} date
+     * @return {?}
+     */
+    DateFormatterService.prototype.ToHijri = /**
+     * @param {?} date
+     * @return {?}
+     */
+    function (date) {
+        if (!date) {
+            return null;
+        }
+        /** @type {?} */
+        var dateStr = this.ToString(date);
+        /** @type {?} */
+        var momentDate = momentHijri(dateStr, 'D/M/YYYY');
+        /** @type {?} */
+        var day = momentDate.iDate();
+        /** @type {?} */
+        var month = +momentDate.iMonth() + 1;
+        /** @type {?} */
+        var year = momentDate.iYear();
+        /** @type {?} */
+        var ngDate = new NgbDate(+year, month, +day);
+        return ngDate;
+    };
+    /**
+     * @param {?} date
+     * @return {?}
+     */
+    DateFormatterService.prototype.ToGregorian = /**
+     * @param {?} date
+     * @return {?}
+     */
+    function (date) {
+        if (!date) {
+            return null;
+        }
+        /** @type {?} */
+        var dateStr = this.ToString(date);
+        /** @type {?} */
+        var momentDate = momentHijri(dateStr, 'iD/iM/iYYYY');
+        /** @type {?} */
+        var day = momentDate.locale('en').format('D');
+        /** @type {?} */
+        var month = momentDate.locale('en').format('M');
+        /** @type {?} */
+        var year = momentDate.locale('en').format('Y');
+        /** @type {?} */
+        var ngDate = new NgbDate(+year, +month, +day);
+        return ngDate;
+    };
+    /**
+     * @return {?}
+     */
+    DateFormatterService.prototype.GetTodayHijri = /**
+     * @return {?}
+     */
+    function () {
+        /** @type {?} */
+        var todayHijri = momentHijri().locale('en').format('iYYYY/iM/iD');
+        return this.ToHijriDateStruct(todayHijri, 'iYYYY/iM/iD');
+    };
+    /**
+     * @return {?}
+     */
+    DateFormatterService.prototype.GetTodayGregorian = /**
+     * @return {?}
+     */
+    function () {
+        /** @type {?} */
+        var todayGregorian = moment().locale('en').format('YYYY/M/D');
+        return this.ToGregorianDateStruct(todayGregorian, 'YYYY/M/D');
+    };
+    DateFormatterService.decorators = [
+        { type: Injectable }
+    ];
+    /** @nocollapse */
+    DateFormatterService.ctorParameters = function () { return [
+        { type: NgbDateParserFormatter }
+    ]; };
+    return DateFormatterService;
+}());
+export { DateFormatterService };
+if (false) {
+    /**
+     * @type {?}
+     * @private
+     */
+    DateFormatterService.prototype.parserFormatter;
+}
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1mb3JtYXR0ZXIuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci8iLCJzb3VyY2VzIjpbImxpYi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9kYXRlLWZvcm1hdHRlci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQWlCLHNCQUFzQixFQUFFLE9BQU8sRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRTVGLE9BQU8sS0FBSyxRQUFRLE1BQU0sUUFBUSxDQUFDOztJQUM3QixNQUFNLEdBQUcsUUFBUTtBQUd2QixPQUFPLEtBQUssT0FBTyxNQUFNLGNBQWMsQ0FBQzs7SUFDbEMsV0FBVyxHQUFHLE9BQU87QUFFM0I7SUFHRSw4QkFBb0IsZUFBdUM7UUFBdkMsb0JBQWUsR0FBZixlQUFlLENBQXdCO0lBQUksQ0FBQzs7Ozs7SUFFOUQsdUNBQVE7Ozs7SUFBUixVQUFTLElBQW1COztZQUNsQixPQUFPLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDO1FBQ2pELE9BQU8sT0FBTyxDQUFDO0lBQ25CLENBQUM7Ozs7OztJQUVELGdEQUFpQjs7Ozs7SUFBakIsVUFBa0IsU0FBaUIsRUFBRSxNQUFjOztZQUUzQyxlQUFlLEdBQUksV0FBVyxDQUFDLFNBQVMsRUFBRyxNQUFNLENBQUM7OztZQUVsRCxHQUFHLEdBQUcsZUFBZSxDQUFDLEtBQUssRUFBRTs7WUFDN0IsS0FBSyxHQUFHLENBQUMsZUFBZSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUM7O1lBQ3JDLElBQUksR0FBRyxlQUFlLENBQUMsS0FBSyxFQUFFOztZQUU5QixNQUFNLEdBQUksSUFBSSxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLENBQUMsR0FBRyxDQUFDO1FBQy9DLE9BQU8sTUFBTSxDQUFDO0lBQ2pCLENBQUM7Ozs7OztJQUdBLG9EQUFxQjs7Ozs7SUFBckIsVUFBc0IsYUFBcUIsRUFBRSxNQUFjOztZQUVuRCxVQUFVLEdBQUcsTUFBTSxDQUFDLGFBQWEsRUFBRSxNQUFNLENBQUM7OztZQUUxQyxHQUFHLEdBQUcsVUFBVSxDQUFDLElBQUksRUFBRTs7WUFDdkIsS0FBSyxHQUFHLENBQUMsVUFBVSxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUM7O1lBQy9CLElBQUksR0FBRyxVQUFVLENBQUMsSUFBSSxFQUFFOztZQUV4QixNQUFNLEdBQUcsSUFBSSxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxHQUFHLENBQUM7UUFDL0MsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQzs7Ozs7SUFFRCxzQ0FBTzs7OztJQUFQLFVBQVEsSUFBbUI7UUFDdkIsSUFBSSxDQUFDLElBQUksRUFBRTtZQUNQLE9BQU8sSUFBSSxDQUFDO1NBQ2Y7O1lBQ0ssT0FBTyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDOztZQUU3QixVQUFVLEdBQUcsV0FBVyxDQUFDLE9BQU8sRUFBRSxVQUFVLENBQUM7O1lBRTdDLEdBQUcsR0FBRyxVQUFVLENBQUMsS0FBSyxFQUFFOztZQUN4QixLQUFLLEdBQUcsQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQzs7WUFDaEMsSUFBSSxHQUFHLFVBQVUsQ0FBQyxLQUFLLEVBQUU7O1lBRXpCLE1BQU0sR0FBSSxJQUFJLE9BQU8sQ0FBQyxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsQ0FBQyxHQUFHLENBQUM7UUFDL0MsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQzs7Ozs7SUFFRCwwQ0FBVzs7OztJQUFYLFVBQVksSUFBbUI7UUFDM0IsSUFBSSxDQUFDLElBQUksRUFBRTtZQUNQLE9BQU8sSUFBSSxDQUFDO1NBQ2Y7O1lBRUssT0FBTyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDOztZQUU3QixVQUFVLEdBQUcsV0FBVyxDQUFDLE9BQU8sRUFBRSxhQUFhLENBQUM7O1lBRWhELEdBQUcsR0FBRyxVQUFVLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUM7O1lBQ3pDLEtBQUssR0FBRyxVQUFVLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUM7O1lBQzNDLElBQUksR0FBRyxVQUFVLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUM7O1lBRTFDLE1BQU0sR0FBSSxJQUFJLE9BQU8sQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDLEdBQUcsQ0FBQztRQUNoRCxPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDOzs7O0lBRUQsNENBQWE7OztJQUFiOztZQUVRLFVBQVUsR0FBRyxXQUFXLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQztRQUVuRSxPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxVQUFVLEVBQUUsYUFBYSxDQUFDLENBQUU7SUFFNUQsQ0FBQzs7OztJQUVELGdEQUFpQjs7O0lBQWpCOztZQUVRLGNBQWMsR0FBRyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQztRQUUvRCxPQUFPLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxjQUFjLEVBQUUsVUFBVSxDQUFDLENBQUU7SUFDakUsQ0FBQzs7Z0JBakZKLFVBQVU7Ozs7Z0JBVGEsc0JBQXNCOztJQTRGOUMsMkJBQUM7Q0FBQSxBQW5GRCxJQW1GQztTQWxGWSxvQkFBb0I7Ozs7OztJQUVuQiwrQ0FBK0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE5nYkRhdGVTdHJ1Y3QsIE5nYkRhdGVQYXJzZXJGb3JtYXR0ZXIsIE5nYkRhdGUgfSBmcm9tICdAbmctYm9vdHN0cmFwL25nLWJvb3RzdHJhcCc7XHJcblxyXG5pbXBvcnQgKiBhcyBtb21lbnRqcyBmcm9tICdtb21lbnQnO1xyXG5jb25zdCBtb21lbnQgPSBtb21lbnRqcztcclxuXHJcblxyXG5pbXBvcnQgKiBhcyBtb21lbnRfIGZyb20gJ21vbWVudC1oaWpyaSc7XHJcbmNvbnN0IG1vbWVudEhpanJpID0gbW9tZW50XztcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIERhdGVGb3JtYXR0ZXJTZXJ2aWNlIHtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBwYXJzZXJGb3JtYXR0ZXI6IE5nYkRhdGVQYXJzZXJGb3JtYXR0ZXIpIHsgfVxyXG5cclxuICAgIFRvU3RyaW5nKGRhdGU6IE5nYkRhdGVTdHJ1Y3QpOiBzdHJpbmcge1xyXG4gICAgICAgIGNvbnN0IGRhdGVTdHIgPSB0aGlzLnBhcnNlckZvcm1hdHRlci5mb3JtYXQoZGF0ZSk7XHJcbiAgICAgICAgcmV0dXJuIGRhdGVTdHI7XHJcbiAgICB9XHJcblxyXG4gICAgVG9IaWpyaURhdGVTdHJ1Y3QoaGlqcmlEYXRlOiBzdHJpbmcsIGZvcm1hdDogc3RyaW5nKTogTmdiRGF0ZSAge1xyXG5cclxuICAgICAgY29uc3QgaGlqcmlNb21lbnREYXRlID0gIG1vbWVudEhpanJpKGhpanJpRGF0ZSAsIGZvcm1hdCk7IC8vIFBhcnNlIGEgSGlqcmkgZGF0ZSBiYXNlZCBvbiBmb3JtYXQuXHJcblxyXG4gICAgICBjb25zdCBkYXkgPSBoaWpyaU1vbWVudERhdGUuaURhdGUoKTtcclxuICAgICAgY29uc3QgbW9udGggPSAraGlqcmlNb21lbnREYXRlLmlNb250aCgpICsgMSA7XHJcbiAgICAgIGNvbnN0IHllYXIgPSBoaWpyaU1vbWVudERhdGUuaVllYXIoKTtcclxuXHJcbiAgICAgIGNvbnN0IG5nRGF0ZSA9ICBuZXcgTmdiRGF0ZSgreWVhciwgbW9udGgsICtkYXkpO1xyXG4gICAgICByZXR1cm4gbmdEYXRlO1xyXG4gICB9XHJcblxyXG5cclxuICAgIFRvR3JlZ29yaWFuRGF0ZVN0cnVjdChncmVnb3JpYW5EYXRlOiBzdHJpbmcsIGZvcm1hdDogc3RyaW5nKTogTmdiRGF0ZSB7XHJcblxyXG4gICAgICBjb25zdCBtb21lbnREYXRlID0gbW9tZW50KGdyZWdvcmlhbkRhdGUsIGZvcm1hdCk7IC8vIFBhcnNlIGEgR3JlZ29yaWFuIGRhdGUgYmFzZWQgb24gZm9ybWF0LlxyXG5cclxuICAgICAgY29uc3QgZGF5ID0gbW9tZW50RGF0ZS5kYXRlKCk7XHJcbiAgICAgIGNvbnN0IG1vbnRoID0gK21vbWVudERhdGUubW9udGgoKSArIDE7XHJcbiAgICAgIGNvbnN0IHllYXIgPSBtb21lbnREYXRlLnllYXIoKTtcclxuXHJcbiAgICAgIGNvbnN0IG5nRGF0ZSA9IG5ldyBOZ2JEYXRlKCt5ZWFyLCArbW9udGgsICtkYXkpO1xyXG4gICAgICByZXR1cm4gbmdEYXRlO1xyXG4gICAgfVxyXG5cclxuICAgIFRvSGlqcmkoZGF0ZTogTmdiRGF0ZVN0cnVjdCk6IE5nYkRhdGVTdHJ1Y3Qge1xyXG4gICAgICAgIGlmICghZGF0ZSkge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgZGF0ZVN0ciA9IHRoaXMuVG9TdHJpbmcoZGF0ZSk7XHJcblxyXG4gICAgICAgIGNvbnN0IG1vbWVudERhdGUgPSBtb21lbnRIaWpyaShkYXRlU3RyLCAnRC9NL1lZWVknKTtcclxuXHJcbiAgICAgICAgY29uc3QgZGF5ID0gbW9tZW50RGF0ZS5pRGF0ZSgpO1xyXG4gICAgICAgIGNvbnN0IG1vbnRoID0gK21vbWVudERhdGUuaU1vbnRoKCkgKyAxIDtcclxuICAgICAgICBjb25zdCB5ZWFyID0gbW9tZW50RGF0ZS5pWWVhcigpO1xyXG5cclxuICAgICAgICBjb25zdCBuZ0RhdGUgPSAgbmV3IE5nYkRhdGUoK3llYXIsIG1vbnRoLCArZGF5KTtcclxuICAgICAgICByZXR1cm4gbmdEYXRlO1xyXG4gICAgfVxyXG5cclxuICAgIFRvR3JlZ29yaWFuKGRhdGU6IE5nYkRhdGVTdHJ1Y3QpIHtcclxuICAgICAgICBpZiAoIWRhdGUpIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBkYXRlU3RyID0gdGhpcy5Ub1N0cmluZyhkYXRlKTtcclxuXHJcbiAgICAgICAgY29uc3QgbW9tZW50RGF0ZSA9IG1vbWVudEhpanJpKGRhdGVTdHIsICdpRC9pTS9pWVlZWScpO1xyXG5cclxuICAgICAgICBjb25zdCBkYXkgPSBtb21lbnREYXRlLmxvY2FsZSgnZW4nKS5mb3JtYXQoJ0QnKTtcclxuICAgICAgICBjb25zdCBtb250aCA9IG1vbWVudERhdGUubG9jYWxlKCdlbicpLmZvcm1hdCgnTScpIDtcclxuICAgICAgICBjb25zdCB5ZWFyID0gbW9tZW50RGF0ZS5sb2NhbGUoJ2VuJykuZm9ybWF0KCdZJyk7XHJcblxyXG4gICAgICAgIGNvbnN0IG5nRGF0ZSA9ICBuZXcgTmdiRGF0ZSgreWVhciwgK21vbnRoLCArZGF5KTtcclxuICAgICAgICByZXR1cm4gbmdEYXRlO1xyXG4gICAgfVxyXG5cclxuICAgIEdldFRvZGF5SGlqcmkoKTogTmdiRGF0ZVN0cnVjdCB7XHJcblxyXG4gICAgICBjb25zdCB0b2RheUhpanJpID0gbW9tZW50SGlqcmkoKS5sb2NhbGUoJ2VuJykuZm9ybWF0KCdpWVlZWS9pTS9pRCcpO1xyXG5cclxuICAgICAgcmV0dXJuIHRoaXMuVG9IaWpyaURhdGVTdHJ1Y3QodG9kYXlIaWpyaSwgJ2lZWVlZL2lNL2lEJykgO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBHZXRUb2RheUdyZWdvcmlhbigpOiBOZ2JEYXRlU3RydWN0IHtcclxuXHJcbiAgICAgIGNvbnN0IHRvZGF5R3JlZ29yaWFuID0gbW9tZW50KCkubG9jYWxlKCdlbicpLmZvcm1hdCgnWVlZWS9NL0QnKTtcclxuXHJcbiAgICAgIHJldHVybiB0aGlzLlRvR3JlZ29yaWFuRGF0ZVN0cnVjdCh0b2RheUdyZWdvcmlhbiwgJ1lZWVkvTS9EJykgO1xyXG4gICAgfVxyXG5cclxufVxyXG4iXX0=
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.js b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.js
index 3f4e0bd..e78af5b 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.js
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.js
@@ -6,6 +6,24 @@
 import { Component, ViewEncapsulation, Input, Output, EventEmitter, ViewChild } from '@angular/core';
 import { NgbCalendar, NgbCalendarIslamicUmalqura, NgbDatepickerI18n } from '@ng-bootstrap/ng-bootstrap';
 import { IslamicI18n } from '../IslamicI18n';
+import * as ɵngcc0 from '@angular/core';
+import * as ɵngcc1 from '../provide-parent-form.directive';
+import * as ɵngcc2 from '@ng-bootstrap/ng-bootstrap';
+import * as ɵngcc3 from '@angular/forms';
+
+var _c0 = ["d"];
+function HijriDatepickerComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {
+    var _r4 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelement(0, "hr", 4);
+    ɵngcc0.ɵɵelementStart(1, "button", 5);
+    ɵngcc0.ɵɵlistener("click", function HijriDatepickerComponent_ng_template_3_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r4); ɵngcc0.ɵɵnextContext(); var _r0 = ɵngcc0.ɵɵreference(2); return _r0.close(); });
+    ɵngcc0.ɵɵtext(2, "Close");
+    ɵngcc0.ɵɵelementEnd();
+    ɵngcc0.ɵɵelementStart(3, "button", 6);
+    ɵngcc0.ɵɵlistener("click", function HijriDatepickerComponent_ng_template_3_Template_button_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r4); var ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.clear(); });
+    ɵngcc0.ɵɵtext(4, "Clear");
+    ɵngcc0.ɵɵelementEnd();
+} }
 var HijriDatepickerComponent = /** @class */ (function () {
     function HijriDatepickerComponent() {
         this.selectedDateChange = new EventEmitter();
@@ -44,18 +62,6 @@ var HijriDatepickerComponent = /** @class */ (function () {
         this.datePicker.close();
         this.selectedDateChange.emit(null);
     };
-    HijriDatepickerComponent.decorators = [
-        { type: Component, args: [{
-                    selector: 'hijri-date-picker',
-                    template: "<div provideParentForm>\n<input\n    class=\"form-control hijriInput\"\n    [(ngModel)]=\"selectedDate\"\n    [placeholder]=\"placeHolder ?placeHolder : 'd/M/yyyy'\"\n    ngbDatepicker\n    (click)=\"d.toggle()\"\n    (dateSelect)=\"changeDate()\"\n    #d=\"ngbDatepicker\"\n    [readonly]=\"readonly\"\n    [minDate]=\"min\"\n    [maxDate]=\"max\"\n    [required]=\"isRequired\"\n    [name]=\"name\"\n    (blur)=\"onBlur()\"\n    [footerTemplate]=\"footerTemplate\"\n    [disabled]=\"disabled\" />\n</div>\n\n\n<ng-template #footerTemplate>\n  <hr class=\"my-0\">\n  <button class=\"btn btn-secondary btn-sm m-2 float-right\" type=\"button\" (click)=\"d.close()\">Close</button>\n  <button class=\"btn btn-primary btn-sm m-2 float-left\" type=\"button\" (click)=\"clear()\">Clear</button>\n</ng-template>\n",
-                    providers: [
-                        { provide: NgbCalendar, useClass: NgbCalendarIslamicUmalqura },
-                        { provide: NgbDatepickerI18n, useClass: IslamicI18n }
-                    ],
-                    encapsulation: ViewEncapsulation.None,
-                    styles: [".hijriInput{border-top-left-radius:0;border-bottom-left-radius:0}.ngb-dp-weekday{width:2.1rem!important}"]
-                }] }
-    ];
     /** @nocollapse */
     HijriDatepickerComponent.ctorParameters = function () { return []; };
     HijriDatepickerComponent.propDecorators = {
@@ -70,6 +76,62 @@ var HijriDatepickerComponent = /** @class */ (function () {
         name: [{ type: Input }],
         placeHolder: [{ type: Input }]
     };
+HijriDatepickerComponent.ɵfac = function HijriDatepickerComponent_Factory(t) { return new (t || HijriDatepickerComponent)(); };
+HijriDatepickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: HijriDatepickerComponent, selectors: [["hijri-date-picker"]], viewQuery: function HijriDatepickerComponent_Query(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵviewQuery(_c0, true);
+    } if (rf & 2) {
+        var _t;
+        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.datePicker = _t.first);
+    } }, inputs: { readonly: "readonly", isRequired: "isRequired", disabled: "disabled", selectedDate: "selectedDate", min: "min", max: "max", name: "name", placeHolder: "placeHolder" }, outputs: { selectedDateChange: "selectedDateChange" }, features: [ɵngcc0.ɵɵProvidersFeature([
+            { provide: NgbCalendar, useClass: NgbCalendarIslamicUmalqura },
+            { provide: NgbDatepickerI18n, useClass: IslamicI18n }
+        ])], decls: 5, vars: 9, consts: [["provideParentForm", ""], ["ngbDatepicker", "", 1, "form-control", "hijriInput", 3, "ngModel", "placeholder", "readonly", "minDate", "maxDate", "required", "name", "footerTemplate", "disabled", "ngModelChange", "click", "dateSelect", "blur"], ["d", "ngbDatepicker"], ["footerTemplate", ""], [1, "my-0"], ["type", "button", 1, "btn", "btn-secondary", "btn-sm", "m-2", "float-right", 3, "click"], ["type", "button", 1, "btn", "btn-primary", "btn-sm", "m-2", "float-left", 3, "click"]], template: function HijriDatepickerComponent_Template(rf, ctx) { if (rf & 1) {
+        var _r6 = ɵngcc0.ɵɵgetCurrentView();
+        ɵngcc0.ɵɵelementStart(0, "div", 0);
+        ɵngcc0.ɵɵelementStart(1, "input", 1, 2);
+        ɵngcc0.ɵɵlistener("ngModelChange", function HijriDatepickerComponent_Template_input_ngModelChange_1_listener($event) { return ctx.selectedDate = $event; })("click", function HijriDatepickerComponent_Template_input_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r6); var _r0 = ɵngcc0.ɵɵreference(2); return _r0.toggle(); })("dateSelect", function HijriDatepickerComponent_Template_input_dateSelect_1_listener() { return ctx.changeDate(); })("blur", function HijriDatepickerComponent_Template_input_blur_1_listener() { return ctx.onBlur(); });
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵtemplate(3, HijriDatepickerComponent_ng_template_3_Template, 5, 0, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
+    } if (rf & 2) {
+        var _r1 = ɵngcc0.ɵɵreference(4);
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵproperty("ngModel", ctx.selectedDate)("placeholder", ctx.placeHolder ? ctx.placeHolder : "d/M/yyyy")("readonly", ctx.readonly)("minDate", ctx.min)("maxDate", ctx.max)("required", ctx.isRequired)("name", ctx.name)("footerTemplate", _r1)("disabled", ctx.disabled);
+    } }, directives: [ɵngcc1.ProvideParentFormDirective, ɵngcc2.NgbInputDatepicker, ɵngcc3.DefaultValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.NgModel, ɵngcc3.RequiredValidator], styles: [".hijriInput{border-top-left-radius:0;border-bottom-left-radius:0}.ngb-dp-weekday{width:2.1rem!important}"], encapsulation: 2 });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HijriDatepickerComponent, [{
+        type: Component,
+        args: [{
+                selector: 'hijri-date-picker',
+                template: "<div provideParentForm>\n<input\n    class=\"form-control hijriInput\"\n    [(ngModel)]=\"selectedDate\"\n    [placeholder]=\"placeHolder ?placeHolder : 'd/M/yyyy'\"\n    ngbDatepicker\n    (click)=\"d.toggle()\"\n    (dateSelect)=\"changeDate()\"\n    #d=\"ngbDatepicker\"\n    [readonly]=\"readonly\"\n    [minDate]=\"min\"\n    [maxDate]=\"max\"\n    [required]=\"isRequired\"\n    [name]=\"name\"\n    (blur)=\"onBlur()\"\n    [footerTemplate]=\"footerTemplate\"\n    [disabled]=\"disabled\" />\n</div>\n\n\n<ng-template #footerTemplate>\n  <hr class=\"my-0\">\n  <button class=\"btn btn-secondary btn-sm m-2 float-right\" type=\"button\" (click)=\"d.close()\">Close</button>\n  <button class=\"btn btn-primary btn-sm m-2 float-left\" type=\"button\" (click)=\"clear()\">Clear</button>\n</ng-template>\n",
+                providers: [
+                    { provide: NgbCalendar, useClass: NgbCalendarIslamicUmalqura },
+                    { provide: NgbDatepickerI18n, useClass: IslamicI18n }
+                ],
+                encapsulation: ViewEncapsulation.None,
+                styles: [".hijriInput{border-top-left-radius:0;border-bottom-left-radius:0}.ngb-dp-weekday{width:2.1rem!important}"]
+            }]
+    }], function () { return []; }, { selectedDateChange: [{
+            type: Output
+        }], readonly: [{
+            type: Input
+        }], isRequired: [{
+            type: Input
+        }], disabled: [{
+            type: Input
+        }], selectedDate: [{
+            type: Input
+        }], datePicker: [{
+            type: ViewChild,
+            args: ['d']
+        }], min: [{
+            type: Input
+        }], max: [{
+            type: Input
+        }], name: [{
+            type: Input
+        }], placeHolder: [{
+            type: Input
+        }] }); })();
     return HijriDatepickerComponent;
 }());
 export { HijriDatepickerComponent };
@@ -95,4 +157,4 @@ if (false) {
     /** @type {?} */
     HijriDatepickerComponent.prototype.placeHolder;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlqcmktZGF0ZXBpY2tlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvIiwic291cmNlcyI6WyJsaWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvaGlqcmktZGF0ZXBpY2tlci9oaWpyaS1kYXRlcGlja2VyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdHLE9BQU8sRUFBRSxXQUFXLEVBQUUsMEJBQTBCLEVBQUUsaUJBQWlCLEVBQWlCLE1BQU0sNEJBQTRCLENBQUM7QUFDdkgsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRzdDO0lBNEJFO1FBWFUsdUJBQWtCLEdBQWdDLElBQUksWUFBWSxFQUFFLENBQUM7UUFFdEUsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUNqQixlQUFVLEdBQUcsS0FBSyxDQUFDO1FBQ25CLGFBQVEsR0FBRyxLQUFLLENBQUM7SUFPVixDQUFDOzs7O0lBRWpCLDZDQUFVOzs7SUFBVjtRQUNFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ2xELENBQUM7Ozs7SUFFRCx5Q0FBTTs7O0lBQU47UUFDRSxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRTtZQUN0QixJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ3BDO0lBQ0gsQ0FBQzs7OztJQUVELHdDQUFLOzs7SUFBTDtRQUNFLElBQUksQ0FBQyxZQUFZLEdBQUcsU0FBUyxDQUFDO1FBQzlCLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDeEIsSUFBSSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNyQyxDQUFDOztnQkE1Q0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxtQkFBbUI7b0JBQzdCLG16QkFBZ0Q7b0JBQ2hELFNBQVMsRUFBRTt3QkFDVCxFQUFFLE9BQU8sRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLDBCQUEwQixFQUFFO3dCQUM5RCxFQUFFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxRQUFRLEVBQUUsV0FBVyxFQUFFO3FCQUN0RDtvQkFJRCxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTs7aUJBQ3RDOzs7Ozs2QkFHRSxTQUFTLFNBQUMsR0FBRzsrQkFFYixLQUFLO3FDQUNMLE1BQU07MkJBRU4sS0FBSzs2QkFDTCxLQUFLOzJCQUNMLEtBQUs7c0JBQ0wsS0FBSztzQkFDTCxLQUFLO3VCQUNMLEtBQUs7OEJBRUwsS0FBSzs7SUFvQlIsK0JBQUM7Q0FBQSxBQTlDRCxJQThDQztTQWxDWSx3QkFBd0I7OztJQUVuQyw4Q0FBZ0M7O0lBRWhDLGdEQUFxQzs7SUFDckMsc0RBQStFOztJQUUvRSw0Q0FBMEI7O0lBQzFCLDhDQUE0Qjs7SUFDNUIsNENBQTBCOztJQUMxQix1Q0FBNEI7O0lBQzVCLHVDQUE0Qjs7SUFDNUIsd0NBQXNCOztJQUV0QiwrQ0FBNkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgVmlld0VuY2Fwc3VsYXRpb24sIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ2JDYWxlbmRhciwgTmdiQ2FsZW5kYXJJc2xhbWljVW1hbHF1cmEsIE5nYkRhdGVwaWNrZXJJMThuLCBOZ2JEYXRlU3RydWN0IH0gZnJvbSAnQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAnO1xuaW1wb3J0IHsgSXNsYW1pY0kxOG4gfSBmcm9tICcuLi9Jc2xhbWljSTE4bic7XG5pbXBvcnQgeyBDb250cm9sQ29udGFpbmVyLCBOZ0Zvcm0gfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2hpanJpLWRhdGUtcGlja2VyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2hpanJpLWRhdGVwaWNrZXIuY29tcG9uZW50Lmh0bWwnLFxuICBwcm92aWRlcnM6IFtcbiAgICB7IHByb3ZpZGU6IE5nYkNhbGVuZGFyLCB1c2VDbGFzczogTmdiQ2FsZW5kYXJJc2xhbWljVW1hbHF1cmEgfSxcbiAgICB7IHByb3ZpZGU6IE5nYkRhdGVwaWNrZXJJMThuLCB1c2VDbGFzczogSXNsYW1pY0kxOG4gfVxuICBdLFxuICBzdHlsZVVybHM6IFtcbiAgICAnLi9oaWpyaS1kYXRlLXBpY2tlci5jb21wb25lbnQuY3NzJ1xuICBdLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIEhpanJpRGF0ZXBpY2tlckNvbXBvbmVudCB7XG5cbiAgQFZpZXdDaGlsZCgnZCcpIGRhdGVQaWNrZXI6IGFueTtcblxuICBASW5wdXQoKSBzZWxlY3RlZERhdGU6IE5nYkRhdGVTdHJ1Y3Q7XG4gIEBPdXRwdXQoKSBzZWxlY3RlZERhdGVDaGFuZ2U6IEV2ZW50RW1pdHRlcjxOZ2JEYXRlU3RydWN0PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBASW5wdXQoKSByZWFkb25seSA9IGZhbHNlO1xuICBASW5wdXQoKSBpc1JlcXVpcmVkID0gZmFsc2U7XG4gIEBJbnB1dCgpIGRpc2FibGVkID0gZmFsc2U7XG4gIEBJbnB1dCgpIG1pbjogTmdiRGF0ZVN0cnVjdDtcbiAgQElucHV0KCkgbWF4OiBOZ2JEYXRlU3RydWN0O1xuICBASW5wdXQoKSBuYW1lOiBzdHJpbmc7XG5cbiAgQElucHV0KCkgcGxhY2VIb2xkZXI6IHN0cmluZztcblxuICBjb25zdHJ1Y3RvcigpIHsgfVxuXG4gIGNoYW5nZURhdGUoKSB7XG4gICAgdGhpcy5zZWxlY3RlZERhdGVDaGFuZ2UuZW1pdCh0aGlzLnNlbGVjdGVkRGF0ZSk7XG4gIH1cblxuICBvbkJsdXIoKSB7XG4gICAgaWYgKCF0aGlzLnNlbGVjdGVkRGF0ZSkge1xuICAgICAgdGhpcy5zZWxlY3RlZERhdGVDaGFuZ2UuZW1pdChudWxsKTtcbiAgICB9XG4gIH1cblxuICBjbGVhcigpIHtcbiAgICB0aGlzLnNlbGVjdGVkRGF0ZSA9IHVuZGVmaW5lZDtcbiAgICB0aGlzLmRhdGVQaWNrZXIuY2xvc2UoKTtcbiAgICB0aGlzLnNlbGVjdGVkRGF0ZUNoYW5nZS5lbWl0KG51bGwpO1xuICB9XG5cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlqcmktZGF0ZXBpY2tlci5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIm5neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9saWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvaGlqcmktZGF0ZXBpY2tlci9oaWpyaS1kYXRlcGlja2VyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdHLE9BQU8sRUFBRSxXQUFXLEVBQUUsMEJBQTBCLEVBQUUsaUJBQWlCLEVBQWlCLE1BQU0sNEJBQTRCLENBQUM7QUFDdkgsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRzdDO0FBRWMsSUEwQlo7QUFHQSxRQWRVLHVCQUFrQixHQUFnQyxJQUFJLFlBQVksRUFBRSxDQUFDO0FBQ2pGLFFBQ1csYUFBUSxHQUFHLEtBQUssQ0FBQztBQUM1QixRQUFXLGVBQVUsR0FBRyxLQUFLLENBQUM7QUFDOUIsUUFBVyxhQUFRLEdBQUcsS0FBSyxDQUFDO0FBQzVCLElBTWtCLENBQUM7QUFDbkI7QUFDTztBQUNFO0FBQVEsSUFEZiw2Q0FBVTtBQUNWO0FBQW1CO0FBQVEsSUFEM0I7QUFBYyxRQUNaLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO0FBQ3BELElBQUUsQ0FBQztBQUVIO0FBQVE7QUFDTTtBQUFRLElBRHBCLHlDQUFNO0FBQ047QUFBbUI7QUFBUSxJQUQzQjtBQUNDLFFBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUU7QUFDNUIsWUFBTSxJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ3pDLFNBQUs7QUFDTCxJ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QUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUlBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBR0EsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFvQkEsQUFBQSxBQUFBLEFBOUNBLEFBOENBLEFBbENBLEFBQUEsQUFFQSxBQUFBLEFBRUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIFZpZXdFbmNhcHN1bGF0aW9uLCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdiQ2FsZW5kYXIsIE5nYkNhbGVuZGFySXNsYW1pY1VtYWxxdXJhLCBOZ2JEYXRlcGlja2VySTE4biwgTmdiRGF0ZVN0cnVjdCB9IGZyb20gJ0BuZy1ib290c3RyYXAvbmctYm9vdHN0cmFwJztcbmltcG9ydCB7IElzbGFtaWNJMThuIH0gZnJvbSAnLi4vSXNsYW1pY0kxOG4nO1xuaW1wb3J0IHsgQ29udHJvbENvbnRhaW5lciwgTmdGb3JtIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdoaWpyaS1kYXRlLXBpY2tlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9oaWpyaS1kYXRlcGlja2VyLmNvbXBvbmVudC5odG1sJyxcbiAgcHJvdmlkZXJzOiBbXG4gICAgeyBwcm92aWRlOiBOZ2JDYWxlbmRhciwgdXNlQ2xhc3M6IE5nYkNhbGVuZGFySXNsYW1pY1VtYWxxdXJhIH0sXG4gICAgeyBwcm92aWRlOiBOZ2JEYXRlcGlja2VySTE4biwgdXNlQ2xhc3M6IElzbGFtaWNJMThuIH1cbiAgXSxcbiAgc3R5bGVVcmxzOiBbXG4gICAgJy4vaGlqcmktZGF0ZS1waWNrZXIuY29tcG9uZW50LmNzcydcbiAgXSxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBIaWpyaURhdGVwaWNrZXJDb21wb25lbnQge1xuXG4gIEBWaWV3Q2hpbGQoJ2QnKSBkYXRlUGlja2VyOiBhbnk7XG5cbiAgQElucHV0KCkgc2VsZWN0ZWREYXRlOiBOZ2JEYXRlU3RydWN0O1xuICBAT3V0cHV0KCkgc2VsZWN0ZWREYXRlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8TmdiRGF0ZVN0cnVjdD4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgQElucHV0KCkgcmVhZG9ubHkgPSBmYWxzZTtcbiAgQElucHV0KCkgaXNSZXF1aXJlZCA9IGZhbHNlO1xuICBASW5wdXQoKSBkaXNhYmxlZCA9IGZhbHNlO1xuICBASW5wdXQoKSBtaW46IE5nYkRhdGVTdHJ1Y3Q7XG4gIEBJbnB1dCgpIG1heDogTmdiRGF0ZVN0cnVjdDtcbiAgQElucHV0KCkgbmFtZTogc3RyaW5nO1xuXG4gIEBJbnB1dCgpIHBsYWNlSG9sZGVyOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxuICBjaGFuZ2VEYXRlKCkge1xuICAgIHRoaXMuc2VsZWN0ZWREYXRlQ2hhbmdlLmVtaXQodGhpcy5zZWxlY3RlZERhdGUpO1xuICB9XG5cbiAgb25CbHVyKCkge1xuICAgIGlmICghdGhpcy5zZWxlY3RlZERhdGUpIHtcbiAgICAgIHRoaXMuc2VsZWN0ZWREYXRlQ2hhbmdlLmVtaXQobnVsbCk7XG4gICAgfVxuICB9XG5cbiAgY2xlYXIoKSB7XG4gICAgdGhpcy5zZWxlY3RlZERhdGUgPSB1bmRlZmluZWQ7XG4gICAgdGhpcy5kYXRlUGlja2VyLmNsb3NlKCk7XG4gICAgdGhpcy5zZWxlY3RlZERhdGVDaGFuZ2UuZW1pdChudWxsKTtcbiAgfVxuXG59XG4iXX0=
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.js.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.js.__ivy_ngcc_bak
new file mode 100644
index 0000000..3f4e0bd
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.js.__ivy_ngcc_bak
@@ -0,0 +1,98 @@
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+import { Component, ViewEncapsulation, Input, Output, EventEmitter, ViewChild } from '@angular/core';
+import { NgbCalendar, NgbCalendarIslamicUmalqura, NgbDatepickerI18n } from '@ng-bootstrap/ng-bootstrap';
+import { IslamicI18n } from '../IslamicI18n';
+var HijriDatepickerComponent = /** @class */ (function () {
+    function HijriDatepickerComponent() {
+        this.selectedDateChange = new EventEmitter();
+        this.readonly = false;
+        this.isRequired = false;
+        this.disabled = false;
+    }
+    /**
+     * @return {?}
+     */
+    HijriDatepickerComponent.prototype.changeDate = /**
+     * @return {?}
+     */
+    function () {
+        this.selectedDateChange.emit(this.selectedDate);
+    };
+    /**
+     * @return {?}
+     */
+    HijriDatepickerComponent.prototype.onBlur = /**
+     * @return {?}
+     */
+    function () {
+        if (!this.selectedDate) {
+            this.selectedDateChange.emit(null);
+        }
+    };
+    /**
+     * @return {?}
+     */
+    HijriDatepickerComponent.prototype.clear = /**
+     * @return {?}
+     */
+    function () {
+        this.selectedDate = undefined;
+        this.datePicker.close();
+        this.selectedDateChange.emit(null);
+    };
+    HijriDatepickerComponent.decorators = [
+        { type: Component, args: [{
+                    selector: 'hijri-date-picker',
+                    template: "<div provideParentForm>\n<input\n    class=\"form-control hijriInput\"\n    [(ngModel)]=\"selectedDate\"\n    [placeholder]=\"placeHolder ?placeHolder : 'd/M/yyyy'\"\n    ngbDatepicker\n    (click)=\"d.toggle()\"\n    (dateSelect)=\"changeDate()\"\n    #d=\"ngbDatepicker\"\n    [readonly]=\"readonly\"\n    [minDate]=\"min\"\n    [maxDate]=\"max\"\n    [required]=\"isRequired\"\n    [name]=\"name\"\n    (blur)=\"onBlur()\"\n    [footerTemplate]=\"footerTemplate\"\n    [disabled]=\"disabled\" />\n</div>\n\n\n<ng-template #footerTemplate>\n  <hr class=\"my-0\">\n  <button class=\"btn btn-secondary btn-sm m-2 float-right\" type=\"button\" (click)=\"d.close()\">Close</button>\n  <button class=\"btn btn-primary btn-sm m-2 float-left\" type=\"button\" (click)=\"clear()\">Clear</button>\n</ng-template>\n",
+                    providers: [
+                        { provide: NgbCalendar, useClass: NgbCalendarIslamicUmalqura },
+                        { provide: NgbDatepickerI18n, useClass: IslamicI18n }
+                    ],
+                    encapsulation: ViewEncapsulation.None,
+                    styles: [".hijriInput{border-top-left-radius:0;border-bottom-left-radius:0}.ngb-dp-weekday{width:2.1rem!important}"]
+                }] }
+    ];
+    /** @nocollapse */
+    HijriDatepickerComponent.ctorParameters = function () { return []; };
+    HijriDatepickerComponent.propDecorators = {
+        datePicker: [{ type: ViewChild, args: ['d',] }],
+        selectedDate: [{ type: Input }],
+        selectedDateChange: [{ type: Output }],
+        readonly: [{ type: Input }],
+        isRequired: [{ type: Input }],
+        disabled: [{ type: Input }],
+        min: [{ type: Input }],
+        max: [{ type: Input }],
+        name: [{ type: Input }],
+        placeHolder: [{ type: Input }]
+    };
+    return HijriDatepickerComponent;
+}());
+export { HijriDatepickerComponent };
+if (false) {
+    /** @type {?} */
+    HijriDatepickerComponent.prototype.datePicker;
+    /** @type {?} */
+    HijriDatepickerComponent.prototype.selectedDate;
+    /** @type {?} */
+    HijriDatepickerComponent.prototype.selectedDateChange;
+    /** @type {?} */
+    HijriDatepickerComponent.prototype.readonly;
+    /** @type {?} */
+    HijriDatepickerComponent.prototype.isRequired;
+    /** @type {?} */
+    HijriDatepickerComponent.prototype.disabled;
+    /** @type {?} */
+    HijriDatepickerComponent.prototype.min;
+    /** @type {?} */
+    HijriDatepickerComponent.prototype.max;
+    /** @type {?} */
+    HijriDatepickerComponent.prototype.name;
+    /** @type {?} */
+    HijriDatepickerComponent.prototype.placeHolder;
+}
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlqcmktZGF0ZXBpY2tlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvIiwic291cmNlcyI6WyJsaWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvaGlqcmktZGF0ZXBpY2tlci9oaWpyaS1kYXRlcGlja2VyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdHLE9BQU8sRUFBRSxXQUFXLEVBQUUsMEJBQTBCLEVBQUUsaUJBQWlCLEVBQWlCLE1BQU0sNEJBQTRCLENBQUM7QUFDdkgsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRzdDO0lBNEJFO1FBWFUsdUJBQWtCLEdBQWdDLElBQUksWUFBWSxFQUFFLENBQUM7UUFFdEUsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUNqQixlQUFVLEdBQUcsS0FBSyxDQUFDO1FBQ25CLGFBQVEsR0FBRyxLQUFLLENBQUM7SUFPVixDQUFDOzs7O0lBRWpCLDZDQUFVOzs7SUFBVjtRQUNFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ2xELENBQUM7Ozs7SUFFRCx5Q0FBTTs7O0lBQU47UUFDRSxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRTtZQUN0QixJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ3BDO0lBQ0gsQ0FBQzs7OztJQUVELHdDQUFLOzs7SUFBTDtRQUNFLElBQUksQ0FBQyxZQUFZLEdBQUcsU0FBUyxDQUFDO1FBQzlCLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDeEIsSUFBSSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNyQyxDQUFDOztnQkE1Q0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxtQkFBbUI7b0JBQzdCLG16QkFBZ0Q7b0JBQ2hELFNBQVMsRUFBRTt3QkFDVCxFQUFFLE9BQU8sRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLDBCQUEwQixFQUFFO3dCQUM5RCxFQUFFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxRQUFRLEVBQUUsV0FBVyxFQUFFO3FCQUN0RDtvQkFJRCxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTs7aUJBQ3RDOzs7Ozs2QkFHRSxTQUFTLFNBQUMsR0FBRzsrQkFFYixLQUFLO3FDQUNMLE1BQU07MkJBRU4sS0FBSzs2QkFDTCxLQUFLOzJCQUNMLEtBQUs7c0JBQ0wsS0FBSztzQkFDTCxLQUFLO3VCQUNMLEtBQUs7OEJBRUwsS0FBSzs7SUFvQlIsK0JBQUM7Q0FBQSxBQTlDRCxJQThDQztTQWxDWSx3QkFBd0I7OztJQUVuQyw4Q0FBZ0M7O0lBRWhDLGdEQUFxQzs7SUFDckMsc0RBQStFOztJQUUvRSw0Q0FBMEI7O0lBQzFCLDhDQUE0Qjs7SUFDNUIsNENBQTBCOztJQUMxQix1Q0FBNEI7O0lBQzVCLHVDQUE0Qjs7SUFDNUIsd0NBQXNCOztJQUV0QiwrQ0FBNkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgVmlld0VuY2Fwc3VsYXRpb24sIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ2JDYWxlbmRhciwgTmdiQ2FsZW5kYXJJc2xhbWljVW1hbHF1cmEsIE5nYkRhdGVwaWNrZXJJMThuLCBOZ2JEYXRlU3RydWN0IH0gZnJvbSAnQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAnO1xuaW1wb3J0IHsgSXNsYW1pY0kxOG4gfSBmcm9tICcuLi9Jc2xhbWljSTE4bic7XG5pbXBvcnQgeyBDb250cm9sQ29udGFpbmVyLCBOZ0Zvcm0gfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2hpanJpLWRhdGUtcGlja2VyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2hpanJpLWRhdGVwaWNrZXIuY29tcG9uZW50Lmh0bWwnLFxuICBwcm92aWRlcnM6IFtcbiAgICB7IHByb3ZpZGU6IE5nYkNhbGVuZGFyLCB1c2VDbGFzczogTmdiQ2FsZW5kYXJJc2xhbWljVW1hbHF1cmEgfSxcbiAgICB7IHByb3ZpZGU6IE5nYkRhdGVwaWNrZXJJMThuLCB1c2VDbGFzczogSXNsYW1pY0kxOG4gfVxuICBdLFxuICBzdHlsZVVybHM6IFtcbiAgICAnLi9oaWpyaS1kYXRlLXBpY2tlci5jb21wb25lbnQuY3NzJ1xuICBdLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIEhpanJpRGF0ZXBpY2tlckNvbXBvbmVudCB7XG5cbiAgQFZpZXdDaGlsZCgnZCcpIGRhdGVQaWNrZXI6IGFueTtcblxuICBASW5wdXQoKSBzZWxlY3RlZERhdGU6IE5nYkRhdGVTdHJ1Y3Q7XG4gIEBPdXRwdXQoKSBzZWxlY3RlZERhdGVDaGFuZ2U6IEV2ZW50RW1pdHRlcjxOZ2JEYXRlU3RydWN0PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBASW5wdXQoKSByZWFkb25seSA9IGZhbHNlO1xuICBASW5wdXQoKSBpc1JlcXVpcmVkID0gZmFsc2U7XG4gIEBJbnB1dCgpIGRpc2FibGVkID0gZmFsc2U7XG4gIEBJbnB1dCgpIG1pbjogTmdiRGF0ZVN0cnVjdDtcbiAgQElucHV0KCkgbWF4OiBOZ2JEYXRlU3RydWN0O1xuICBASW5wdXQoKSBuYW1lOiBzdHJpbmc7XG5cbiAgQElucHV0KCkgcGxhY2VIb2xkZXI6IHN0cmluZztcblxuICBjb25zdHJ1Y3RvcigpIHsgfVxuXG4gIGNoYW5nZURhdGUoKSB7XG4gICAgdGhpcy5zZWxlY3RlZERhdGVDaGFuZ2UuZW1pdCh0aGlzLnNlbGVjdGVkRGF0ZSk7XG4gIH1cblxuICBvbkJsdXIoKSB7XG4gICAgaWYgKCF0aGlzLnNlbGVjdGVkRGF0ZSkge1xuICAgICAgdGhpcy5zZWxlY3RlZERhdGVDaGFuZ2UuZW1pdChudWxsKTtcbiAgICB9XG4gIH1cblxuICBjbGVhcigpIHtcbiAgICB0aGlzLnNlbGVjdGVkRGF0ZSA9IHVuZGVmaW5lZDtcbiAgICB0aGlzLmRhdGVQaWNrZXIuY2xvc2UoKTtcbiAgICB0aGlzLnNlbGVjdGVkRGF0ZUNoYW5nZS5lbWl0KG51bGwpO1xuICB9XG5cbn1cbiJdfQ==
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.js b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.js
index b28f665..f856c83 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.js
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.js
@@ -8,6 +8,55 @@ import { DateType } from './consts';
 import { DateFormatterService } from './date-formatter.service';
 import * as momentjs from 'moment';
 /** @type {?} */
+import * as ɵngcc0 from '@angular/core';
+import * as ɵngcc1 from './date-formatter.service';
+import * as ɵngcc2 from './provide-parent-form.directive';
+import * as ɵngcc3 from '@angular/common';
+import * as ɵngcc4 from '@ng-bootstrap/ng-bootstrap';
+import * as ɵngcc5 from '@angular/forms';
+import * as ɵngcc6 from './hijri-datepicker/hijri-datepicker.component';
+
+var _c0 = ["d"];
+function HijriGregorianDatepickerComponent_label_1_Template(rf, ctx) { if (rf & 1) {
+    ɵngcc0.ɵɵelementStart(0, "label", 8);
+    ɵngcc0.ɵɵtext(1);
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var ctx_r0 = ɵngcc0.ɵɵnextContext();
+    ɵngcc0.ɵɵadvance(1);
+    ɵngcc0.ɵɵtextInterpolate1("", ctx_r0.label, " ");
+} }
+function HijriGregorianDatepickerComponent_input_3_Template(rf, ctx) { if (rf & 1) {
+    var _r7 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "input", 9, 10);
+    ɵngcc0.ɵɵlistener("ngModelChange", function HijriGregorianDatepickerComponent_input_3_Template_input_ngModelChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.selectedDate = $event; })("click", function HijriGregorianDatepickerComponent_input_3_Template_input_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r7); var _r5 = ɵngcc0.ɵɵreference(1); return _r5.toggle(); })("dateSelect", function HijriGregorianDatepickerComponent_input_3_Template_input_dateSelect_0_listener() { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.dateSelected(); });
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var ctx_r1 = ɵngcc0.ɵɵnextContext();
+    var _r2 = ɵngcc0.ɵɵreference(5);
+    ɵngcc0.ɵɵproperty("placeholder", ctx_r1.placeHolder ? ctx_r1.placeHolder : "d/M/yyyy")("name", ctx_r1.label)("ngModel", ctx_r1.selectedDate)("readonly", ctx_r1.readonly)("minDate", ctx_r1.minGreg)("maxDate", ctx_r1.maxGreg)("required", ctx_r1.isRequired)("disabled", ctx_r1.disabled)("footerTemplate", _r2);
+} }
+function HijriGregorianDatepickerComponent_ng_template_4_Template(rf, ctx) { if (rf & 1) {
+    var _r11 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelement(0, "hr", 11);
+    ɵngcc0.ɵɵelementStart(1, "button", 12);
+    ɵngcc0.ɵɵlistener("click", function HijriGregorianDatepickerComponent_ng_template_4_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r11); var ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.close(); });
+    ɵngcc0.ɵɵtext(2, "Close");
+    ɵngcc0.ɵɵelementEnd();
+    ɵngcc0.ɵɵelementStart(3, "button", 13);
+    ɵngcc0.ɵɵlistener("click", function HijriGregorianDatepickerComponent_ng_template_4_Template_button_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r11); var ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.clear(); });
+    ɵngcc0.ɵɵtext(4, "Clear");
+    ɵngcc0.ɵɵelementEnd();
+} }
+function HijriGregorianDatepickerComponent_hijri_date_picker_6_Template(rf, ctx) { if (rf & 1) {
+    var _r14 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "hijri-date-picker", 14);
+    ɵngcc0.ɵɵlistener("selectedDateChange", function HijriGregorianDatepickerComponent_hijri_date_picker_6_Template_hijri_date_picker_selectedDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); var ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.selectedDate = $event; })("selectedDateChange", function HijriGregorianDatepickerComponent_hijri_date_picker_6_Template_hijri_date_picker_selectedDateChange_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); var ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15.dateSelected(); });
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var ctx_r4 = ɵngcc0.ɵɵnextContext();
+    ɵngcc0.ɵɵproperty("selectedDate", ctx_r4.selectedDate)("readonly", ctx_r4.readonly)("min", ctx_r4.minHijri)("max", ctx_r4.maxHijri)("name", ctx_r4.label)("isRequired", ctx_r4.isRequired)("placeHolder", ctx_r4.placeHolder)("disabled", ctx_r4.disabled);
+} }
 var moment = momentjs;
 import * as moment_ from 'moment-hijri';
 /** @type {?} */
@@ -117,12 +166,6 @@ var HijriGregorianDatepickerComponent = /** @class */ (function () {
         this.selectedDate = this.dateFormatterService.ToGregorian(this.selectedDate);
         this.selectedDateChange.emit(this.selectedDate);
     };
-    HijriGregorianDatepickerComponent.decorators = [
-        { type: Component, args: [{
-                    selector: 'hijri-gregorian-datepicker',
-                    template: "\n    <div class=\"form-group\" provideParentForm>\n      <label class=\"requiredInput\" *ngIf=\"showLabel\" for=\"input-birth-Date\">{{ label }} </label>\n\n      <div class=\"input-group\">\n\n        <input  class=\"form-control\"\n                  [placeholder]=\"placeHolder ? placeHolder : 'd/M/yyyy'\"\n                  [name]=\"label\"\n                  *ngIf=\"selectedDateType == DateType.Gregorian\"\n                  [(ngModel)]=\"selectedDate\"\n                  ngbDatepicker (click)=\"d.toggle()\"\n                  (dateSelect)=\"dateSelected()\"\n                  autocomplete=\"off\"\n                  [readonly]=\"readonly\"\n                  [minDate]=\"minGreg\"\n                  [maxDate]=\"maxGreg\"\n                  [required]=\"isRequired\"\n                  [disabled]=\"disabled\"\n                  [footerTemplate]=\"footerTemplate\"\n                  #d=\"ngbDatepicker\">\n\n          <ng-template #footerTemplate>\n            <hr class=\"my-0\">\n            <button class=\"btn btn-secondary btn-sm m-2 float-right\" type=\"button\" (click)=\"close()\">Close</button>\n            <button class=\"btn btn-primary btn-sm m-2 float-left\" type=\"button\" (click)=\"clear()\">Clear</button>\n          </ng-template>\n\n          <hijri-date-picker *ngIf=\"selectedDateType == DateType.Hijri\"\n                             [(selectedDate)]=\"selectedDate\"\n                             (selectedDateChange)=\"dateSelected()\"\n                             [readonly]=\"readonly\"\n                             [min]=\"minHijri\" [max]=\"maxHijri\"\n                             style=\"flex: 1 1 auto;\"\n                             [name]=\"label\"\n                             [isRequired]=\"isRequired\"\n                             [placeHolder]=\"placeHolder\"\n                             [disabled]=\"disabled\">\n          </hijri-date-picker>\n\n          <div class=\"input-group-append\">\n                  <button class=\"btn btn-sm {{selectedDateType == DateType.Hijri ? 'btn-info focus active' :  'btn-outline-info'}}\" (click)=\"hijriClick()\"  [disabled]=\"disabled\" type=\"button\">\n                     {{hijriLabel ? hijriLabel : 'Hijri' }}\n                  </button>\n                  <button class=\"btn btn-sm {{selectedDateType == DateType.Gregorian ? 'btn-info focus active' :  'btn-outline-info'}}\" (click)=\"gregClick()\" [disabled]=\"disabled\" type=\"button\">\n                      {{GregLabel ? GregLabel : 'Gregorian' }}\n                  </button>\n           </div>\n\n      </div>\n  </div>\n"
-                }] }
-    ];
     /** @nocollapse */
     HijriGregorianDatepickerComponent.ctorParameters = function () { return [
         { type: DateFormatterService }
@@ -145,6 +188,89 @@ var HijriGregorianDatepickerComponent = /** @class */ (function () {
         GregLabel: [{ type: Input }],
         placeHolder: [{ type: Input }]
     };
+HijriGregorianDatepickerComponent.ɵfac = function HijriGregorianDatepickerComponent_Factory(t) { return new (t || HijriGregorianDatepickerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DateFormatterService)); };
+HijriGregorianDatepickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: HijriGregorianDatepickerComponent, selectors: [["hijri-gregorian-datepicker"]], viewQuery: function HijriGregorianDatepickerComponent_Query(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵviewQuery(_c0, true);
+    } if (rf & 2) {
+        var _t;
+        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.datePicker = _t.first);
+    } }, inputs: { showLabel: "showLabel", readonly: "readonly", isRequired: "isRequired", disabled: "disabled", selectedDateType: "selectedDateType", selectedDate: "selectedDate", label: "label", minHijri: "minHijri", maxHijri: "maxHijri", minGreg: "minGreg", maxGreg: "maxGreg", hijriLabel: "hijriLabel", GregLabel: "GregLabel", placeHolder: "placeHolder" }, outputs: { selectedDateChange: "selectedDateChange" }, decls: 12, vars: 13, consts: [["provideParentForm", "", 1, "form-group"], ["class", "requiredInput", "for", "input-birth-Date", 4, "ngIf"], [1, "input-group"], ["class", "form-control", "ngbDatepicker", "", "autocomplete", "off", 3, "placeholder", "name", "ngModel", "readonly", "minDate", "maxDate", "required", "disabled", "footerTemplate", "ngModelChange", "click", "dateSelect", 4, "ngIf"], ["footerTemplate", ""], ["style", "flex: 1 1 auto;", 3, "selectedDate", "readonly", "min", "max", "name", "isRequired", "placeHolder", "disabled", "selectedDateChange", 4, "ngIf"], [1, "input-group-append"], ["type", "button", 3, "disabled", "click"], ["for", "input-birth-Date", 1, "requiredInput"], ["ngbDatepicker", "", "autocomplete", "off", 1, "form-control", 3, "placeholder", "name", "ngModel", "readonly", "minDate", "maxDate", "required", "disabled", "footerTemplate", "ngModelChange", "click", "dateSelect"], ["d", "ngbDatepicker"], [1, "my-0"], ["type", "button", 1, "btn", "btn-secondary", "btn-sm", "m-2", "float-right", 3, "click"], ["type", "button", 1, "btn", "btn-primary", "btn-sm", "m-2", "float-left", 3, "click"], [2, "flex", "1 1 auto", 3, "selectedDate", "readonly", "min", "max", "name", "isRequired", "placeHolder", "disabled", "selectedDateChange"]], template: function HijriGregorianDatepickerComponent_Template(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵelementStart(0, "div", 0);
+        ɵngcc0.ɵɵtemplate(1, HijriGregorianDatepickerComponent_label_1_Template, 2, 1, "label", 1);
+        ɵngcc0.ɵɵelementStart(2, "div", 2);
+        ɵngcc0.ɵɵtemplate(3, HijriGregorianDatepickerComponent_input_3_Template, 2, 9, "input", 3);
+        ɵngcc0.ɵɵtemplate(4, HijriGregorianDatepickerComponent_ng_template_4_Template, 5, 0, "ng-template", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);
+        ɵngcc0.ɵɵtemplate(6, HijriGregorianDatepickerComponent_hijri_date_picker_6_Template, 1, 8, "hijri-date-picker", 5);
+        ɵngcc0.ɵɵelementStart(7, "div", 6);
+        ɵngcc0.ɵɵelementStart(8, "button", 7);
+        ɵngcc0.ɵɵlistener("click", function HijriGregorianDatepickerComponent_Template_button_click_8_listener() { return ctx.hijriClick(); });
+        ɵngcc0.ɵɵtext(9);
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵelementStart(10, "button", 7);
+        ɵngcc0.ɵɵlistener("click", function HijriGregorianDatepickerComponent_Template_button_click_10_listener() { return ctx.gregClick(); });
+        ɵngcc0.ɵɵtext(11);
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵelementEnd();
+    } if (rf & 2) {
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.showLabel);
+        ɵngcc0.ɵɵadvance(2);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.selectedDateType == ctx.DateType.Gregorian);
+        ɵngcc0.ɵɵadvance(3);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.selectedDateType == ctx.DateType.Hijri);
+        ɵngcc0.ɵɵadvance(2);
+        ɵngcc0.ɵɵclassMapInterpolate1("btn btn-sm ", ctx.selectedDateType == ctx.DateType.Hijri ? "btn-info focus active" : "btn-outline-info", "");
+        ɵngcc0.ɵɵproperty("disabled", ctx.disabled);
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.hijriLabel ? ctx.hijriLabel : "Hijri", " ");
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵclassMapInterpolate1("btn btn-sm ", ctx.selectedDateType == ctx.DateType.Gregorian ? "btn-info focus active" : "btn-outline-info", "");
+        ɵngcc0.ɵɵproperty("disabled", ctx.disabled);
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.GregLabel ? ctx.GregLabel : "Gregorian", " ");
+    } }, directives: [ɵngcc2.ProvideParentFormDirective, ɵngcc3.NgIf, ɵngcc4.NgbInputDatepicker, ɵngcc5.DefaultValueAccessor, ɵngcc5.NgControlStatus, ɵngcc5.NgModel, ɵngcc5.RequiredValidator, ɵngcc6.HijriDatepickerComponent], encapsulation: 2 });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HijriGregorianDatepickerComponent, [{
+        type: Component,
+        args: [{
+                selector: 'hijri-gregorian-datepicker',
+                template: "\n    <div class=\"form-group\" provideParentForm>\n      <label class=\"requiredInput\" *ngIf=\"showLabel\" for=\"input-birth-Date\">{{ label }} </label>\n\n      <div class=\"input-group\">\n\n        <input  class=\"form-control\"\n                  [placeholder]=\"placeHolder ? placeHolder : 'd/M/yyyy'\"\n                  [name]=\"label\"\n                  *ngIf=\"selectedDateType == DateType.Gregorian\"\n                  [(ngModel)]=\"selectedDate\"\n                  ngbDatepicker (click)=\"d.toggle()\"\n                  (dateSelect)=\"dateSelected()\"\n                  autocomplete=\"off\"\n                  [readonly]=\"readonly\"\n                  [minDate]=\"minGreg\"\n                  [maxDate]=\"maxGreg\"\n                  [required]=\"isRequired\"\n                  [disabled]=\"disabled\"\n                  [footerTemplate]=\"footerTemplate\"\n                  #d=\"ngbDatepicker\">\n\n          <ng-template #footerTemplate>\n            <hr class=\"my-0\">\n            <button class=\"btn btn-secondary btn-sm m-2 float-right\" type=\"button\" (click)=\"close()\">Close</button>\n            <button class=\"btn btn-primary btn-sm m-2 float-left\" type=\"button\" (click)=\"clear()\">Clear</button>\n          </ng-template>\n\n          <hijri-date-picker *ngIf=\"selectedDateType == DateType.Hijri\"\n                             [(selectedDate)]=\"selectedDate\"\n                             (selectedDateChange)=\"dateSelected()\"\n                             [readonly]=\"readonly\"\n                             [min]=\"minHijri\" [max]=\"maxHijri\"\n                             style=\"flex: 1 1 auto;\"\n                             [name]=\"label\"\n                             [isRequired]=\"isRequired\"\n                             [placeHolder]=\"placeHolder\"\n                             [disabled]=\"disabled\">\n          </hijri-date-picker>\n\n          <div class=\"input-group-append\">\n                  <button class=\"btn btn-sm {{selectedDateType == DateType.Hijri ? 'btn-info focus active' :  'btn-outline-info'}}\" (click)=\"hijriClick()\"  [disabled]=\"disabled\" type=\"button\">\n                     {{hijriLabel ? hijriLabel : 'Hijri' }}\n                  </button>\n                  <button class=\"btn btn-sm {{selectedDateType == DateType.Gregorian ? 'btn-info focus active' :  'btn-outline-info'}}\" (click)=\"gregClick()\" [disabled]=\"disabled\" type=\"button\">\n                      {{GregLabel ? GregLabel : 'Gregorian' }}\n                  </button>\n           </div>\n\n      </div>\n  </div>\n"
+            }]
+    }], function () { return [{ type: ɵngcc1.DateFormatterService }]; }, { selectedDateChange: [{
+            type: Output
+        }], showLabel: [{
+            type: Input
+        }], readonly: [{
+            type: Input
+        }], isRequired: [{
+            type: Input
+        }], disabled: [{
+            type: Input
+        }], selectedDateType: [{
+            type: Input
+        }], selectedDate: [{
+            type: Input
+        }], datePicker: [{
+            type: ViewChild,
+            args: ['d']
+        }], label: [{
+            type: Input
+        }], minHijri: [{
+            type: Input
+        }], maxHijri: [{
+            type: Input
+        }], minGreg: [{
+            type: Input
+        }], maxGreg: [{
+            type: Input
+        }], hijriLabel: [{
+            type: Input
+        }], GregLabel: [{
+            type: Input
+        }], placeHolder: [{
+            type: Input
+        }] }); })();
     return HijriGregorianDatepickerComponent;
 }());
 export { HijriGregorianDatepickerComponent };
@@ -187,4 +313,4 @@ if (false) {
      */
     HijriGregorianDatepickerComponent.prototype.dateFormatterService;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLyIsInNvdXJjZXMiOlsibGliL2hpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyL2hpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTFGLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDcEMsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFFaEUsT0FBTyxLQUFLLFFBQVEsTUFBTSxRQUFRLENBQUM7O0lBQzdCLE1BQU0sR0FBRyxRQUFRO0FBR3ZCLE9BQU8sS0FBSyxPQUFPLE1BQU0sY0FBYyxDQUFDOztJQUVsQyxXQUFXLEdBQUcsT0FBTztBQUczQjtJQW1DRSwyQ0FBcUIsb0JBQTBDO1FBQTFDLHlCQUFvQixHQUFwQixvQkFBb0IsQ0FBc0I7UUF4QnJELHVCQUFrQixHQUFnQyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBR3RFLGNBQVMsR0FBRyxJQUFJLENBQUM7UUFHakIsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUNqQixlQUFVLEdBQUcsS0FBSyxDQUFDO1FBQ25CLGFBQVEsR0FBRyxLQUFLLENBQUM7SUFnQnlDLENBQUM7SUFKcEUsc0JBQUksdURBQVE7Ozs7UUFBWjtZQUNFLE9BQU8sUUFBUSxDQUFDO1FBQ2xCLENBQUM7OztPQUFBOzs7O0lBSUQsb0RBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsRUFBRTtZQUMxQixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQztTQUN4QztJ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O0lBQ2hDLG9EQUFnQzs7SUFFaEMsdURBQTRCOztJQUM1QixzREFBMkI7O0lBRTNCLHdEQUE2Qjs7Ozs7SUFNaEIsaUVBQWtEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge05nYkRhdGVTdHJ1Y3QsIE5nYkRhdGVwaWNrZXJ9IGZyb20gJ0BuZy1ib290c3RyYXAvbmctYm9vdHN0cmFwJztcbmltcG9ydCB7IERhdGVUeXBlIH0gZnJvbSAnLi9jb25zdHMnO1xuaW1wb3J0IHsgRGF0ZUZvcm1hdHRlclNlcnZpY2UgfSBmcm9tICcuL2RhdGUtZm9ybWF0dGVyLnNlcnZpY2UnO1xuXG5pbXBvcnQgKiBhcyBtb21lbnRqcyBmcm9tICdtb21lbnQnO1xuY29uc3QgbW9tZW50ID0gbW9tZW50anM7XG5cblxuaW1wb3J0ICogYXMgbW9tZW50XyBmcm9tICdtb21lbnQtaGlqcmknO1xuaW1wb3J0IHsgTmdGb3JtLCBDb250cm9sQ29udGFpbmVyIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuY29uc3QgbW9tZW50SGlqcmkgPSBtb21lbnRfO1xuXG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2hpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2hpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBIaWpyaUdyZWdvcmlhbkRhdGVwaWNrZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIEBWaWV3Q2hpbGQoJ2QnKSBkYXRlUGlja2VyOiBhbnk7XG5cblxuICBASW5wdXQoKSBzZWxlY3RlZERhdGVUeXBlOiBEYXRlVHlwZTtcbiAgQElucHV0KCkgc2VsZWN0ZWREYXRlOiBOZ2JEYXRlU3RydWN0O1xuICBAT3V0cHV0KCkgc2VsZWN0ZWREYXRlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8TmdiRGF0ZVN0cnVjdD4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgQElucHV0KCkgbGFiZWw6IHN0cmluZztcbiAgQElucHV0KCkgc2hvd0xhYmVsID0gdHJ1ZTtcblxuXG4gIEBJbnB1dCgpIHJlYWRvbmx5ID0gZmFsc2U7XG4gIEBJbnB1dCgpIGlzUmVxdWlyZWQgPSBmYWxzZTtcbiAgQElucHV0KCkgZGlzYWJsZWQgPSBmYWxzZTtcblxuICBASW5wdXQoKSBtaW5IaWpyaTogTmdiRGF0ZVN0cnVjdDtcbiAgQElucHV0KCkgbWF4SGlqcmk6IE5nYkRhdGVTdHJ1Y3Q7XG4gIEBJbnB1dCgpIG1pbkdyZWc6IE5nYkRhdGVTdHJ1Y3Q7XG4gIEBJbnB1dCgpIG1heEdyZWc6IE5nYkRhdGVTdHJ1Y3Q7XG5cbiAgQElucHV0KCkgaGlqcmlMYWJlbDogc3RyaW5nO1xuICBASW5wdXQoKSBHcmVnTGFiZWw6IHN0cmluZztcblxuICBASW5wdXQoKSBwbGFjZUhvbGRlcjogc3RyaW5nO1xuXG4gIGdldCBEYXRlVHlwZSgpIHtcbiAgICByZXR1cm4gRGF0ZVR5cGU7XG4gIH1cblxuICBjb25zdHJ1Y3RvciggcHJpdmF0ZSBkYXRlRm9ybWF0dGVyU2VydmljZTogRGF0ZUZvcm1hdHRlclNlcnZpY2UpIHsgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIGlmICghdGhpcy5zZWxlY3RlZERhdGVUeXBlKSB7XG4gICAgICB0aGlzLnNlbGVjdGVkRGF0ZVR5cGUgPSBEYXRlVHlwZS5IaWpyaTtcbiAgICB9XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICB0aGlzLmRhdGVQaWNrZXIuY2xvc2UoKTtcbiAgfVxuXG4gIGNsZWFyKCkge1xuICAgIHRoaXMuc2VsZWN0ZWREYXRlID0gdW5kZWZpbmVkO1xuICAgIHRoaXMuY2xvc2UoKTtcbiAgICB0aGlzLnNlbGVjdGVkRGF0ZUNoYW5nZS5lbWl0KG51bGwpO1xuICB9XG4gIGdldFNlbGVjdGVkRGF0ZSgpOiBzdHJpbmcge1xuXG4gICAgbGV0IGZvcm1hdHRlZERhdGUgPSB0aGlzLmRhdGVGb3JtYXR0ZXJTZXJ2aWNlLlRvU3RyaW5nKHRoaXMuc2VsZWN0ZWREYXRlKTtcblxuICAgIGlmICh0aGlzLnNlbGVjdGVkRGF0ZVR5cGUgPT0gRGF0ZVR5cGUuSGlqcmkpIHtcbiAgICAgIHJldHVybiBtb21lbnRIaWpyaShmb3JtYXR0ZWREYXRlLCAnaUQvaU0vaVlZWVknKS5sb2NhbGUoJ2VuJykuZm9ybWF0KCk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuc2VsZWN0ZWREYXRlVHlwZSA9PSBEYXRlVHlwZS5HcmVnb3JpYW4pIHtcbiAgICAgIHJldHVybiBtb21lbnQoZm9ybWF0dGVkRGF0ZSwgJ0QvTS9ZWVlZJykubG9jYWxlKCdlbicpLmZvcm1hdCgpO1xuICAgIH1cbiAgfVxuXG4gIGRhdGVTZWxlY3RlZCgpIHtcbiAgICB0aGlzLnNlbGVjdGVkRGF0ZUNoYW5nZS5lbWl0KHRoaXMuc2VsZWN0ZWREYXRlKTtcbiAgfVxuXG4gIGhpanJpQ2xpY2soKSB7XG4gICAgaWYgKHRoaXMuc2VsZWN0ZWREYXRlVHlwZSA9PSBEYXRlVHlwZS5IaWpyaSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLnNlbGVjdGVkRGF0ZVR5cGUgPSBEYXRlVHlwZS5IaWpyaTtcbiAgICAvL3RvIGhpanJpXG4gICAgdGhpcy5zZWxlY3RlZERhdGUgPSB0aGlzLmRhdGVGb3JtYXR0ZXJTZXJ2aWNlLlRvSGlqcmkodGhpcy5zZWxlY3RlZERhdGUpO1xuICAgIHRoaXMuc2VsZWN0ZWREYXRlQ2hhbmdlLmVtaXQodGhpcy5zZWxlY3RlZERhdGUpO1xuICB9XG4gIGdyZWdDbGljaygpIHtcbiAgICBpZiAodGhpcy5zZWxlY3RlZERhdGVUeXBlID09IERhdGVUeXBlLkdyZWdvcmlhbikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLnNlbGVjdGVkRGF0ZVR5cGUgPSBEYXRlVHlwZS5HcmVnb3JpYW47XG4gICAgLy90byBHcmVnb3JpYW5cbiAgICB0aGlzLnNlbGVjdGVkRGF0ZSA9IHRoaXMuZGF0ZUZvcm1hdHRlclNlcnZpY2UuVG9HcmVnb3JpYW4odGhpcy5zZWxlY3RlZERhdGUpO1xuICAgIHRoaXMuc2VsZWN0ZWREYXRlQ2hhbmdlLmVtaXQodGhpcy5zZWxlY3RlZERhdGUpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;charset=utf-8;base64,
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.js.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.js.__ivy_ngcc_bak
new file mode 100644
index 0000000..b28f665
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.js.__ivy_ngcc_bak
@@ -0,0 +1,190 @@
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';
+import { DateType } from './consts';
+import { DateFormatterService } from './date-formatter.service';
+import * as momentjs from 'moment';
+/** @type {?} */
+var moment = momentjs;
+import * as moment_ from 'moment-hijri';
+/** @type {?} */
+var momentHijri = moment_;
+var HijriGregorianDatepickerComponent = /** @class */ (function () {
+    function HijriGregorianDatepickerComponent(dateFormatterService) {
+        this.dateFormatterService = dateFormatterService;
+        this.selectedDateChange = new EventEmitter();
+        this.showLabel = true;
+        this.readonly = false;
+        this.isRequired = false;
+        this.disabled = false;
+    }
+    Object.defineProperty(HijriGregorianDatepickerComponent.prototype, "DateType", {
+        get: /**
+         * @return {?}
+         */
+        function () {
+            return DateType;
+        },
+        enumerable: true,
+        configurable: true
+    });
+    /**
+     * @return {?}
+     */
+    HijriGregorianDatepickerComponent.prototype.ngOnInit = /**
+     * @return {?}
+     */
+    function () {
+        if (!this.selectedDateType) {
+            this.selectedDateType = DateType.Hijri;
+        }
+    };
+    /**
+     * @return {?}
+     */
+    HijriGregorianDatepickerComponent.prototype.close = /**
+     * @return {?}
+     */
+    function () {
+        this.datePicker.close();
+    };
+    /**
+     * @return {?}
+     */
+    HijriGregorianDatepickerComponent.prototype.clear = /**
+     * @return {?}
+     */
+    function () {
+        this.selectedDate = undefined;
+        this.close();
+        this.selectedDateChange.emit(null);
+    };
+    /**
+     * @return {?}
+     */
+    HijriGregorianDatepickerComponent.prototype.getSelectedDate = /**
+     * @return {?}
+     */
+    function () {
+        /** @type {?} */
+        var formattedDate = this.dateFormatterService.ToString(this.selectedDate);
+        if (this.selectedDateType == DateType.Hijri) {
+            return momentHijri(formattedDate, 'iD/iM/iYYYY').locale('en').format();
+        }
+        if (this.selectedDateType == DateType.Gregorian) {
+            return moment(formattedDate, 'D/M/YYYY').locale('en').format();
+        }
+    };
+    /**
+     * @return {?}
+     */
+    HijriGregorianDatepickerComponent.prototype.dateSelected = /**
+     * @return {?}
+     */
+    function () {
+        this.selectedDateChange.emit(this.selectedDate);
+    };
+    /**
+     * @return {?}
+     */
+    HijriGregorianDatepickerComponent.prototype.hijriClick = /**
+     * @return {?}
+     */
+    function () {
+        if (this.selectedDateType == DateType.Hijri) {
+            return;
+        }
+        this.selectedDateType = DateType.Hijri;
+        //to hijri
+        this.selectedDate = this.dateFormatterService.ToHijri(this.selectedDate);
+        this.selectedDateChange.emit(this.selectedDate);
+    };
+    /**
+     * @return {?}
+     */
+    HijriGregorianDatepickerComponent.prototype.gregClick = /**
+     * @return {?}
+     */
+    function () {
+        if (this.selectedDateType == DateType.Gregorian) {
+            return;
+        }
+        this.selectedDateType = DateType.Gregorian;
+        //to Gregorian
+        this.selectedDate = this.dateFormatterService.ToGregorian(this.selectedDate);
+        this.selectedDateChange.emit(this.selectedDate);
+    };
+    HijriGregorianDatepickerComponent.decorators = [
+        { type: Component, args: [{
+                    selector: 'hijri-gregorian-datepicker',
+                    template: "\n    <div class=\"form-group\" provideParentForm>\n      <label class=\"requiredInput\" *ngIf=\"showLabel\" for=\"input-birth-Date\">{{ label }} </label>\n\n      <div class=\"input-group\">\n\n        <input  class=\"form-control\"\n                  [placeholder]=\"placeHolder ? placeHolder : 'd/M/yyyy'\"\n                  [name]=\"label\"\n                  *ngIf=\"selectedDateType == DateType.Gregorian\"\n                  [(ngModel)]=\"selectedDate\"\n                  ngbDatepicker (click)=\"d.toggle()\"\n                  (dateSelect)=\"dateSelected()\"\n                  autocomplete=\"off\"\n                  [readonly]=\"readonly\"\n                  [minDate]=\"minGreg\"\n                  [maxDate]=\"maxGreg\"\n                  [required]=\"isRequired\"\n                  [disabled]=\"disabled\"\n                  [footerTemplate]=\"footerTemplate\"\n                  #d=\"ngbDatepicker\">\n\n          <ng-template #footerTemplate>\n            <hr class=\"my-0\">\n            <button class=\"btn btn-secondary btn-sm m-2 float-right\" type=\"button\" (click)=\"close()\">Close</button>\n            <button class=\"btn btn-primary btn-sm m-2 float-left\" type=\"button\" (click)=\"clear()\">Clear</button>\n          </ng-template>\n\n          <hijri-date-picker *ngIf=\"selectedDateType == DateType.Hijri\"\n                             [(selectedDate)]=\"selectedDate\"\n                             (selectedDateChange)=\"dateSelected()\"\n                             [readonly]=\"readonly\"\n                             [min]=\"minHijri\" [max]=\"maxHijri\"\n                             style=\"flex: 1 1 auto;\"\n                             [name]=\"label\"\n                             [isRequired]=\"isRequired\"\n                             [placeHolder]=\"placeHolder\"\n                             [disabled]=\"disabled\">\n          </hijri-date-picker>\n\n          <div class=\"input-group-append\">\n                  <button class=\"btn btn-sm {{selectedDateType == DateType.Hijri ? 'btn-info focus active' :  'btn-outline-info'}}\" (click)=\"hijriClick()\"  [disabled]=\"disabled\" type=\"button\">\n                     {{hijriLabel ? hijriLabel : 'Hijri' }}\n                  </button>\n                  <button class=\"btn btn-sm {{selectedDateType == DateType.Gregorian ? 'btn-info focus active' :  'btn-outline-info'}}\" (click)=\"gregClick()\" [disabled]=\"disabled\" type=\"button\">\n                      {{GregLabel ? GregLabel : 'Gregorian' }}\n                  </button>\n           </div>\n\n      </div>\n  </div>\n"
+                }] }
+    ];
+    /** @nocollapse */
+    HijriGregorianDatepickerComponent.ctorParameters = function () { return [
+        { type: DateFormatterService }
+    ]; };
+    HijriGregorianDatepickerComponent.propDecorators = {
+        datePicker: [{ type: ViewChild, args: ['d',] }],
+        selectedDateType: [{ type: Input }],
+        selectedDate: [{ type: Input }],
+        selectedDateChange: [{ type: Output }],
+        label: [{ type: Input }],
+        showLabel: [{ type: Input }],
+        readonly: [{ type: Input }],
+        isRequired: [{ type: Input }],
+        disabled: [{ type: Input }],
+        minHijri: [{ type: Input }],
+        maxHijri: [{ type: Input }],
+        minGreg: [{ type: Input }],
+        maxGreg: [{ type: Input }],
+        hijriLabel: [{ type: Input }],
+        GregLabel: [{ type: Input }],
+        placeHolder: [{ type: Input }]
+    };
+    return HijriGregorianDatepickerComponent;
+}());
+export { HijriGregorianDatepickerComponent };
+if (false) {
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.datePicker;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.selectedDateType;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.selectedDate;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.selectedDateChange;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.label;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.showLabel;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.readonly;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.isRequired;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.disabled;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.minHijri;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.maxHijri;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.minGreg;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.maxGreg;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.hijriLabel;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.GregLabel;
+    /** @type {?} */
+    HijriGregorianDatepickerComponent.prototype.placeHolder;
+    /**
+     * @type {?}
+     * @private
+     */
+    HijriGregorianDatepickerComponent.prototype.dateFormatterService;
+}
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLyIsInNvdXJjZXMiOlsibGliL2hpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyL2hpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTFGLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDcEMsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFFaEUsT0FBTyxLQUFLLFFBQVEsTUFBTSxRQUFRLENBQUM7O0lBQzdCLE1BQU0sR0FBRyxRQUFRO0FBR3ZCLE9BQU8sS0FBSyxPQUFPLE1BQU0sY0FBYyxDQUFDOztJQUVsQyxXQUFXLEdBQUcsT0FBTztBQUczQjtJQW1DRSwyQ0FBcUIsb0JBQTBDO1FBQTFDLHlCQUFvQixHQUFwQixvQkFBb0IsQ0FBc0I7UUF4QnJELHVCQUFrQixHQUFnQyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBR3RFLGNBQVMsR0FBRyxJQUFJLENBQUM7UUFHakIsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUNqQixlQUFVLEdBQUcsS0FBSyxDQUFDO1FBQ25CLGFBQVEsR0FBRyxLQUFLLENBQUM7SUFnQnlDLENBQUM7SUFKcEUsc0JBQUksdURBQVE7Ozs7UUFBWjtZQUNFLE9BQU8sUUFBUSxDQUFDO1FBQ2xCLENBQUM7OztPQUFBOzs7O0lBSUQsb0RBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsRUFBRTtZQUMxQixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQztTQUN4QztJ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O0lBQ2hDLG9EQUFnQzs7SUFFaEMsdURBQTRCOztJQUM1QixzREFBMkI7O0lBRTNCLHdEQUE2Qjs7Ozs7SUFNaEIsaUVBQWtEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge05nYkRhdGVTdHJ1Y3QsIE5nYkRhdGVwaWNrZXJ9IGZyb20gJ0BuZy1ib290c3RyYXAvbmctYm9vdHN0cmFwJztcbmltcG9ydCB7IERhdGVUeXBlIH0gZnJvbSAnLi9jb25zdHMnO1xuaW1wb3J0IHsgRGF0ZUZvcm1hdHRlclNlcnZpY2UgfSBmcm9tICcuL2RhdGUtZm9ybWF0dGVyLnNlcnZpY2UnO1xuXG5pbXBvcnQgKiBhcyBtb21lbnRqcyBmcm9tICdtb21lbnQnO1xuY29uc3QgbW9tZW50ID0gbW9tZW50anM7XG5cblxuaW1wb3J0ICogYXMgbW9tZW50XyBmcm9tICdtb21lbnQtaGlqcmknO1xuaW1wb3J0IHsgTmdGb3JtLCBDb250cm9sQ29udGFpbmVyIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuY29uc3QgbW9tZW50SGlqcmkgPSBtb21lbnRfO1xuXG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2hpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2hpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBIaWpyaUdyZWdvcmlhbkRhdGVwaWNrZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIEBWaWV3Q2hpbGQoJ2QnKSBkYXRlUGlja2VyOiBhbnk7XG5cblxuICBASW5wdXQoKSBzZWxlY3RlZERhdGVUeXBlOiBEYXRlVHlwZTtcbiAgQElucHV0KCkgc2VsZWN0ZWREYXRlOiBOZ2JEYXRlU3RydWN0O1xuICBAT3V0cHV0KCkgc2VsZWN0ZWREYXRlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8TmdiRGF0ZVN0cnVjdD4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgQElucHV0KCkgbGFiZWw6IHN0cmluZztcbiAgQElucHV0KCkgc2hvd0xhYmVsID0gdHJ1ZTtcblxuXG4gIEBJbnB1dCgpIHJlYWRvbmx5ID0gZmFsc2U7XG4gIEBJbnB1dCgpIGlzUmVxdWlyZWQgPSBmYWxzZTtcbiAgQElucHV0KCkgZGlzYWJsZWQgPSBmYWxzZTtcblxuICBASW5wdXQoKSBtaW5IaWpyaTogTmdiRGF0ZVN0cnVjdDtcbiAgQElucHV0KCkgbWF4SGlqcmk6IE5nYkRhdGVTdHJ1Y3Q7XG4gIEBJbnB1dCgpIG1pbkdyZWc6IE5nYkRhdGVTdHJ1Y3Q7XG4gIEBJbnB1dCgpIG1heEdyZWc6IE5nYkRhdGVTdHJ1Y3Q7XG5cbiAgQElucHV0KCkgaGlqcmlMYWJlbDogc3RyaW5nO1xuICBASW5wdXQoKSBHcmVnTGFiZWw6IHN0cmluZztcblxuICBASW5wdXQoKSBwbGFjZUhvbGRlcjogc3RyaW5nO1xuXG4gIGdldCBEYXRlVHlwZSgpIHtcbiAgICByZXR1cm4gRGF0ZVR5cGU7XG4gIH1cblxuICBjb25zdHJ1Y3RvciggcHJpdmF0ZSBkYXRlRm9ybWF0dGVyU2VydmljZTogRGF0ZUZvcm1hdHRlclNlcnZpY2UpIHsgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIGlmICghdGhpcy5zZWxlY3RlZERhdGVUeXBlKSB7XG4gICAgICB0aGlzLnNlbGVjdGVkRGF0ZVR5cGUgPSBEYXRlVHlwZS5IaWpyaTtcbiAgICB9XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICB0aGlzLmRhdGVQaWNrZXIuY2xvc2UoKTtcbiAgfVxuXG4gIGNsZWFyKCkge1xuICAgIHRoaXMuc2VsZWN0ZWREYXRlID0gdW5kZWZpbmVkO1xuICAgIHRoaXMuY2xvc2UoKTtcbiAgICB0aGlzLnNlbGVjdGVkRGF0ZUNoYW5nZS5lbWl0KG51bGwpO1xuICB9XG4gIGdldFNlbGVjdGVkRGF0ZSgpOiBzdHJpbmcge1xuXG4gICAgbGV0IGZvcm1hdHRlZERhdGUgPSB0aGlzLmRhdGVGb3JtYXR0ZXJTZXJ2aWNlLlRvU3RyaW5nKHRoaXMuc2VsZWN0ZWREYXRlKTtcblxuICAgIGlmICh0aGlzLnNlbGVjdGVkRGF0ZVR5cGUgPT0gRGF0ZVR5cGUuSGlqcmkpIHtcbiAgICAgIHJldHVybiBtb21lbnRIaWpyaShmb3JtYXR0ZWREYXRlLCAnaUQvaU0vaVlZWVknKS5sb2NhbGUoJ2VuJykuZm9ybWF0KCk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuc2VsZWN0ZWREYXRlVHlwZSA9PSBEYXRlVHlwZS5HcmVnb3JpYW4pIHtcbiAgICAgIHJldHVybiBtb21lbnQoZm9ybWF0dGVkRGF0ZSwgJ0QvTS9ZWVlZJykubG9jYWxlKCdlbicpLmZvcm1hdCgpO1xuICAgIH1cbiAgfVxuXG4gIGRhdGVTZWxlY3RlZCgpIHtcbiAgICB0aGlzLnNlbGVjdGVkRGF0ZUNoYW5nZS5lbWl0KHRoaXMuc2VsZWN0ZWREYXRlKTtcbiAgfVxuXG4gIGhpanJpQ2xpY2soKSB7XG4gICAgaWYgKHRoaXMuc2VsZWN0ZWREYXRlVHlwZSA9PSBEYXRlVHlwZS5IaWpyaSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLnNlbGVjdGVkRGF0ZVR5cGUgPSBEYXRlVHlwZS5IaWpyaTtcbiAgICAvL3RvIGhpanJpXG4gICAgdGhpcy5zZWxlY3RlZERhdGUgPSB0aGlzLmRhdGVGb3JtYXR0ZXJTZXJ2aWNlLlRvSGlqcmkodGhpcy5zZWxlY3RlZERhdGUpO1xuICAgIHRoaXMuc2VsZWN0ZWREYXRlQ2hhbmdlLmVtaXQodGhpcy5zZWxlY3RlZERhdGUpO1xuICB9XG4gIGdyZWdDbGljaygpIHtcbiAgICBpZiAodGhpcy5zZWxlY3RlZERhdGVUeXBlID09IERhdGVUeXBlLkdyZWdvcmlhbikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLnNlbGVjdGVkRGF0ZVR5cGUgPSBEYXRlVHlwZS5HcmVnb3JpYW47XG4gICAgLy90byBHcmVnb3JpYW5cbiAgICB0aGlzLnNlbGVjdGVkRGF0ZSA9IHRoaXMuZGF0ZUZvcm1hdHRlclNlcnZpY2UuVG9HcmVnb3JpYW4odGhpcy5zZWxlY3RlZERhdGUpO1xuICAgIHRoaXMuc2VsZWN0ZWREYXRlQ2hhbmdlLmVtaXQodGhpcy5zZWxlY3RlZERhdGUpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/provide-parent-form.directive.js b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/provide-parent-form.directive.js
index c2a63e7..463e1c3 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/provide-parent-form.directive.js
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/provide-parent-form.directive.js
@@ -9,27 +9,37 @@ import { ControlContainer, NgForm } from '@angular/forms';
  * @param {?} form
  * @return {?}
  */
+import * as ɵngcc0 from '@angular/core';
 export function test(form) {
     return form;
 }
 var ProvideParentFormDirective = /** @class */ (function () {
     function ProvideParentFormDirective() {
     }
-    ProvideParentFormDirective.decorators = [
-        { type: Directive, args: [{
-                    selector: '[provideParentForm]',
-                    providers: [
-                        {
-                            provide: ControlContainer,
-                            useFactory: test,
-                            deps: [[new Optional(), new SkipSelf(), NgForm]]
-                        }
-                    ]
-                },] }
-    ];
     /** @nocollapse */
     ProvideParentFormDirective.ctorParameters = function () { return []; };
+ProvideParentFormDirective.ɵfac = function ProvideParentFormDirective_Factory(t) { return new (t || ProvideParentFormDirective)(); };
+ProvideParentFormDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ProvideParentFormDirective, selectors: [["", "provideParentForm", ""]], features: [ɵngcc0.ɵɵProvidersFeature([
+            {
+                provide: ControlContainer,
+                useFactory: test,
+                deps: [[new Optional(), new SkipSelf(), NgForm]]
+            }
+        ])] });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ProvideParentFormDirective, [{
+        type: Directive,
+        args: [{
+                selector: '[provideParentForm]',
+                providers: [
+                    {
+                        provide: ControlContainer,
+                        useFactory: test,
+                        deps: [[new Optional(), new SkipSelf(), NgForm]]
+                    }
+                ]
+            }]
+    }], function () { return []; }, null); })();
     return ProvideParentFormDirective;
 }());
 export { ProvideParentFormDirective };
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdmlkZS1wYXJlbnQtZm9ybS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvIiwic291cmNlcyI6WyJsaWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvcHJvdmlkZS1wYXJlbnQtZm9ybS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7OztBQUUxRCxNQUFNLFVBQVUsSUFBSSxDQUFDLElBQVk7SUFDL0IsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDO0FBRUQ7SUFZRTtJQUFnQixDQUFDOztnQkFabEIsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxxQkFBcUI7b0JBQy9CLFNBQVMsRUFBRTt3QkFDVDs0QkFDRSxPQUFPLEVBQUUsZ0JBQWdCOzRCQUN6QixVQUFVLEVBQUcsSUFBSTs0QkFDakIsSUFBSSxFQUFFLENBQUMsQ0FBQyxJQUFJLFFBQVEsRUFBRSxFQUFFLElBQUksUUFBUSxFQUFFLEVBQUUsTUFBTSxDQUFDLENBQUM7eUJBQ2pEO3FCQUNKO2lCQUNBOzs7O0lBS0QsaUNBQUM7Q0FBQSxBQWRELElBY0M7U0FKWSwwQkFBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIE9wdGlvbmFsLCBTa2lwU2VsZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29udHJvbENvbnRhaW5lciwgTmdGb3JtIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5leHBvcnQgZnVuY3Rpb24gdGVzdChmb3JtOiBOZ0Zvcm0pIHtcbiAgcmV0dXJuIGZvcm07XG59XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1twcm92aWRlUGFyZW50Rm9ybV0nLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBDb250cm9sQ29udGFpbmVyLFxuICAgICAgdXNlRmFjdG9yeTogIHRlc3QgLFxuICAgICAgZGVwczogW1tuZXcgT3B0aW9uYWwoKSwgbmV3IFNraXBTZWxmKCksIE5nRm9ybV1dXG4gICAgfVxuXVxufSlcbmV4cG9ydCBjbGFzcyBQcm92aWRlUGFyZW50Rm9ybURpcmVjdGl2ZSB7XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdmlkZS1wYXJlbnQtZm9ybS5kaXJlY3RpdmUuanMiLCJzb3VyY2VzIjpbIm5neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9saWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvcHJvdmlkZS1wYXJlbnQtZm9ybS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzFEO0FBQ0c7QUFBbUI7QUFDdEI7O0FBREEsTUFBTSxVQUFVLElBQUksQ0FBQyxJQUFZO0FBQ2pDLElBQUUsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDO0FBRUQ7QUFFYyxJQVVaO0FBR2lCLElBSEQsQ0FBQyxBQUZWO0FBQUM7dUNBVlQsU0FBUyxTQUFDLHpEQVVzQjtHQVQvQixRQUFRLEVBQUUscUJBQXFCLHNCQUMvQixTQUFTLEVBQUUsMEJBQ1QsOEJBQ0UsT0FBTyxFQUFFO2NBQWdCLDhCQUN6QixVQUFVLEVBQUcsSUFBSSw4QkFDakIsSUFBSSxFQUFFLENBQUMsQ0FBQyxJQUFJLFFBQVEsRUFBRSxFQUFFLElBQUksUUFBUSxFQUFFLEVBQUUsTUFBTSxDQUFDLENBQUMsMEJBQ2pEO1FBQ0o7WUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Z0RBTXlDO0FBQUMsSUFEM0MsaUNBQUM7QUFDQSxDQURBLEFBZEQsSUFjQzs7QUFyQkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQVlBLEFBQUEsQUFBQSxBQVpBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQ0EsQUFLQSxBQUFBLEFBQUEsQUFkQSxBQWNBLEFBSkEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgT3B0aW9uYWwsIFNraXBTZWxmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb250cm9sQ29udGFpbmVyLCBOZ0Zvcm0gfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbmV4cG9ydCBmdW5jdGlvbiB0ZXN0KGZvcm06IE5nRm9ybSkge1xuICByZXR1cm4gZm9ybTtcbn1cblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW3Byb3ZpZGVQYXJlbnRGb3JtXScsXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IENvbnRyb2xDb250YWluZXIsXG4gICAgICB1c2VGYWN0b3J5OiAgdGVzdCAsXG4gICAgICBkZXBzOiBbW25ldyBPcHRpb25hbCgpLCBuZXcgU2tpcFNlbGYoKSwgTmdGb3JtXV1cbiAgICB9XG5dXG59KVxuZXhwb3J0IGNsYXNzIFByb3ZpZGVQYXJlbnRGb3JtRGlyZWN0aXZlIHtcblxuICBjb25zdHJ1Y3RvcigpIHsgfVxuXG59XG4iXX0=
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/provide-parent-form.directive.js.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/provide-parent-form.directive.js.__ivy_ngcc_bak
new file mode 100644
index 0000000..c2a63e7
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/hijri-gregorian-datepicker/provide-parent-form.directive.js.__ivy_ngcc_bak
@@ -0,0 +1,35 @@
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/hijri-gregorian-datepicker/provide-parent-form.directive.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+import { Directive, Optional, SkipSelf } from '@angular/core';
+import { ControlContainer, NgForm } from '@angular/forms';
+/**
+ * @param {?} form
+ * @return {?}
+ */
+export function test(form) {
+    return form;
+}
+var ProvideParentFormDirective = /** @class */ (function () {
+    function ProvideParentFormDirective() {
+    }
+    ProvideParentFormDirective.decorators = [
+        { type: Directive, args: [{
+                    selector: '[provideParentForm]',
+                    providers: [
+                        {
+                            provide: ControlContainer,
+                            useFactory: test,
+                            deps: [[new Optional(), new SkipSelf(), NgForm]]
+                        }
+                    ]
+                },] }
+    ];
+    /** @nocollapse */
+    ProvideParentFormDirective.ctorParameters = function () { return []; };
+    return ProvideParentFormDirective;
+}());
+export { ProvideParentFormDirective };
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdmlkZS1wYXJlbnQtZm9ybS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvIiwic291cmNlcyI6WyJsaWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvcHJvdmlkZS1wYXJlbnQtZm9ybS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7OztBQUUxRCxNQUFNLFVBQVUsSUFBSSxDQUFDLElBQVk7SUFDL0IsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDO0FBRUQ7SUFZRTtJQUFnQixDQUFDOztnQkFabEIsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxxQkFBcUI7b0JBQy9CLFNBQVMsRUFBRTt3QkFDVDs0QkFDRSxPQUFPLEVBQUUsZ0JBQWdCOzRCQUN6QixVQUFVLEVBQUcsSUFBSTs0QkFDakIsSUFBSSxFQUFFLENBQUMsQ0FBQyxJQUFJLFFBQVEsRUFBRSxFQUFFLElBQUksUUFBUSxFQUFFLEVBQUUsTUFBTSxDQUFDLENBQUM7eUJBQ2pEO3FCQUNKO2lCQUNBOzs7O0lBS0QsaUNBQUM7Q0FBQSxBQWRELElBY0M7U0FKWSwwQkFBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIE9wdGlvbmFsLCBTa2lwU2VsZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29udHJvbENvbnRhaW5lciwgTmdGb3JtIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5leHBvcnQgZnVuY3Rpb24gdGVzdChmb3JtOiBOZ0Zvcm0pIHtcbiAgcmV0dXJuIGZvcm07XG59XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1twcm92aWRlUGFyZW50Rm9ybV0nLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBDb250cm9sQ29udGFpbmVyLFxuICAgICAgdXNlRmFjdG9yeTogIHRlc3QgLFxuICAgICAgZGVwczogW1tuZXcgT3B0aW9uYWwoKSwgbmV3IFNraXBTZWxmKCksIE5nRm9ybV1dXG4gICAgfVxuXVxufSlcbmV4cG9ydCBjbGFzcyBQcm92aWRlUGFyZW50Rm9ybURpcmVjdGl2ZSB7XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxufVxuIl19
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/ngx-hijri-gregorian-datepicker.component.js b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/ngx-hijri-gregorian-datepicker.component.js
index 3e3edae..f9bd801 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/ngx-hijri-gregorian-datepicker.component.js
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/ngx-hijri-gregorian-datepicker.component.js
@@ -4,6 +4,7 @@
  * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
  */
 import { Component } from '@angular/core';
+import * as ɵngcc0 from '@angular/core';
 var NgxHijriGregorianDatepickerComponent = /** @class */ (function () {
     function NgxHijriGregorianDatepickerComponent() {
     }
@@ -15,15 +16,22 @@ var NgxHijriGregorianDatepickerComponent = /** @class */ (function () {
      */
     function () {
     };
-    NgxHijriGregorianDatepickerComponent.decorators = [
-        { type: Component, args: [{
-                    selector: 'lib-ngx-hijri-gregorian-datepicker',
-                    template: "\n    <p>\n      ngx-hijri-gregorian-datepicker works!\n    </p>\n  "
-                }] }
-    ];
     /** @nocollapse */
     NgxHijriGregorianDatepickerComponent.ctorParameters = function () { return []; };
+NgxHijriGregorianDatepickerComponent.ɵfac = function NgxHijriGregorianDatepickerComponent_Factory(t) { return new (t || NgxHijriGregorianDatepickerComponent)(); };
+NgxHijriGregorianDatepickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxHijriGregorianDatepickerComponent, selectors: [["lib-ngx-hijri-gregorian-datepicker"]], decls: 2, vars: 0, template: function NgxHijriGregorianDatepickerComponent_Template(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵelementStart(0, "p");
+        ɵngcc0.ɵɵtext(1, " ngx-hijri-gregorian-datepicker works! ");
+        ɵngcc0.ɵɵelementEnd();
+    } }, encapsulation: 2 });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxHijriGregorianDatepickerComponent, [{
+        type: Component,
+        args: [{
+                selector: 'lib-ngx-hijri-gregorian-datepicker',
+                template: "\n    <p>\n      ngx-hijri-gregorian-datepicker works!\n    </p>\n  "
+            }]
+    }], function () { return []; }, null); })();
     return NgxHijriGregorianDatepickerComponent;
 }());
 export { NgxHijriGregorianDatepickerComponent };
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci8iLCJzb3VyY2VzIjpbImxpYi9uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUVsRDtJQVdFO0lBQWdCLENBQUM7Ozs7SUFFakIsdURBQVE7OztJQUFSO0lBQ0EsQ0FBQzs7Z0JBZEYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxvQ0FBb0M7b0JBQzlDLFFBQVEsRUFBRSxzRUFJVDtpQkFFRjs7OztJQVFELDJDQUFDO0NBQUEsQUFoQkQsSUFnQkM7U0FQWSxvQ0FBb0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdsaWItbmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8cD5cbiAgICAgIG5neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlciB3b3JrcyFcbiAgICA8L3A+XG4gIGAsXG4gIHN0eWxlczogW11cbn0pXG5leHBvcnQgY2xhc3MgTmd4SGlqcmlHcmVnb3JpYW5EYXRlcGlja2VyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBjb25zdHJ1Y3RvcigpIHsgfVxuXG4gIG5nT25Jbml0KCkge1xuICB9XG5cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyL2xpYi9uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQzs7QUFFbEQ7QUFFUyxJQVNQO0FBTU8sSUFOUyxDQUFDO0FBQ25CO0FBQ087QUFJSDtBQUFRLElBSlYsdURBQVE7QUFDUjtBQUdZO0FBQVEsSUFKcEI7QUFDRCxJQUFDLENBQUMsQ0FMSztBQUFDO2lEQVRSLFNBQVMsU0FBQyxuRUFTcUI7R0FSOUIsUUFBUSxFQUFFLG9DQUFvQyxzQkFDOUMsUUFBUSxFQUFFLHNFQUlUO0tBRUY7Ozs7Ozs7Ozs7O2dEQVNFO0FBQUMsSUFESiwyQ0FBQztBQUNBLENBREEsQUFoQkQsSUFnQkM7O0FBbEJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQVdBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFkQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUlBLEFBRUEsQUFRQSxBQUFBLEFBQUEsQUFoQkEsQUFnQkEsQUFQQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbGliLW5neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlcicsXG4gIHRlbXBsYXRlOiBgXG4gICAgPHA+XG4gICAgICBuZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIgd29ya3MhXG4gICAgPC9wPlxuICBgLFxuICBzdHlsZXM6IFtdXG59KVxuZXhwb3J0IGNsYXNzIE5neEhpanJpR3JlZ29yaWFuRGF0ZXBpY2tlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxuICBuZ09uSW5pdCgpIHtcbiAgfVxuXG59XG4iXX0=
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/ngx-hijri-gregorian-datepicker.component.js.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/ngx-hijri-gregorian-datepicker.component.js.__ivy_ngcc_bak
new file mode 100644
index 0000000..3e3edae
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/ngx-hijri-gregorian-datepicker.component.js.__ivy_ngcc_bak
@@ -0,0 +1,29 @@
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/ngx-hijri-gregorian-datepicker.component.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+import { Component } from '@angular/core';
+var NgxHijriGregorianDatepickerComponent = /** @class */ (function () {
+    function NgxHijriGregorianDatepickerComponent() {
+    }
+    /**
+     * @return {?}
+     */
+    NgxHijriGregorianDatepickerComponent.prototype.ngOnInit = /**
+     * @return {?}
+     */
+    function () {
+    };
+    NgxHijriGregorianDatepickerComponent.decorators = [
+        { type: Component, args: [{
+                    selector: 'lib-ngx-hijri-gregorian-datepicker',
+                    template: "\n    <p>\n      ngx-hijri-gregorian-datepicker works!\n    </p>\n  "
+                }] }
+    ];
+    /** @nocollapse */
+    NgxHijriGregorianDatepickerComponent.ctorParameters = function () { return []; };
+    return NgxHijriGregorianDatepickerComponent;
+}());
+export { NgxHijriGregorianDatepickerComponent };
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci8iLCJzb3VyY2VzIjpbImxpYi9uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUVsRDtJQVdFO0lBQWdCLENBQUM7Ozs7SUFFakIsdURBQVE7OztJQUFSO0lBQ0EsQ0FBQzs7Z0JBZEYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxvQ0FBb0M7b0JBQzlDLFFBQVEsRUFBRSxzRUFJVDtpQkFFRjs7OztJQVFELDJDQUFDO0NBQUEsQUFoQkQsSUFnQkM7U0FQWSxvQ0FBb0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdsaWItbmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8cD5cbiAgICAgIG5neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlciB3b3JrcyFcbiAgICA8L3A+XG4gIGAsXG4gIHN0eWxlczogW11cbn0pXG5leHBvcnQgY2xhc3MgTmd4SGlqcmlHcmVnb3JpYW5EYXRlcGlja2VyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBjb25zdHJ1Y3RvcigpIHsgfVxuXG4gIG5nT25Jbml0KCkge1xuICB9XG5cbn1cbiJdfQ==
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/ngx-hijri-gregorian-datepicker.module.js b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/ngx-hijri-gregorian-datepicker.module.js
index 1974f79..ad592c9 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/ngx-hijri-gregorian-datepicker.module.js
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/ngx-hijri-gregorian-datepicker.module.js
@@ -13,31 +13,50 @@ import { NgbModule, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';
 import { DateFormatterService } from './hijri-gregorian-datepicker/date-formatter.service';
 import { CustomNgbDateParserFormatter } from './hijri-gregorian-datepicker/CustomNgbDateParserFormatter';
 import { ProvideParentFormDirective } from './hijri-gregorian-datepicker/provide-parent-form.directive';
+import * as ɵngcc0 from '@angular/core';
 var NgxHijriGregorianDatepickerModule = /** @class */ (function () {
     function NgxHijriGregorianDatepickerModule() {
     }
-    NgxHijriGregorianDatepickerModule.decorators = [
-        { type: NgModule, args: [{
-                    declarations: [
-                        NgxHijriGregorianDatepickerComponent,
-                        HijriGregorianDatepickerComponent,
-                        HijriDatepickerComponent,
-                        ProvideParentFormDirective
-                    ],
-                    imports: [
-                        CommonModule,
-                        ReactiveFormsModule,
-                        FormsModule,
-                        NgbModule
-                    ],
-                    providers: [
-                        { provide: NgbDateParserFormatter, useClass: CustomNgbDateParserFormatter },
-                        DateFormatterService
-                    ],
-                    exports: [HijriGregorianDatepickerComponent, NgxHijriGregorianDatepickerComponent]
-                },] }
-    ];
+NgxHijriGregorianDatepickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxHijriGregorianDatepickerModule });
+NgxHijriGregorianDatepickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxHijriGregorianDatepickerModule_Factory(t) { return new (t || NgxHijriGregorianDatepickerModule)(); }, providers: [
+        { provide: NgbDateParserFormatter, useClass: CustomNgbDateParserFormatter },
+        DateFormatterService
+    ], imports: [[
+            CommonModule,
+            ReactiveFormsModule,
+            FormsModule,
+            NgbModule
+        ]] });
+(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxHijriGregorianDatepickerModule, { declarations: function () { return [NgxHijriGregorianDatepickerComponent,
+        HijriGregorianDatepickerComponent,
+        HijriDatepickerComponent,
+        ProvideParentFormDirective]; }, imports: function () { return [CommonModule,
+        ReactiveFormsModule,
+        FormsModule,
+        NgbModule]; }, exports: function () { return [HijriGregorianDatepickerComponent, NgxHijriGregorianDatepickerComponent]; } }); })();
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxHijriGregorianDatepickerModule, [{
+        type: NgModule,
+        args: [{
+                declarations: [
+                    NgxHijriGregorianDatepickerComponent,
+                    HijriGregorianDatepickerComponent,
+                    HijriDatepickerComponent,
+                    ProvideParentFormDirective
+                ],
+                imports: [
+                    CommonModule,
+                    ReactiveFormsModule,
+                    FormsModule,
+                    NgbModule
+                ],
+                providers: [
+                    { provide: NgbDateParserFormatter, useClass: CustomNgbDateParserFormatter },
+                    DateFormatterService
+                ],
+                exports: [HijriGregorianDatepickerComponent, NgxHijriGregorianDatepickerComponent]
+            }]
+    }], function () { return []; }, null); })();
     return NgxHijriGregorianDatepickerModule;
 }());
 export { NgxHijriGregorianDatepickerModule };
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci8iLCJzb3VyY2VzIjpbImxpYi9uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsb0NBQW9DLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUNsRyxPQUFPLEVBQUUsaUNBQWlDLEVBQUUsTUFBTSxtRUFBbUUsQ0FBQztBQUN0SCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSwwRUFBMEUsQ0FBQztBQUNwSCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLG1CQUFtQixFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxTQUFTLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUMvRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQUMzRixPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSwyREFBMkQsQ0FBQztBQUN6RyxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSw0REFBNEQsQ0FBQztBQUV4RztJQUFBO0lBbUJpRCxDQUFDOztnQkFuQmpELFFBQVEsU0FBQztvQkFDUixZQUFZLEVBQUU7d0JBQ1osb0NBQW9DO3dCQUNwQyxpQ0FBaUM7d0JBQ2pDLHdCQUF3Qjt3QkFDeEIsMEJBQTBCO3FCQUMzQjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AsWUFBWTt3QkFDWixtQkFBbUI7d0JBQ25CLFdBQVc7d0JBQ1gsU0FBUztxQkFDVjtvQkFDRCxTQUFTLEVBQUU7d0JBQ1QsRUFBQyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsUUFBUSxFQUFFLDRCQUE0QixFQUFDO3dCQUN6RSxvQkFBb0I7cUJBQ3JCO29CQUNELE9BQU8sRUFBRSxDQUFFLGlDQUFpQyxFQUFFLG9DQUFvQyxDQUFDO2lCQUNwRjs7SUFDZ0Qsd0NBQUM7Q0FBQSxBQW5CbEQsSUFtQmtEO1NBQXJDLGlDQUFpQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ3hIaWpyaUdyZWdvcmlhbkRhdGVwaWNrZXJDb21wb25lbnQgfSBmcm9tICcuL25neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgSGlqcmlHcmVnb3JpYW5EYXRlcGlja2VyQ29tcG9uZW50IH0gZnJvbSAnLi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgSGlqcmlEYXRlcGlja2VyQ29tcG9uZW50IH0gZnJvbSAnLi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9oaWpyaS1kYXRlcGlja2VyL2hpanJpLWRhdGVwaWNrZXIuY29tcG9uZW50JztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBSZWFjdGl2ZUZvcm1zTW9kdWxlLCBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IE5nYk1vZHVsZSwgTmdiRGF0ZVBhcnNlckZvcm1hdHRlciB9IGZyb20gJ0BuZy1ib290c3RyYXAvbmctYm9vdHN0cmFwJztcbmltcG9ydCB7IERhdGVGb3JtYXR0ZXJTZXJ2aWNlIH0gZnJvbSAnLi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9kYXRlLWZvcm1hdHRlci5zZXJ2aWNlJztcbmltcG9ydCB7IEN1c3RvbU5nYkRhdGVQYXJzZXJGb3JtYXR0ZXIgfSBmcm9tICcuL2hpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyL0N1c3RvbU5nYkRhdGVQYXJzZXJGb3JtYXR0ZXInO1xuaW1wb3J0IHsgUHJvdmlkZVBhcmVudEZvcm1EaXJlY3RpdmUgfSBmcm9tICcuL2hpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyL3Byb3ZpZGUtcGFyZW50LWZvcm0uZGlyZWN0aXZlJztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgTmd4SGlqcmlHcmVnb3JpYW5EYXRlcGlja2VyQ29tcG9uZW50LFxuICAgIEhpanJpR3JlZ29yaWFuRGF0ZXBpY2tlckNvbXBvbmVudCxcbiAgICBIaWpyaURhdGVwaWNrZXJDb21wb25lbnQsXG4gICAgUHJvdmlkZVBhcmVudEZvcm1EaXJlY3RpdmVcbiAgXSxcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSAsXG4gICAgUmVhY3RpdmVGb3Jtc01vZHVsZSxcbiAgICBGb3Jtc01vZHVsZSxcbiAgICBOZ2JNb2R1bGVcbiAgXSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge3Byb3ZpZGU6IE5nYkRhdGVQYXJzZXJGb3JtYXR0ZXIsIHVzZUNsYXNzOiBDdXN0b21OZ2JEYXRlUGFyc2VyRm9ybWF0dGVyfSxcbiAgICBEYXRlRm9ybWF0dGVyU2VydmljZVxuICBdLFxuICBleHBvcnRzOiBbIEhpanJpR3JlZ29yaWFuRGF0ZXBpY2tlckNvbXBvbmVudCwgTmd4SGlqcmlHcmVnb3JpYW5EYXRlcGlja2VyQ29tcG9uZW50XVxufSlcbmV4cG9ydCBjbGFzcyBOZ3hIaWpyaUdyZWdvcmlhbkRhdGVwaWNrZXJNb2R1bGUgeyB9XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyL2xpYi9uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsb0NBQW9DLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUNsRyxPQUFPLEVBQUUsaUNBQWlDLEVBQUUsTUFBTSxtRUFBbUUsQ0FBQztBQUN0SCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSwwRUFBMEUsQ0FBQztBQUNwSCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLG1CQUFtQixFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxTQUFTLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUMvRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQUMzRixPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSwyREFBMkQsQ0FBQztBQUN6RyxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSw0REFBNEQsQ0FBQzs7QUFFeEc7QUFFdUMsSUFGdkM7QUFFaUIsSUFpQmdDLENBQUM7cUVBbkJqRCxRQUFRLFNBQUMsc0JBQ1I7U0FBWSxFQUFFLDBCQUNaLG9DQUFvQywwQkFDcEMsaUNBQWlDLDBCQUNqQyx3QkFBd0I7S0FDeEIsMEJBQTBCLHNCQUMzQixzQkFDRCxPQUFPLEVBQUU7eUJBQ1A7UUFBWTtlQUNaO1FBQW1CO0NBQ25CLFdBQVc7YUFDWDtBQUFTO09BQ1Ysc0JBQ0QsU0FBUyxFQUFFLDBCQUNULEVBQUMsT0FBTyxFQUFFLHNCQUFzQixFQUFFLFFBQVEsRUFBRSw0QkFBNEIsRUFBQywwQkFDekUsb0JBQW9CO01BQ3JCLHNCQUNELE9BQU8sRUFBRSxDQUFFOzRCQUFpQyxFQUFFO2dDQUFvQyxDQUFDLGtCQUNwRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztnREFDUTtBQUFDLElBQXVDLHdDQUFDO0FBQ2pELENBRGlELEFBbkJsRCxJQW1Ca0Q7O0FBOUJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFtQkEsQUFBQSxBQW5CQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFBQSxBQW5CQSxBQW1CQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmd4SGlqcmlHcmVnb3JpYW5EYXRlcGlja2VyQ29tcG9uZW50IH0gZnJvbSAnLi9uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIuY29tcG9uZW50JztcbmltcG9ydCB7IEhpanJpR3JlZ29yaWFuRGF0ZXBpY2tlckNvbXBvbmVudCB9IGZyb20gJy4vaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIuY29tcG9uZW50JztcbmltcG9ydCB7IEhpanJpRGF0ZXBpY2tlckNvbXBvbmVudCB9IGZyb20gJy4vaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvaGlqcmktZGF0ZXBpY2tlci9oaWpyaS1kYXRlcGlja2VyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgUmVhY3RpdmVGb3Jtc01vZHVsZSwgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBOZ2JNb2R1bGUsIE5nYkRhdGVQYXJzZXJGb3JtYXR0ZXIgfSBmcm9tICdAbmctYm9vdHN0cmFwL25nLWJvb3RzdHJhcCc7XG5pbXBvcnQgeyBEYXRlRm9ybWF0dGVyU2VydmljZSB9IGZyb20gJy4vaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvZGF0ZS1mb3JtYXR0ZXIuc2VydmljZSc7XG5pbXBvcnQgeyBDdXN0b21OZ2JEYXRlUGFyc2VyRm9ybWF0dGVyIH0gZnJvbSAnLi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9DdXN0b21OZ2JEYXRlUGFyc2VyRm9ybWF0dGVyJztcbmltcG9ydCB7IFByb3ZpZGVQYXJlbnRGb3JtRGlyZWN0aXZlIH0gZnJvbSAnLi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9wcm92aWRlLXBhcmVudC1mb3JtLmRpcmVjdGl2ZSc7XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1xuICAgIE5neEhpanJpR3JlZ29yaWFuRGF0ZXBpY2tlckNvbXBvbmVudCxcbiAgICBIaWpyaUdyZWdvcmlhbkRhdGVwaWNrZXJDb21wb25lbnQsXG4gICAgSGlqcmlEYXRlcGlja2VyQ29tcG9uZW50LFxuICAgIFByb3ZpZGVQYXJlbnRGb3JtRGlyZWN0aXZlXG4gIF0sXG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGUgLFxuICAgIFJlYWN0aXZlRm9ybXNNb2R1bGUsXG4gICAgRm9ybXNNb2R1bGUsXG4gICAgTmdiTW9kdWxlXG4gIF0sXG4gIHByb3ZpZGVyczogW1xuICAgIHtwcm92aWRlOiBOZ2JEYXRlUGFyc2VyRm9ybWF0dGVyLCB1c2VDbGFzczogQ3VzdG9tTmdiRGF0ZVBhcnNlckZvcm1hdHRlcn0sXG4gICAgRGF0ZUZvcm1hdHRlclNlcnZpY2VcbiAgXSxcbiAgZXhwb3J0czogWyBIaWpyaUdyZWdvcmlhbkRhdGVwaWNrZXJDb21wb25lbnQsIE5neEhpanJpR3JlZ29yaWFuRGF0ZXBpY2tlckNvbXBvbmVudF1cbn0pXG5leHBvcnQgY2xhc3MgTmd4SGlqcmlHcmVnb3JpYW5EYXRlcGlja2VyTW9kdWxlIHsgfVxuIl19
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/ngx-hijri-gregorian-datepicker.module.js.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/ngx-hijri-gregorian-datepicker.module.js.__ivy_ngcc_bak
new file mode 100644
index 0000000..1974f79
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/ngx-hijri-gregorian-datepicker.module.js.__ivy_ngcc_bak
@@ -0,0 +1,43 @@
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/ngx-hijri-gregorian-datepicker.module.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+import { NgModule } from '@angular/core';
+import { NgxHijriGregorianDatepickerComponent } from './ngx-hijri-gregorian-datepicker.component';
+import { HijriGregorianDatepickerComponent } from './hijri-gregorian-datepicker/hijri-gregorian-datepicker.component';
+import { HijriDatepickerComponent } from './hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component';
+import { CommonModule } from '@angular/common';
+import { ReactiveFormsModule, FormsModule } from '@angular/forms';
+import { NgbModule, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';
+import { DateFormatterService } from './hijri-gregorian-datepicker/date-formatter.service';
+import { CustomNgbDateParserFormatter } from './hijri-gregorian-datepicker/CustomNgbDateParserFormatter';
+import { ProvideParentFormDirective } from './hijri-gregorian-datepicker/provide-parent-form.directive';
+var NgxHijriGregorianDatepickerModule = /** @class */ (function () {
+    function NgxHijriGregorianDatepickerModule() {
+    }
+    NgxHijriGregorianDatepickerModule.decorators = [
+        { type: NgModule, args: [{
+                    declarations: [
+                        NgxHijriGregorianDatepickerComponent,
+                        HijriGregorianDatepickerComponent,
+                        HijriDatepickerComponent,
+                        ProvideParentFormDirective
+                    ],
+                    imports: [
+                        CommonModule,
+                        ReactiveFormsModule,
+                        FormsModule,
+                        NgbModule
+                    ],
+                    providers: [
+                        { provide: NgbDateParserFormatter, useClass: CustomNgbDateParserFormatter },
+                        DateFormatterService
+                    ],
+                    exports: [HijriGregorianDatepickerComponent, NgxHijriGregorianDatepickerComponent]
+                },] }
+    ];
+    return NgxHijriGregorianDatepickerModule;
+}());
+export { NgxHijriGregorianDatepickerModule };
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci8iLCJzb3VyY2VzIjpbImxpYi9uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsb0NBQW9DLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUNsRyxPQUFPLEVBQUUsaUNBQWlDLEVBQUUsTUFBTSxtRUFBbUUsQ0FBQztBQUN0SCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSwwRUFBMEUsQ0FBQztBQUNwSCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLG1CQUFtQixFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxTQUFTLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUMvRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQUMzRixPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSwyREFBMkQsQ0FBQztBQUN6RyxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSw0REFBNEQsQ0FBQztBQUV4RztJQUFBO0lBbUJpRCxDQUFDOztnQkFuQmpELFFBQVEsU0FBQztvQkFDUixZQUFZLEVBQUU7d0JBQ1osb0NBQW9DO3dCQUNwQyxpQ0FBaUM7d0JBQ2pDLHdCQUF3Qjt3QkFDeEIsMEJBQTBCO3FCQUMzQjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AsWUFBWTt3QkFDWixtQkFBbUI7d0JBQ25CLFdBQVc7d0JBQ1gsU0FBUztxQkFDVjtvQkFDRCxTQUFTLEVBQUU7d0JBQ1QsRUFBQyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsUUFBUSxFQUFFLDRCQUE0QixFQUFDO3dCQUN6RSxvQkFBb0I7cUJBQ3JCO29CQUNELE9BQU8sRUFBRSxDQUFFLGlDQUFpQyxFQUFFLG9DQUFvQyxDQUFDO2lCQUNwRjs7SUFDZ0Qsd0NBQUM7Q0FBQSxBQW5CbEQsSUFtQmtEO1NBQXJDLGlDQUFpQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ3hIaWpyaUdyZWdvcmlhbkRhdGVwaWNrZXJDb21wb25lbnQgfSBmcm9tICcuL25neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgSGlqcmlHcmVnb3JpYW5EYXRlcGlja2VyQ29tcG9uZW50IH0gZnJvbSAnLi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgSGlqcmlEYXRlcGlja2VyQ29tcG9uZW50IH0gZnJvbSAnLi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9oaWpyaS1kYXRlcGlja2VyL2hpanJpLWRhdGVwaWNrZXIuY29tcG9uZW50JztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBSZWFjdGl2ZUZvcm1zTW9kdWxlLCBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IE5nYk1vZHVsZSwgTmdiRGF0ZVBhcnNlckZvcm1hdHRlciB9IGZyb20gJ0BuZy1ib290c3RyYXAvbmctYm9vdHN0cmFwJztcbmltcG9ydCB7IERhdGVGb3JtYXR0ZXJTZXJ2aWNlIH0gZnJvbSAnLi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9kYXRlLWZvcm1hdHRlci5zZXJ2aWNlJztcbmltcG9ydCB7IEN1c3RvbU5nYkRhdGVQYXJzZXJGb3JtYXR0ZXIgfSBmcm9tICcuL2hpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyL0N1c3RvbU5nYkRhdGVQYXJzZXJGb3JtYXR0ZXInO1xuaW1wb3J0IHsgUHJvdmlkZVBhcmVudEZvcm1EaXJlY3RpdmUgfSBmcm9tICcuL2hpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyL3Byb3ZpZGUtcGFyZW50LWZvcm0uZGlyZWN0aXZlJztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgTmd4SGlqcmlHcmVnb3JpYW5EYXRlcGlja2VyQ29tcG9uZW50LFxuICAgIEhpanJpR3JlZ29yaWFuRGF0ZXBpY2tlckNvbXBvbmVudCxcbiAgICBIaWpyaURhdGVwaWNrZXJDb21wb25lbnQsXG4gICAgUHJvdmlkZVBhcmVudEZvcm1EaXJlY3RpdmVcbiAgXSxcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSAsXG4gICAgUmVhY3RpdmVGb3Jtc01vZHVsZSxcbiAgICBGb3Jtc01vZHVsZSxcbiAgICBOZ2JNb2R1bGVcbiAgXSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge3Byb3ZpZGU6IE5nYkRhdGVQYXJzZXJGb3JtYXR0ZXIsIHVzZUNsYXNzOiBDdXN0b21OZ2JEYXRlUGFyc2VyRm9ybWF0dGVyfSxcbiAgICBEYXRlRm9ybWF0dGVyU2VydmljZVxuICBdLFxuICBleHBvcnRzOiBbIEhpanJpR3JlZ29yaWFuRGF0ZXBpY2tlckNvbXBvbmVudCwgTmd4SGlqcmlHcmVnb3JpYW5EYXRlcGlja2VyQ29tcG9uZW50XVxufSlcbmV4cG9ydCBjbGFzcyBOZ3hIaWpyaUdyZWdvcmlhbkRhdGVwaWNrZXJNb2R1bGUgeyB9XG4iXX0=
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/ngx-hijri-gregorian-datepicker.service.js b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/ngx-hijri-gregorian-datepicker.service.js
index e71b903..ecbc859 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/ngx-hijri-gregorian-datepicker.service.js
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/ngx-hijri-gregorian-datepicker.service.js
@@ -5,18 +5,22 @@
  */
 import { Injectable } from '@angular/core';
 import * as i0 from "@angular/core";
+import * as ɵngcc0 from '@angular/core';
 var NgxHijriGregorianDatepickerService = /** @class */ (function () {
     function NgxHijriGregorianDatepickerService() {
     }
-    NgxHijriGregorianDatepickerService.decorators = [
-        { type: Injectable, args: [{
-                    providedIn: 'root'
-                },] }
-    ];
     /** @nocollapse */
     NgxHijriGregorianDatepickerService.ctorParameters = function () { return []; };
     /** @nocollapse */ NgxHijriGregorianDatepickerService.ngInjectableDef = i0.defineInjectable({ factory: function NgxHijriGregorianDatepickerService_Factory() { return new NgxHijriGregorianDatepickerService(); }, token: NgxHijriGregorianDatepickerService, providedIn: "root" });
+NgxHijriGregorianDatepickerService.ɵfac = function NgxHijriGregorianDatepickerService_Factory(t) { return new (t || NgxHijriGregorianDatepickerService)(); };
+NgxHijriGregorianDatepickerService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgxHijriGregorianDatepickerService, factory: function (t) { return NgxHijriGregorianDatepickerService.ɵfac(t); }, providedIn: 'root' });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxHijriGregorianDatepickerService, [{
+        type: Injectable,
+        args: [{
+                providedIn: 'root'
+            }]
+    }], function () { return []; }, null); })();
     return NgxHijriGregorianDatepickerService;
 }());
 export { NgxHijriGregorianDatepickerService };
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvIiwic291cmNlcyI6WyJsaWIvbmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQUUzQztJQUtFO0lBQWdCLENBQUM7O2dCQUxsQixVQUFVLFNBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzs7Ozs2Q0FKRDtDQVFDLEFBTkQsSUFNQztTQUhZLGtDQUFrQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgTmd4SGlqcmlHcmVnb3JpYW5EYXRlcGlja2VyU2VydmljZSB7XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLnNlcnZpY2UuanMiLCJzb3VyY2VzIjpbIm5neC1oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9saWIvbmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDOztBQUNBO0FBR2dDLElBRTlCO0FBRTBCLElBRlYsQ0FBQyxBQUZWO0FBQUM7K0NBSFQsVUFBVSxTQUFDLGxFQUdxQjtJQUYvQixVQUFVLEVBQUUsTUFBTSxrQkFDbkIseENBSzJDOzs7Ozs7OztnREFBd1I7QUFBQyw2Q0FUclU7QUFBRSxDQVFELEFBTkQsSUFNQzs7QUFSQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFLQSxBQUFBLEFBQUEsQUFMQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBSkEsQUFRQSxBQU5BLEFBTUEsQUFIQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBOZ3hIaWpyaUdyZWdvcmlhbkRhdGVwaWNrZXJTZXJ2aWNlIHtcblxuICBjb25zdHJ1Y3RvcigpIHsgfVxufVxuIl19
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/ngx-hijri-gregorian-datepicker.service.js.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/ngx-hijri-gregorian-datepicker.service.js.__ivy_ngcc_bak
new file mode 100644
index 0000000..e71b903
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm5/lib/ngx-hijri-gregorian-datepicker.service.js.__ivy_ngcc_bak
@@ -0,0 +1,22 @@
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/ngx-hijri-gregorian-datepicker.service.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+import { Injectable } from '@angular/core';
+import * as i0 from "@angular/core";
+var NgxHijriGregorianDatepickerService = /** @class */ (function () {
+    function NgxHijriGregorianDatepickerService() {
+    }
+    NgxHijriGregorianDatepickerService.decorators = [
+        { type: Injectable, args: [{
+                    providedIn: 'root'
+                },] }
+    ];
+    /** @nocollapse */
+    NgxHijriGregorianDatepickerService.ctorParameters = function () { return []; };
+    /** @nocollapse */ NgxHijriGregorianDatepickerService.ngInjectableDef = i0.defineInjectable({ factory: function NgxHijriGregorianDatepickerService_Factory() { return new NgxHijriGregorianDatepickerService(); }, token: NgxHijriGregorianDatepickerService, providedIn: "root" });
+    return NgxHijriGregorianDatepickerService;
+}());
+export { NgxHijriGregorianDatepickerService };
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvIiwic291cmNlcyI6WyJsaWIvbmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQUUzQztJQUtFO0lBQWdCLENBQUM7O2dCQUxsQixVQUFVLFNBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzs7Ozs2Q0FKRDtDQVFDLEFBTkQsSUFNQztTQUhZLGtDQUFrQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgTmd4SGlqcmlHcmVnb3JpYW5EYXRlcGlja2VyU2VydmljZSB7XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cbn1cbiJdfQ==
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm5/ngx-hijri-gregorian-datepicker.js b/node_modules/ngx-hijri-gregorian-datepicker/esm5/ngx-hijri-gregorian-datepicker.js
index 3484206..8766692 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/esm5/ngx-hijri-gregorian-datepicker.js
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm5/ngx-hijri-gregorian-datepicker.js
@@ -11,4 +11,4 @@ export { CustomNgbDateParserFormatter as ɵe } from './lib/hijri-gregorian-datep
 export { IslamicI18n as ɵb } from './lib/hijri-gregorian-datepicker/IslamicI18n';
 export { HijriDatepickerComponent as ɵa } from './lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component';
 export { ProvideParentFormDirective as ɵd, test as ɵc } from './lib/hijri-gregorian-datepicker/provide-parent-form.directive';
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLyIsInNvdXJjZXMiOlsibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBSUEsK0xBQWMsY0FBYyxDQUFDO0FBRTdCLE9BQU8sRUFBQyw0QkFBNEIsSUFBSSxFQUFFLEVBQUMsTUFBTSwrREFBK0QsQ0FBQztBQUNqSCxPQUFPLEVBQUMsV0FBVyxJQUFJLEVBQUUsRUFBQyxNQUFNLDhDQUE4QyxDQUFDO0FBQy9FLE9BQU8sRUFBQyx3QkFBd0IsSUFBSSxFQUFFLEVBQUMsTUFBTSw4RUFBOEUsQ0FBQztBQUM1SCxPQUFPLEVBQUMsMEJBQTBCLElBQUksRUFBRSxFQUFDLElBQUksSUFBSSxFQUFFLEVBQUMsTUFBTSxnRUFBZ0UsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWMtYXBpJztcblxuZXhwb3J0IHtDdXN0b21OZ2JEYXRlUGFyc2VyRm9ybWF0dGVyIGFzIMm1ZX0gZnJvbSAnLi9saWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvQ3VzdG9tTmdiRGF0ZVBhcnNlckZvcm1hdHRlcic7XG5leHBvcnQge0lzbGFtaWNJMThuIGFzIMm1Yn0gZnJvbSAnLi9saWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvSXNsYW1pY0kxOG4nO1xuZXhwb3J0IHtIaWpyaURhdGVwaWNrZXJDb21wb25lbnQgYXMgybVhfSBmcm9tICcuL2xpYi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9oaWpyaS1kYXRlcGlja2VyL2hpanJpLWRhdGVwaWNrZXIuY29tcG9uZW50JztcbmV4cG9ydCB7UHJvdmlkZVBhcmVudEZvcm1EaXJlY3RpdmUgYXMgybVkLHRlc3QgYXMgybVjfSBmcm9tICcuL2xpYi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9wcm92aWRlLXBhcmVudC1mb3JtLmRpcmVjdGl2ZSc7Il19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLmpzIiwic291cmNlcyI6WyJuZ3gtaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvbmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBSUEsK0xBQWMsY0FBYyxDQUFDO0FBRTdCLE9BQU8sRUFBQyw0QkFBNEIsSUFBSSxFQUFFLEVBQUMsTUFBTSwrREFBK0QsQ0FBQztBQUNqSCxPQUFPLEVBQUMsV0FBVyxJQUFJLEVBQUUsRUFBQyxNQUFNLDhDQUE4QyxDQUFDO0FBQy9FLE9BQU8sRUFBQyx3QkFBd0IsSUFBSSxFQUFFLEVBQUMsTUFBTSw4RUFBOEUsQ0FBQzs7QUFKQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdlbmVyYXRlZCBidW5kbGUgaW5kZXguIERvIG5vdCBlZGl0LlxuICovXG5cbmV4cG9ydCAqIGZyb20gJy4vcHVibGljLWFwaSc7XG5cbmV4cG9ydCB7Q3VzdG9tTmdiRGF0ZVBhcnNlckZvcm1hdHRlciBhcyDJtWV9IGZyb20gJy4vbGliL2hpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyL0N1c3RvbU5nYkRhdGVQYXJzZXJGb3JtYXR0ZXInO1xuZXhwb3J0IHtJc2xhbWljSTE4biBhcyDJtWJ9IGZyb20gJy4vbGliL2hpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyL0lzbGFtaWNJMThuJztcbmV4cG9ydCB7SGlqcmlEYXRlcGlja2VyQ29tcG9uZW50IGFzIMm1YX0gZnJvbSAnLi9saWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvaGlqcmktZGF0ZXBpY2tlci9oaWpyaS1kYXRlcGlja2VyLmNvbXBvbmVudCc7XG5leHBvcnQge1Byb3ZpZGVQYXJlbnRGb3JtRGlyZWN0aXZlIGFzIMm1ZCx0ZXN0IGFzIMm1Y30gZnJvbSAnLi9saWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvcHJvdmlkZS1wYXJlbnQtZm9ybS5kaXJlY3RpdmUnOyJdfQ==
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/esm5/ngx-hijri-gregorian-datepicker.js.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/esm5/ngx-hijri-gregorian-datepicker.js.__ivy_ngcc_bak
new file mode 100644
index 0000000..3484206
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/esm5/ngx-hijri-gregorian-datepicker.js.__ivy_ngcc_bak
@@ -0,0 +1,14 @@
+/**
+ * @fileoverview added by tsickle
+ * Generated from: ngx-hijri-gregorian-datepicker.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+/**
+ * Generated bundle index. Do not edit.
+ */
+export { DateType, DateFormatterService, NgxHijriGregorianDatepickerService, NgxHijriGregorianDatepickerComponent, HijriGregorianDatepickerComponent, NgxHijriGregorianDatepickerModule } from './public-api';
+export { CustomNgbDateParserFormatter as ɵe } from './lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter';
+export { IslamicI18n as ɵb } from './lib/hijri-gregorian-datepicker/IslamicI18n';
+export { HijriDatepickerComponent as ɵa } from './lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component';
+export { ProvideParentFormDirective as ɵd, test as ɵc } from './lib/hijri-gregorian-datepicker/provide-parent-form.directive';
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLyIsInNvdXJjZXMiOlsibmd4LWhpanJpLWdyZWdvcmlhbi1kYXRlcGlja2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBSUEsK0xBQWMsY0FBYyxDQUFDO0FBRTdCLE9BQU8sRUFBQyw0QkFBNEIsSUFBSSxFQUFFLEVBQUMsTUFBTSwrREFBK0QsQ0FBQztBQUNqSCxPQUFPLEVBQUMsV0FBVyxJQUFJLEVBQUUsRUFBQyxNQUFNLDhDQUE4QyxDQUFDO0FBQy9FLE9BQU8sRUFBQyx3QkFBd0IsSUFBSSxFQUFFLEVBQUMsTUFBTSw4RUFBOEUsQ0FBQztBQUM1SCxPQUFPLEVBQUMsMEJBQTBCLElBQUksRUFBRSxFQUFDLElBQUksSUFBSSxFQUFFLEVBQUMsTUFBTSxnRUFBZ0UsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWMtYXBpJztcblxuZXhwb3J0IHtDdXN0b21OZ2JEYXRlUGFyc2VyRm9ybWF0dGVyIGFzIMm1ZX0gZnJvbSAnLi9saWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvQ3VzdG9tTmdiRGF0ZVBhcnNlckZvcm1hdHRlcic7XG5leHBvcnQge0lzbGFtaWNJMThuIGFzIMm1Yn0gZnJvbSAnLi9saWIvaGlqcmktZ3JlZ29yaWFuLWRhdGVwaWNrZXIvSXNsYW1pY0kxOG4nO1xuZXhwb3J0IHtIaWpyaURhdGVwaWNrZXJDb21wb25lbnQgYXMgybVhfSBmcm9tICcuL2xpYi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9oaWpyaS1kYXRlcGlja2VyL2hpanJpLWRhdGVwaWNrZXIuY29tcG9uZW50JztcbmV4cG9ydCB7UHJvdmlkZVBhcmVudEZvcm1EaXJlY3RpdmUgYXMgybVkLHRlc3QgYXMgybVjfSBmcm9tICcuL2xpYi9oaWpyaS1ncmVnb3JpYW4tZGF0ZXBpY2tlci9wcm92aWRlLXBhcmVudC1mb3JtLmRpcmVjdGl2ZSc7Il19
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/fesm2015/ngx-hijri-gregorian-datepicker.js b/node_modules/ngx-hijri-gregorian-datepicker/fesm2015/ngx-hijri-gregorian-datepicker.js
index 13c2a3d..93798e5 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/fesm2015/ngx-hijri-gregorian-datepicker.js
+++ b/node_modules/ngx-hijri-gregorian-datepicker/fesm2015/ngx-hijri-gregorian-datepicker.js
@@ -318,7 +318,7 @@ HijriGregorianDatepickerComponent.propDecorators = {
  * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
  */
 /** @type {?} */
-const WEEKDAYS = ['أحد', 'إثنين', 'ثلاثاء', 'أربعاء', 'خميس', 'جمعة', 'سبت'];
+const WEEKDAYS = ['إ', 'ث', 'ر', 'خ', 'ج', 'س', 'ح'];
 /** @type {?} */
 const MONTHS = ['محرم', 'صفر', 'ربيع الأول', 'ربيع الآخر', 'جمادى الأولى', 'جمادى الآخرة', 'رجب', 'شعبان', 'رمضان', 'شوال',
     'ذو القعدة', 'ذو الحجة'];
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/fesm5/ngx-hijri-gregorian-datepicker.js b/node_modules/ngx-hijri-gregorian-datepicker/fesm5/ngx-hijri-gregorian-datepicker.js
index cf3488d..9776e67 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/fesm5/ngx-hijri-gregorian-datepicker.js
+++ b/node_modules/ngx-hijri-gregorian-datepicker/fesm5/ngx-hijri-gregorian-datepicker.js
@@ -11,6 +11,64 @@ import { ControlContainer, NgForm, ReactiveFormsModule, FormsModule } from '@ang
  * Generated from: lib/hijri-gregorian-datepicker/consts.ts
  * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
  */
+import * as ɵngcc0 from '@angular/core';
+import * as ɵngcc1 from '@ng-bootstrap/ng-bootstrap';
+import * as ɵngcc2 from '@angular/common';
+import * as ɵngcc3 from '@angular/forms';
+
+var _c0 = ["d"];
+function HijriGregorianDatepickerComponent_label_1_Template(rf, ctx) { if (rf & 1) {
+    ɵngcc0.ɵɵelementStart(0, "label", 8);
+    ɵngcc0.ɵɵtext(1);
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var ctx_r0 = ɵngcc0.ɵɵnextContext();
+    ɵngcc0.ɵɵadvance(1);
+    ɵngcc0.ɵɵtextInterpolate1("", ctx_r0.label, " ");
+} }
+function HijriGregorianDatepickerComponent_input_3_Template(rf, ctx) { if (rf & 1) {
+    var _r7 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "input", 9, 10);
+    ɵngcc0.ɵɵlistener("ngModelChange", function HijriGregorianDatepickerComponent_input_3_Template_input_ngModelChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.selectedDate = $event; })("click", function HijriGregorianDatepickerComponent_input_3_Template_input_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r7); var _r5 = ɵngcc0.ɵɵreference(1); return _r5.toggle(); })("dateSelect", function HijriGregorianDatepickerComponent_input_3_Template_input_dateSelect_0_listener() { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.dateSelected(); });
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var ctx_r1 = ɵngcc0.ɵɵnextContext();
+    var _r2 = ɵngcc0.ɵɵreference(5);
+    ɵngcc0.ɵɵproperty("placeholder", ctx_r1.placeHolder ? ctx_r1.placeHolder : "d/M/yyyy")("name", ctx_r1.label)("ngModel", ctx_r1.selectedDate)("readonly", ctx_r1.readonly)("minDate", ctx_r1.minGreg)("maxDate", ctx_r1.maxGreg)("required", ctx_r1.isRequired)("disabled", ctx_r1.disabled)("footerTemplate", _r2);
+} }
+function HijriGregorianDatepickerComponent_ng_template_4_Template(rf, ctx) { if (rf & 1) {
+    var _r11 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelement(0, "hr", 11);
+    ɵngcc0.ɵɵelementStart(1, "button", 12);
+    ɵngcc0.ɵɵlistener("click", function HijriGregorianDatepickerComponent_ng_template_4_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r11); var ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.close(); });
+    ɵngcc0.ɵɵtext(2, "Close");
+    ɵngcc0.ɵɵelementEnd();
+    ɵngcc0.ɵɵelementStart(3, "button", 13);
+    ɵngcc0.ɵɵlistener("click", function HijriGregorianDatepickerComponent_ng_template_4_Template_button_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r11); var ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.clear(); });
+    ɵngcc0.ɵɵtext(4, "Clear");
+    ɵngcc0.ɵɵelementEnd();
+} }
+function HijriGregorianDatepickerComponent_hijri_date_picker_6_Template(rf, ctx) { if (rf & 1) {
+    var _r14 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelementStart(0, "hijri-date-picker", 14);
+    ɵngcc0.ɵɵlistener("selectedDateChange", function HijriGregorianDatepickerComponent_hijri_date_picker_6_Template_hijri_date_picker_selectedDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); var ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.selectedDate = $event; })("selectedDateChange", function HijriGregorianDatepickerComponent_hijri_date_picker_6_Template_hijri_date_picker_selectedDateChange_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); var ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15.dateSelected(); });
+    ɵngcc0.ɵɵelementEnd();
+} if (rf & 2) {
+    var ctx_r4 = ɵngcc0.ɵɵnextContext();
+    ɵngcc0.ɵɵproperty("selectedDate", ctx_r4.selectedDate)("readonly", ctx_r4.readonly)("min", ctx_r4.minHijri)("max", ctx_r4.maxHijri)("name", ctx_r4.label)("isRequired", ctx_r4.isRequired)("placeHolder", ctx_r4.placeHolder)("disabled", ctx_r4.disabled);
+} }
+function HijriDatepickerComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {
+    var _r4 = ɵngcc0.ɵɵgetCurrentView();
+    ɵngcc0.ɵɵelement(0, "hr", 4);
+    ɵngcc0.ɵɵelementStart(1, "button", 5);
+    ɵngcc0.ɵɵlistener("click", function HijriDatepickerComponent_ng_template_3_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r4); ɵngcc0.ɵɵnextContext(); var _r0 = ɵngcc0.ɵɵreference(2); return _r0.close(); });
+    ɵngcc0.ɵɵtext(2, "Close");
+    ɵngcc0.ɵɵelementEnd();
+    ɵngcc0.ɵɵelementStart(3, "button", 6);
+    ɵngcc0.ɵɵlistener("click", function HijriDatepickerComponent_ng_template_3_Template_button_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r4); var ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.clear(); });
+    ɵngcc0.ɵɵtext(4, "Clear");
+    ɵngcc0.ɵɵelementEnd();
+} }
 var DateType = /** @class */ (function () {
     function DateType() {
     }
@@ -167,13 +225,15 @@ var DateFormatterService = /** @class */ (function () {
         var todayGregorian = moment().locale('en').format('YYYY/M/D');
         return this.ToGregorianDateStruct(todayGregorian, 'YYYY/M/D');
     };
-    DateFormatterService.decorators = [
-        { type: Injectable }
-    ];
     /** @nocollapse */
     DateFormatterService.ctorParameters = function () { return [
         { type: NgbDateParserFormatter }
     ]; };
+DateFormatterService.ɵfac = function DateFormatterService_Factory(t) { return new (t || DateFormatterService)(ɵngcc0.ɵɵinject(ɵngcc1.NgbDateParserFormatter)); };
+DateFormatterService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: DateFormatterService, factory: function (t) { return DateFormatterService.ɵfac(t); } });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DateFormatterService, [{
+        type: Injectable
+    }], function () { return [{ type: ɵngcc1.NgbDateParserFormatter }]; }, null); })();
     return DateFormatterService;
 }());
 
@@ -185,14 +245,17 @@ var DateFormatterService = /** @class */ (function () {
 var NgxHijriGregorianDatepickerService = /** @class */ (function () {
     function NgxHijriGregorianDatepickerService() {
     }
-    NgxHijriGregorianDatepickerService.decorators = [
-        { type: Injectable, args: [{
-                    providedIn: 'root'
-                },] }
-    ];
     /** @nocollapse */
     NgxHijriGregorianDatepickerService.ctorParameters = function () { return []; };
     /** @nocollapse */ NgxHijriGregorianDatepickerService.ngInjectableDef = defineInjectable({ factory: function NgxHijriGregorianDatepickerService_Factory() { return new NgxHijriGregorianDatepickerService(); }, token: NgxHijriGregorianDatepickerService, providedIn: "root" });
+NgxHijriGregorianDatepickerService.ɵfac = function NgxHijriGregorianDatepickerService_Factory(t) { return new (t || NgxHijriGregorianDatepickerService)(); };
+NgxHijriGregorianDatepickerService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgxHijriGregorianDatepickerService, factory: function (t) { return NgxHijriGregorianDatepickerService.ɵfac(t); }, providedIn: 'root' });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxHijriGregorianDatepickerService, [{
+        type: Injectable,
+        args: [{
+                providedIn: 'root'
+            }]
+    }], function () { return []; }, null); })();
     return NgxHijriGregorianDatepickerService;
 }());
 
@@ -212,14 +275,21 @@ var NgxHijriGregorianDatepickerComponent = /** @class */ (function () {
      */
     function () {
     };
-    NgxHijriGregorianDatepickerComponent.decorators = [
-        { type: Component, args: [{
-                    selector: 'lib-ngx-hijri-gregorian-datepicker',
-                    template: "\n    <p>\n      ngx-hijri-gregorian-datepicker works!\n    </p>\n  "
-                }] }
-    ];
     /** @nocollapse */
     NgxHijriGregorianDatepickerComponent.ctorParameters = function () { return []; };
+NgxHijriGregorianDatepickerComponent.ɵfac = function NgxHijriGregorianDatepickerComponent_Factory(t) { return new (t || NgxHijriGregorianDatepickerComponent)(); };
+NgxHijriGregorianDatepickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxHijriGregorianDatepickerComponent, selectors: [["lib-ngx-hijri-gregorian-datepicker"]], decls: 2, vars: 0, template: function NgxHijriGregorianDatepickerComponent_Template(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵelementStart(0, "p");
+        ɵngcc0.ɵɵtext(1, " ngx-hijri-gregorian-datepicker works! ");
+        ɵngcc0.ɵɵelementEnd();
+    } }, encapsulation: 2 });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxHijriGregorianDatepickerComponent, [{
+        type: Component,
+        args: [{
+                selector: 'lib-ngx-hijri-gregorian-datepicker',
+                template: "\n    <p>\n      ngx-hijri-gregorian-datepicker works!\n    </p>\n  "
+            }]
+    }], function () { return []; }, null); })();
     return NgxHijriGregorianDatepickerComponent;
 }());
 
@@ -337,12 +407,6 @@ var HijriGregorianDatepickerComponent = /** @class */ (function () {
         this.selectedDate = this.dateFormatterService.ToGregorian(this.selectedDate);
         this.selectedDateChange.emit(this.selectedDate);
     };
-    HijriGregorianDatepickerComponent.decorators = [
-        { type: Component, args: [{
-                    selector: 'hijri-gregorian-datepicker',
-                    template: "\n    <div class=\"form-group\" provideParentForm>\n      <label class=\"requiredInput\" *ngIf=\"showLabel\" for=\"input-birth-Date\">{{ label }} </label>\n\n      <div class=\"input-group\">\n\n        <input  class=\"form-control\"\n                  [placeholder]=\"placeHolder ? placeHolder : 'd/M/yyyy'\"\n                  [name]=\"label\"\n                  *ngIf=\"selectedDateType == DateType.Gregorian\"\n                  [(ngModel)]=\"selectedDate\"\n                  ngbDatepicker (click)=\"d.toggle()\"\n                  (dateSelect)=\"dateSelected()\"\n                  autocomplete=\"off\"\n                  [readonly]=\"readonly\"\n                  [minDate]=\"minGreg\"\n                  [maxDate]=\"maxGreg\"\n                  [required]=\"isRequired\"\n                  [disabled]=\"disabled\"\n                  [footerTemplate]=\"footerTemplate\"\n                  #d=\"ngbDatepicker\">\n\n          <ng-template #footerTemplate>\n            <hr class=\"my-0\">\n            <button class=\"btn btn-secondary btn-sm m-2 float-right\" type=\"button\" (click)=\"close()\">Close</button>\n            <button class=\"btn btn-primary btn-sm m-2 float-left\" type=\"button\" (click)=\"clear()\">Clear</button>\n          </ng-template>\n\n          <hijri-date-picker *ngIf=\"selectedDateType == DateType.Hijri\"\n                             [(selectedDate)]=\"selectedDate\"\n                             (selectedDateChange)=\"dateSelected()\"\n                             [readonly]=\"readonly\"\n                             [min]=\"minHijri\" [max]=\"maxHijri\"\n                             style=\"flex: 1 1 auto;\"\n                             [name]=\"label\"\n                             [isRequired]=\"isRequired\"\n                             [placeHolder]=\"placeHolder\"\n                             [disabled]=\"disabled\">\n          </hijri-date-picker>\n\n          <div class=\"input-group-append\">\n                  <button class=\"btn btn-sm {{selectedDateType == DateType.Hijri ? 'btn-info focus active' :  'btn-outline-info'}}\" (click)=\"hijriClick()\"  [disabled]=\"disabled\" type=\"button\">\n                     {{hijriLabel ? hijriLabel : 'Hijri' }}\n                  </button>\n                  <button class=\"btn btn-sm {{selectedDateType == DateType.Gregorian ? 'btn-info focus active' :  'btn-outline-info'}}\" (click)=\"gregClick()\" [disabled]=\"disabled\" type=\"button\">\n                      {{GregLabel ? GregLabel : 'Gregorian' }}\n                  </button>\n           </div>\n\n      </div>\n  </div>\n"
-                }] }
-    ];
     /** @nocollapse */
     HijriGregorianDatepickerComponent.ctorParameters = function () { return [
         { type: DateFormatterService }
@@ -365,6 +429,89 @@ var HijriGregorianDatepickerComponent = /** @class */ (function () {
         GregLabel: [{ type: Input }],
         placeHolder: [{ type: Input }]
     };
+HijriGregorianDatepickerComponent.ɵfac = function HijriGregorianDatepickerComponent_Factory(t) { return new (t || HijriGregorianDatepickerComponent)(ɵngcc0.ɵɵdirectiveInject(DateFormatterService)); };
+HijriGregorianDatepickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: HijriGregorianDatepickerComponent, selectors: [["hijri-gregorian-datepicker"]], viewQuery: function HijriGregorianDatepickerComponent_Query(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵviewQuery(_c0, true);
+    } if (rf & 2) {
+        var _t;
+        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.datePicker = _t.first);
+    } }, inputs: { showLabel: "showLabel", readonly: "readonly", isRequired: "isRequired", disabled: "disabled", selectedDateType: "selectedDateType", selectedDate: "selectedDate", label: "label", minHijri: "minHijri", maxHijri: "maxHijri", minGreg: "minGreg", maxGreg: "maxGreg", hijriLabel: "hijriLabel", GregLabel: "GregLabel", placeHolder: "placeHolder" }, outputs: { selectedDateChange: "selectedDateChange" }, decls: 12, vars: 13, consts: [["provideParentForm", "", 1, "form-group"], ["class", "requiredInput", "for", "input-birth-Date", 4, "ngIf"], [1, "input-group"], ["class", "form-control", "ngbDatepicker", "", "autocomplete", "off", 3, "placeholder", "name", "ngModel", "readonly", "minDate", "maxDate", "required", "disabled", "footerTemplate", "ngModelChange", "click", "dateSelect", 4, "ngIf"], ["footerTemplate", ""], ["style", "flex: 1 1 auto;", 3, "selectedDate", "readonly", "min", "max", "name", "isRequired", "placeHolder", "disabled", "selectedDateChange", 4, "ngIf"], [1, "input-group-append"], ["type", "button", 3, "disabled", "click"], ["for", "input-birth-Date", 1, "requiredInput"], ["ngbDatepicker", "", "autocomplete", "off", 1, "form-control", 3, "placeholder", "name", "ngModel", "readonly", "minDate", "maxDate", "required", "disabled", "footerTemplate", "ngModelChange", "click", "dateSelect"], ["d", "ngbDatepicker"], [1, "my-0"], ["type", "button", 1, "btn", "btn-secondary", "btn-sm", "m-2", "float-right", 3, "click"], ["type", "button", 1, "btn", "btn-primary", "btn-sm", "m-2", "float-left", 3, "click"], [2, "flex", "1 1 auto", 3, "selectedDate", "readonly", "min", "max", "name", "isRequired", "placeHolder", "disabled", "selectedDateChange"]], template: function HijriGregorianDatepickerComponent_Template(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵelementStart(0, "div", 0);
+        ɵngcc0.ɵɵtemplate(1, HijriGregorianDatepickerComponent_label_1_Template, 2, 1, "label", 1);
+        ɵngcc0.ɵɵelementStart(2, "div", 2);
+        ɵngcc0.ɵɵtemplate(3, HijriGregorianDatepickerComponent_input_3_Template, 2, 9, "input", 3);
+        ɵngcc0.ɵɵtemplate(4, HijriGregorianDatepickerComponent_ng_template_4_Template, 5, 0, "ng-template", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);
+        ɵngcc0.ɵɵtemplate(6, HijriGregorianDatepickerComponent_hijri_date_picker_6_Template, 1, 8, "hijri-date-picker", 5);
+        ɵngcc0.ɵɵelementStart(7, "div", 6);
+        ɵngcc0.ɵɵelementStart(8, "button", 7);
+        ɵngcc0.ɵɵlistener("click", function HijriGregorianDatepickerComponent_Template_button_click_8_listener() { return ctx.hijriClick(); });
+        ɵngcc0.ɵɵtext(9);
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵelementStart(10, "button", 7);
+        ɵngcc0.ɵɵlistener("click", function HijriGregorianDatepickerComponent_Template_button_click_10_listener() { return ctx.gregClick(); });
+        ɵngcc0.ɵɵtext(11);
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵelementEnd();
+    } if (rf & 2) {
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.showLabel);
+        ɵngcc0.ɵɵadvance(2);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.selectedDateType == ctx.DateType.Gregorian);
+        ɵngcc0.ɵɵadvance(3);
+        ɵngcc0.ɵɵproperty("ngIf", ctx.selectedDateType == ctx.DateType.Hijri);
+        ɵngcc0.ɵɵadvance(2);
+        ɵngcc0.ɵɵclassMapInterpolate1("btn btn-sm ", ctx.selectedDateType == ctx.DateType.Hijri ? "btn-info focus active" : "btn-outline-info", "");
+        ɵngcc0.ɵɵproperty("disabled", ctx.disabled);
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.hijriLabel ? ctx.hijriLabel : "Hijri", " ");
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵclassMapInterpolate1("btn btn-sm ", ctx.selectedDateType == ctx.DateType.Gregorian ? "btn-info focus active" : "btn-outline-info", "");
+        ɵngcc0.ɵɵproperty("disabled", ctx.disabled);
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.GregLabel ? ctx.GregLabel : "Gregorian", " ");
+    } }, directives: function () { return [ProvideParentFormDirective, ɵngcc2.NgIf, ɵngcc1.NgbInputDatepicker, ɵngcc3.DefaultValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.NgModel, ɵngcc3.RequiredValidator, HijriDatepickerComponent]; }, encapsulation: 2 });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HijriGregorianDatepickerComponent, [{
+        type: Component,
+        args: [{
+                selector: 'hijri-gregorian-datepicker',
+                template: "\n    <div class=\"form-group\" provideParentForm>\n      <label class=\"requiredInput\" *ngIf=\"showLabel\" for=\"input-birth-Date\">{{ label }} </label>\n\n      <div class=\"input-group\">\n\n        <input  class=\"form-control\"\n                  [placeholder]=\"placeHolder ? placeHolder : 'd/M/yyyy'\"\n                  [name]=\"label\"\n                  *ngIf=\"selectedDateType == DateType.Gregorian\"\n                  [(ngModel)]=\"selectedDate\"\n                  ngbDatepicker (click)=\"d.toggle()\"\n                  (dateSelect)=\"dateSelected()\"\n                  autocomplete=\"off\"\n                  [readonly]=\"readonly\"\n                  [minDate]=\"minGreg\"\n                  [maxDate]=\"maxGreg\"\n                  [required]=\"isRequired\"\n                  [disabled]=\"disabled\"\n                  [footerTemplate]=\"footerTemplate\"\n                  #d=\"ngbDatepicker\">\n\n          <ng-template #footerTemplate>\n            <hr class=\"my-0\">\n            <button class=\"btn btn-secondary btn-sm m-2 float-right\" type=\"button\" (click)=\"close()\">Close</button>\n            <button class=\"btn btn-primary btn-sm m-2 float-left\" type=\"button\" (click)=\"clear()\">Clear</button>\n          </ng-template>\n\n          <hijri-date-picker *ngIf=\"selectedDateType == DateType.Hijri\"\n                             [(selectedDate)]=\"selectedDate\"\n                             (selectedDateChange)=\"dateSelected()\"\n                             [readonly]=\"readonly\"\n                             [min]=\"minHijri\" [max]=\"maxHijri\"\n                             style=\"flex: 1 1 auto;\"\n                             [name]=\"label\"\n                             [isRequired]=\"isRequired\"\n                             [placeHolder]=\"placeHolder\"\n                             [disabled]=\"disabled\">\n          </hijri-date-picker>\n\n          <div class=\"input-group-append\">\n                  <button class=\"btn btn-sm {{selectedDateType == DateType.Hijri ? 'btn-info focus active' :  'btn-outline-info'}}\" (click)=\"hijriClick()\"  [disabled]=\"disabled\" type=\"button\">\n                     {{hijriLabel ? hijriLabel : 'Hijri' }}\n                  </button>\n                  <button class=\"btn btn-sm {{selectedDateType == DateType.Gregorian ? 'btn-info focus active' :  'btn-outline-info'}}\" (click)=\"gregClick()\" [disabled]=\"disabled\" type=\"button\">\n                      {{GregLabel ? GregLabel : 'Gregorian' }}\n                  </button>\n           </div>\n\n      </div>\n  </div>\n"
+            }]
+    }], function () { return [{ type: DateFormatterService }]; }, { selectedDateChange: [{
+            type: Output
+        }], showLabel: [{
+            type: Input
+        }], readonly: [{
+            type: Input
+        }], isRequired: [{
+            type: Input
+        }], disabled: [{
+            type: Input
+        }], selectedDateType: [{
+            type: Input
+        }], selectedDate: [{
+            type: Input
+        }], datePicker: [{
+            type: ViewChild,
+            args: ['d']
+        }], label: [{
+            type: Input
+        }], minHijri: [{
+            type: Input
+        }], maxHijri: [{
+            type: Input
+        }], minGreg: [{
+            type: Input
+        }], maxGreg: [{
+            type: Input
+        }], hijriLabel: [{
+            type: Input
+        }], GregLabel: [{
+            type: Input
+        }], placeHolder: [{
+            type: Input
+        }] }); })();
     return HijriGregorianDatepickerComponent;
 }());
 
@@ -374,7 +521,7 @@ var HijriGregorianDatepickerComponent = /** @class */ (function () {
  * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
  */
 /** @type {?} */
-var WEEKDAYS = ['أحد', 'إثنين', 'ثلاثاء', 'أربعاء', 'خميس', 'جمعة', 'سبت'];
+var WEEKDAYS = ['إ', 'ث', 'ر', 'خ', 'ج', 'س', 'ح'];
 /** @type {?} */
 var MONTHS = ['محرم', 'صفر', 'ربيع الأول', 'ربيع الآخر', 'جمادى الأولى', 'جمادى الآخرة', 'رجب', 'شعبان', 'رمضان', 'شوال',
     'ذو القعدة', 'ذو الحجة'];
@@ -427,9 +574,12 @@ var IslamicI18n = /** @class */ (function (_super) {
     function (date) {
         return date.day + "-" + date.month + "-" + date.year;
     };
-    IslamicI18n.decorators = [
-        { type: Injectable }
-    ];
+IslamicI18n.ɵfac = function IslamicI18n_Factory(t) { return ɵIslamicI18n_BaseFactory(t || IslamicI18n); };
+IslamicI18n.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: IslamicI18n, factory: function (t) { return IslamicI18n.ɵfac(t); } });
+var ɵIslamicI18n_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(IslamicI18n);
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IslamicI18n, [{
+        type: Injectable
+    }], null, null); })();
     return IslamicI18n;
 }(NgbDatepickerI18n));
 
@@ -476,18 +626,6 @@ var HijriDatepickerComponent = /** @class */ (function () {
         this.datePicker.close();
         this.selectedDateChange.emit(null);
     };
-    HijriDatepickerComponent.decorators = [
-        { type: Component, args: [{
-                    selector: 'hijri-date-picker',
-                    template: "<div provideParentForm>\n<input\n    class=\"form-control hijriInput\"\n    [(ngModel)]=\"selectedDate\"\n    [placeholder]=\"placeHolder ?placeHolder : 'd/M/yyyy'\"\n    ngbDatepicker\n    (click)=\"d.toggle()\"\n    (dateSelect)=\"changeDate()\"\n    #d=\"ngbDatepicker\"\n    [readonly]=\"readonly\"\n    [minDate]=\"min\"\n    [maxDate]=\"max\"\n    [required]=\"isRequired\"\n    [name]=\"name\"\n    (blur)=\"onBlur()\"\n    [footerTemplate]=\"footerTemplate\"\n    [disabled]=\"disabled\" />\n</div>\n\n\n<ng-template #footerTemplate>\n  <hr class=\"my-0\">\n  <button class=\"btn btn-secondary btn-sm m-2 float-right\" type=\"button\" (click)=\"d.close()\">Close</button>\n  <button class=\"btn btn-primary btn-sm m-2 float-left\" type=\"button\" (click)=\"clear()\">Clear</button>\n</ng-template>\n",
-                    providers: [
-                        { provide: NgbCalendar, useClass: NgbCalendarIslamicUmalqura },
-                        { provide: NgbDatepickerI18n, useClass: IslamicI18n }
-                    ],
-                    encapsulation: ViewEncapsulation.None,
-                    styles: [".hijriInput{border-top-left-radius:0;border-bottom-left-radius:0}.ngb-dp-weekday{width:2.1rem!important}"]
-                }] }
-    ];
     /** @nocollapse */
     HijriDatepickerComponent.ctorParameters = function () { return []; };
     HijriDatepickerComponent.propDecorators = {
@@ -502,6 +640,62 @@ var HijriDatepickerComponent = /** @class */ (function () {
         name: [{ type: Input }],
         placeHolder: [{ type: Input }]
     };
+HijriDatepickerComponent.ɵfac = function HijriDatepickerComponent_Factory(t) { return new (t || HijriDatepickerComponent)(); };
+HijriDatepickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: HijriDatepickerComponent, selectors: [["hijri-date-picker"]], viewQuery: function HijriDatepickerComponent_Query(rf, ctx) { if (rf & 1) {
+        ɵngcc0.ɵɵviewQuery(_c0, true);
+    } if (rf & 2) {
+        var _t;
+        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.datePicker = _t.first);
+    } }, inputs: { readonly: "readonly", isRequired: "isRequired", disabled: "disabled", selectedDate: "selectedDate", min: "min", max: "max", name: "name", placeHolder: "placeHolder" }, outputs: { selectedDateChange: "selectedDateChange" }, features: [ɵngcc0.ɵɵProvidersFeature([
+            { provide: NgbCalendar, useClass: NgbCalendarIslamicUmalqura },
+            { provide: NgbDatepickerI18n, useClass: IslamicI18n }
+        ])], decls: 5, vars: 9, consts: [["provideParentForm", ""], ["ngbDatepicker", "", 1, "form-control", "hijriInput", 3, "ngModel", "placeholder", "readonly", "minDate", "maxDate", "required", "name", "footerTemplate", "disabled", "ngModelChange", "click", "dateSelect", "blur"], ["d", "ngbDatepicker"], ["footerTemplate", ""], [1, "my-0"], ["type", "button", 1, "btn", "btn-secondary", "btn-sm", "m-2", "float-right", 3, "click"], ["type", "button", 1, "btn", "btn-primary", "btn-sm", "m-2", "float-left", 3, "click"]], template: function HijriDatepickerComponent_Template(rf, ctx) { if (rf & 1) {
+        var _r6 = ɵngcc0.ɵɵgetCurrentView();
+        ɵngcc0.ɵɵelementStart(0, "div", 0);
+        ɵngcc0.ɵɵelementStart(1, "input", 1, 2);
+        ɵngcc0.ɵɵlistener("ngModelChange", function HijriDatepickerComponent_Template_input_ngModelChange_1_listener($event) { return ctx.selectedDate = $event; })("click", function HijriDatepickerComponent_Template_input_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r6); var _r0 = ɵngcc0.ɵɵreference(2); return _r0.toggle(); })("dateSelect", function HijriDatepickerComponent_Template_input_dateSelect_1_listener() { return ctx.changeDate(); })("blur", function HijriDatepickerComponent_Template_input_blur_1_listener() { return ctx.onBlur(); });
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵelementEnd();
+        ɵngcc0.ɵɵtemplate(3, HijriDatepickerComponent_ng_template_3_Template, 5, 0, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
+    } if (rf & 2) {
+        var _r1 = ɵngcc0.ɵɵreference(4);
+        ɵngcc0.ɵɵadvance(1);
+        ɵngcc0.ɵɵproperty("ngModel", ctx.selectedDate)("placeholder", ctx.placeHolder ? ctx.placeHolder : "d/M/yyyy")("readonly", ctx.readonly)("minDate", ctx.min)("maxDate", ctx.max)("required", ctx.isRequired)("name", ctx.name)("footerTemplate", _r1)("disabled", ctx.disabled);
+    } }, directives: function () { return [ProvideParentFormDirective, ɵngcc1.NgbInputDatepicker, ɵngcc3.DefaultValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.NgModel, ɵngcc3.RequiredValidator]; }, styles: [".hijriInput{border-top-left-radius:0;border-bottom-left-radius:0}.ngb-dp-weekday{width:2.1rem!important}"], encapsulation: 2 });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HijriDatepickerComponent, [{
+        type: Component,
+        args: [{
+                selector: 'hijri-date-picker',
+                template: "<div provideParentForm>\n<input\n    class=\"form-control hijriInput\"\n    [(ngModel)]=\"selectedDate\"\n    [placeholder]=\"placeHolder ?placeHolder : 'd/M/yyyy'\"\n    ngbDatepicker\n    (click)=\"d.toggle()\"\n    (dateSelect)=\"changeDate()\"\n    #d=\"ngbDatepicker\"\n    [readonly]=\"readonly\"\n    [minDate]=\"min\"\n    [maxDate]=\"max\"\n    [required]=\"isRequired\"\n    [name]=\"name\"\n    (blur)=\"onBlur()\"\n    [footerTemplate]=\"footerTemplate\"\n    [disabled]=\"disabled\" />\n</div>\n\n\n<ng-template #footerTemplate>\n  <hr class=\"my-0\">\n  <button class=\"btn btn-secondary btn-sm m-2 float-right\" type=\"button\" (click)=\"d.close()\">Close</button>\n  <button class=\"btn btn-primary btn-sm m-2 float-left\" type=\"button\" (click)=\"clear()\">Clear</button>\n</ng-template>\n",
+                providers: [
+                    { provide: NgbCalendar, useClass: NgbCalendarIslamicUmalqura },
+                    { provide: NgbDatepickerI18n, useClass: IslamicI18n }
+                ],
+                encapsulation: ViewEncapsulation.None,
+                styles: [".hijriInput{border-top-left-radius:0;border-bottom-left-radius:0}.ngb-dp-weekday{width:2.1rem!important}"]
+            }]
+    }], function () { return []; }, { selectedDateChange: [{
+            type: Output
+        }], readonly: [{
+            type: Input
+        }], isRequired: [{
+            type: Input
+        }], disabled: [{
+            type: Input
+        }], selectedDate: [{
+            type: Input
+        }], datePicker: [{
+            type: ViewChild,
+            args: ['d']
+        }], min: [{
+            type: Input
+        }], max: [{
+            type: Input
+        }], name: [{
+            type: Input
+        }], placeHolder: [{
+            type: Input
+        }] }); })();
     return HijriDatepickerComponent;
 }());
 
@@ -562,11 +756,13 @@ var CustomNgbDateParserFormatter = /** @class */ (function (_super) {
         }
         return returnVal;
     };
-    CustomNgbDateParserFormatter.decorators = [
-        { type: Injectable }
-    ];
     /** @nocollapse */
     CustomNgbDateParserFormatter.ctorParameters = function () { return []; };
+CustomNgbDateParserFormatter.ɵfac = function CustomNgbDateParserFormatter_Factory(t) { return new (t || CustomNgbDateParserFormatter)(); };
+CustomNgbDateParserFormatter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: CustomNgbDateParserFormatter, factory: function (t) { return CustomNgbDateParserFormatter.ɵfac(t); } });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CustomNgbDateParserFormatter, [{
+        type: Injectable
+    }], function () { return []; }, null); })();
     return CustomNgbDateParserFormatter;
 }(NgbDateParserFormatter));
 
@@ -585,20 +781,29 @@ function test(form) {
 var ProvideParentFormDirective = /** @class */ (function () {
     function ProvideParentFormDirective() {
     }
-    ProvideParentFormDirective.decorators = [
-        { type: Directive, args: [{
-                    selector: '[provideParentForm]',
-                    providers: [
-                        {
-                            provide: ControlContainer,
-                            useFactory: test,
-                            deps: [[new Optional(), new SkipSelf(), NgForm]]
-                        }
-                    ]
-                },] }
-    ];
     /** @nocollapse */
     ProvideParentFormDirective.ctorParameters = function () { return []; };
+ProvideParentFormDirective.ɵfac = function ProvideParentFormDirective_Factory(t) { return new (t || ProvideParentFormDirective)(); };
+ProvideParentFormDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ProvideParentFormDirective, selectors: [["", "provideParentForm", ""]], features: [ɵngcc0.ɵɵProvidersFeature([
+            {
+                provide: ControlContainer,
+                useFactory: test,
+                deps: [[new Optional(), new SkipSelf(), NgForm]]
+            }
+        ])] });
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ProvideParentFormDirective, [{
+        type: Directive,
+        args: [{
+                selector: '[provideParentForm]',
+                providers: [
+                    {
+                        provide: ControlContainer,
+                        useFactory: test,
+                        deps: [[new Optional(), new SkipSelf(), NgForm]]
+                    }
+                ]
+            }]
+    }], function () { return []; }, null); })();
     return ProvideParentFormDirective;
 }());
 
@@ -610,27 +815,42 @@ var ProvideParentFormDirective = /** @class */ (function () {
 var NgxHijriGregorianDatepickerModule = /** @class */ (function () {
     function NgxHijriGregorianDatepickerModule() {
     }
-    NgxHijriGregorianDatepickerModule.decorators = [
-        { type: NgModule, args: [{
-                    declarations: [
-                        NgxHijriGregorianDatepickerComponent,
-                        HijriGregorianDatepickerComponent,
-                        HijriDatepickerComponent,
-                        ProvideParentFormDirective
-                    ],
-                    imports: [
-                        CommonModule,
-                        ReactiveFormsModule,
-                        FormsModule,
-                        NgbModule
-                    ],
-                    providers: [
-                        { provide: NgbDateParserFormatter, useClass: CustomNgbDateParserFormatter },
-                        DateFormatterService
-                    ],
-                    exports: [HijriGregorianDatepickerComponent, NgxHijriGregorianDatepickerComponent]
-                },] }
-    ];
+NgxHijriGregorianDatepickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxHijriGregorianDatepickerModule });
+NgxHijriGregorianDatepickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxHijriGregorianDatepickerModule_Factory(t) { return new (t || NgxHijriGregorianDatepickerModule)(); }, providers: [
+        { provide: NgbDateParserFormatter, useClass: CustomNgbDateParserFormatter },
+        DateFormatterService
+    ], imports: [[
+            CommonModule,
+            ReactiveFormsModule,
+            FormsModule,
+            NgbModule
+        ]] });
+(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxHijriGregorianDatepickerModule, { declarations: function () { return [NgxHijriGregorianDatepickerComponent, HijriGregorianDatepickerComponent, HijriDatepickerComponent, ProvideParentFormDirective]; }, imports: function () { return [CommonModule,
+        ReactiveFormsModule,
+        FormsModule,
+        NgbModule]; }, exports: function () { return [HijriGregorianDatepickerComponent, NgxHijriGregorianDatepickerComponent]; } }); })();
+/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxHijriGregorianDatepickerModule, [{
+        type: NgModule,
+        args: [{
+                declarations: [
+                    NgxHijriGregorianDatepickerComponent,
+                    HijriGregorianDatepickerComponent,
+                    HijriDatepickerComponent,
+                    ProvideParentFormDirective
+                ],
+                imports: [
+                    CommonModule,
+                    ReactiveFormsModule,
+                    FormsModule,
+                    NgbModule
+                ],
+                providers: [
+                    { provide: NgbDateParserFormatter, useClass: CustomNgbDateParserFormatter },
+                    DateFormatterService
+                ],
+                exports: [HijriGregorianDatepickerComponent, NgxHijriGregorianDatepickerComponent]
+            }]
+    }], function () { return []; }, null); })();
     return NgxHijriGregorianDatepickerModule;
 }());
 
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/fesm5/ngx-hijri-gregorian-datepicker.js.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/fesm5/ngx-hijri-gregorian-datepicker.js.__ivy_ngcc_bak
new file mode 100644
index 0000000..cf3488d
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/fesm5/ngx-hijri-gregorian-datepicker.js.__ivy_ngcc_bak
@@ -0,0 +1,651 @@
+import * as momentjs from 'moment';
+import * as moment_ from 'moment-hijri';
+import { __extends } from 'tslib';
+import { NgbDateParserFormatter, NgbDate, NgbDatepickerI18n, NgbCalendar, NgbCalendarIslamicUmalqura, NgbModule } from '@ng-bootstrap/ng-bootstrap';
+import { DatePipe, CommonModule } from '@angular/common';
+import { Injectable, Directive, Optional, SkipSelf, Component, ViewEncapsulation, Input, Output, EventEmitter, ViewChild, NgModule, defineInjectable } from '@angular/core';
+import { ControlContainer, NgForm, ReactiveFormsModule, FormsModule } from '@angular/forms';
+
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/hijri-gregorian-datepicker/consts.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+var DateType = /** @class */ (function () {
+    function DateType() {
+    }
+    DateType.Hijri = 1;
+    DateType.Gregorian = 2;
+    return DateType;
+}());
+
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/hijri-gregorian-datepicker/date-formatter.service.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+/** @type {?} */
+var moment = momentjs;
+/** @type {?} */
+var momentHijri = moment_;
+var DateFormatterService = /** @class */ (function () {
+    function DateFormatterService(parserFormatter) {
+        this.parserFormatter = parserFormatter;
+    }
+    /**
+     * @param {?} date
+     * @return {?}
+     */
+    DateFormatterService.prototype.ToString = /**
+     * @param {?} date
+     * @return {?}
+     */
+    function (date) {
+        /** @type {?} */
+        var dateStr = this.parserFormatter.format(date);
+        return dateStr;
+    };
+    /**
+     * @param {?} hijriDate
+     * @param {?} format
+     * @return {?}
+     */
+    DateFormatterService.prototype.ToHijriDateStruct = /**
+     * @param {?} hijriDate
+     * @param {?} format
+     * @return {?}
+     */
+    function (hijriDate, format) {
+        /** @type {?} */
+        var hijriMomentDate = momentHijri(hijriDate, format);
+        // Parse a Hijri date based on format.
+        /** @type {?} */
+        var day = hijriMomentDate.iDate();
+        /** @type {?} */
+        var month = +hijriMomentDate.iMonth() + 1;
+        /** @type {?} */
+        var year = hijriMomentDate.iYear();
+        /** @type {?} */
+        var ngDate = new NgbDate(+year, month, +day);
+        return ngDate;
+    };
+    /**
+     * @param {?} gregorianDate
+     * @param {?} format
+     * @return {?}
+     */
+    DateFormatterService.prototype.ToGregorianDateStruct = /**
+     * @param {?} gregorianDate
+     * @param {?} format
+     * @return {?}
+     */
+    function (gregorianDate, format) {
+        /** @type {?} */
+        var momentDate = moment(gregorianDate, format);
+        // Parse a Gregorian date based on format.
+        /** @type {?} */
+        var day = momentDate.date();
+        /** @type {?} */
+        var month = +momentDate.month() + 1;
+        /** @type {?} */
+        var year = momentDate.year();
+        /** @type {?} */
+        var ngDate = new NgbDate(+year, +month, +day);
+        return ngDate;
+    };
+    /**
+     * @param {?} date
+     * @return {?}
+     */
+    DateFormatterService.prototype.ToHijri = /**
+     * @param {?} date
+     * @return {?}
+     */
+    function (date) {
+        if (!date) {
+            return null;
+        }
+        /** @type {?} */
+        var dateStr = this.ToString(date);
+        /** @type {?} */
+        var momentDate = momentHijri(dateStr, 'D/M/YYYY');
+        /** @type {?} */
+        var day = momentDate.iDate();
+        /** @type {?} */
+        var month = +momentDate.iMonth() + 1;
+        /** @type {?} */
+        var year = momentDate.iYear();
+        /** @type {?} */
+        var ngDate = new NgbDate(+year, month, +day);
+        return ngDate;
+    };
+    /**
+     * @param {?} date
+     * @return {?}
+     */
+    DateFormatterService.prototype.ToGregorian = /**
+     * @param {?} date
+     * @return {?}
+     */
+    function (date) {
+        if (!date) {
+            return null;
+        }
+        /** @type {?} */
+        var dateStr = this.ToString(date);
+        /** @type {?} */
+        var momentDate = momentHijri(dateStr, 'iD/iM/iYYYY');
+        /** @type {?} */
+        var day = momentDate.locale('en').format('D');
+        /** @type {?} */
+        var month = momentDate.locale('en').format('M');
+        /** @type {?} */
+        var year = momentDate.locale('en').format('Y');
+        /** @type {?} */
+        var ngDate = new NgbDate(+year, +month, +day);
+        return ngDate;
+    };
+    /**
+     * @return {?}
+     */
+    DateFormatterService.prototype.GetTodayHijri = /**
+     * @return {?}
+     */
+    function () {
+        /** @type {?} */
+        var todayHijri = momentHijri().locale('en').format('iYYYY/iM/iD');
+        return this.ToHijriDateStruct(todayHijri, 'iYYYY/iM/iD');
+    };
+    /**
+     * @return {?}
+     */
+    DateFormatterService.prototype.GetTodayGregorian = /**
+     * @return {?}
+     */
+    function () {
+        /** @type {?} */
+        var todayGregorian = moment().locale('en').format('YYYY/M/D');
+        return this.ToGregorianDateStruct(todayGregorian, 'YYYY/M/D');
+    };
+    DateFormatterService.decorators = [
+        { type: Injectable }
+    ];
+    /** @nocollapse */
+    DateFormatterService.ctorParameters = function () { return [
+        { type: NgbDateParserFormatter }
+    ]; };
+    return DateFormatterService;
+}());
+
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/ngx-hijri-gregorian-datepicker.service.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+var NgxHijriGregorianDatepickerService = /** @class */ (function () {
+    function NgxHijriGregorianDatepickerService() {
+    }
+    NgxHijriGregorianDatepickerService.decorators = [
+        { type: Injectable, args: [{
+                    providedIn: 'root'
+                },] }
+    ];
+    /** @nocollapse */
+    NgxHijriGregorianDatepickerService.ctorParameters = function () { return []; };
+    /** @nocollapse */ NgxHijriGregorianDatepickerService.ngInjectableDef = defineInjectable({ factory: function NgxHijriGregorianDatepickerService_Factory() { return new NgxHijriGregorianDatepickerService(); }, token: NgxHijriGregorianDatepickerService, providedIn: "root" });
+    return NgxHijriGregorianDatepickerService;
+}());
+
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/ngx-hijri-gregorian-datepicker.component.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+var NgxHijriGregorianDatepickerComponent = /** @class */ (function () {
+    function NgxHijriGregorianDatepickerComponent() {
+    }
+    /**
+     * @return {?}
+     */
+    NgxHijriGregorianDatepickerComponent.prototype.ngOnInit = /**
+     * @return {?}
+     */
+    function () {
+    };
+    NgxHijriGregorianDatepickerComponent.decorators = [
+        { type: Component, args: [{
+                    selector: 'lib-ngx-hijri-gregorian-datepicker',
+                    template: "\n    <p>\n      ngx-hijri-gregorian-datepicker works!\n    </p>\n  "
+                }] }
+    ];
+    /** @nocollapse */
+    NgxHijriGregorianDatepickerComponent.ctorParameters = function () { return []; };
+    return NgxHijriGregorianDatepickerComponent;
+}());
+
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+/** @type {?} */
+var moment$1 = momentjs;
+/** @type {?} */
+var momentHijri$1 = moment_;
+var HijriGregorianDatepickerComponent = /** @class */ (function () {
+    function HijriGregorianDatepickerComponent(dateFormatterService) {
+        this.dateFormatterService = dateFormatterService;
+        this.selectedDateChange = new EventEmitter();
+        this.showLabel = true;
+        this.readonly = false;
+        this.isRequired = false;
+        this.disabled = false;
+    }
+    Object.defineProperty(HijriGregorianDatepickerComponent.prototype, "DateType", {
+        get: /**
+         * @return {?}
+         */
+        function () {
+            return DateType;
+        },
+        enumerable: true,
+        configurable: true
+    });
+    /**
+     * @return {?}
+     */
+    HijriGregorianDatepickerComponent.prototype.ngOnInit = /**
+     * @return {?}
+     */
+    function () {
+        if (!this.selectedDateType) {
+            this.selectedDateType = DateType.Hijri;
+        }
+    };
+    /**
+     * @return {?}
+     */
+    HijriGregorianDatepickerComponent.prototype.close = /**
+     * @return {?}
+     */
+    function () {
+        this.datePicker.close();
+    };
+    /**
+     * @return {?}
+     */
+    HijriGregorianDatepickerComponent.prototype.clear = /**
+     * @return {?}
+     */
+    function () {
+        this.selectedDate = undefined;
+        this.close();
+        this.selectedDateChange.emit(null);
+    };
+    /**
+     * @return {?}
+     */
+    HijriGregorianDatepickerComponent.prototype.getSelectedDate = /**
+     * @return {?}
+     */
+    function () {
+        /** @type {?} */
+        var formattedDate = this.dateFormatterService.ToString(this.selectedDate);
+        if (this.selectedDateType == DateType.Hijri) {
+            return momentHijri$1(formattedDate, 'iD/iM/iYYYY').locale('en').format();
+        }
+        if (this.selectedDateType == DateType.Gregorian) {
+            return moment$1(formattedDate, 'D/M/YYYY').locale('en').format();
+        }
+    };
+    /**
+     * @return {?}
+     */
+    HijriGregorianDatepickerComponent.prototype.dateSelected = /**
+     * @return {?}
+     */
+    function () {
+        this.selectedDateChange.emit(this.selectedDate);
+    };
+    /**
+     * @return {?}
+     */
+    HijriGregorianDatepickerComponent.prototype.hijriClick = /**
+     * @return {?}
+     */
+    function () {
+        if (this.selectedDateType == DateType.Hijri) {
+            return;
+        }
+        this.selectedDateType = DateType.Hijri;
+        //to hijri
+        this.selectedDate = this.dateFormatterService.ToHijri(this.selectedDate);
+        this.selectedDateChange.emit(this.selectedDate);
+    };
+    /**
+     * @return {?}
+     */
+    HijriGregorianDatepickerComponent.prototype.gregClick = /**
+     * @return {?}
+     */
+    function () {
+        if (this.selectedDateType == DateType.Gregorian) {
+            return;
+        }
+        this.selectedDateType = DateType.Gregorian;
+        //to Gregorian
+        this.selectedDate = this.dateFormatterService.ToGregorian(this.selectedDate);
+        this.selectedDateChange.emit(this.selectedDate);
+    };
+    HijriGregorianDatepickerComponent.decorators = [
+        { type: Component, args: [{
+                    selector: 'hijri-gregorian-datepicker',
+                    template: "\n    <div class=\"form-group\" provideParentForm>\n      <label class=\"requiredInput\" *ngIf=\"showLabel\" for=\"input-birth-Date\">{{ label }} </label>\n\n      <div class=\"input-group\">\n\n        <input  class=\"form-control\"\n                  [placeholder]=\"placeHolder ? placeHolder : 'd/M/yyyy'\"\n                  [name]=\"label\"\n                  *ngIf=\"selectedDateType == DateType.Gregorian\"\n                  [(ngModel)]=\"selectedDate\"\n                  ngbDatepicker (click)=\"d.toggle()\"\n                  (dateSelect)=\"dateSelected()\"\n                  autocomplete=\"off\"\n                  [readonly]=\"readonly\"\n                  [minDate]=\"minGreg\"\n                  [maxDate]=\"maxGreg\"\n                  [required]=\"isRequired\"\n                  [disabled]=\"disabled\"\n                  [footerTemplate]=\"footerTemplate\"\n                  #d=\"ngbDatepicker\">\n\n          <ng-template #footerTemplate>\n            <hr class=\"my-0\">\n            <button class=\"btn btn-secondary btn-sm m-2 float-right\" type=\"button\" (click)=\"close()\">Close</button>\n            <button class=\"btn btn-primary btn-sm m-2 float-left\" type=\"button\" (click)=\"clear()\">Clear</button>\n          </ng-template>\n\n          <hijri-date-picker *ngIf=\"selectedDateType == DateType.Hijri\"\n                             [(selectedDate)]=\"selectedDate\"\n                             (selectedDateChange)=\"dateSelected()\"\n                             [readonly]=\"readonly\"\n                             [min]=\"minHijri\" [max]=\"maxHijri\"\n                             style=\"flex: 1 1 auto;\"\n                             [name]=\"label\"\n                             [isRequired]=\"isRequired\"\n                             [placeHolder]=\"placeHolder\"\n                             [disabled]=\"disabled\">\n          </hijri-date-picker>\n\n          <div class=\"input-group-append\">\n                  <button class=\"btn btn-sm {{selectedDateType == DateType.Hijri ? 'btn-info focus active' :  'btn-outline-info'}}\" (click)=\"hijriClick()\"  [disabled]=\"disabled\" type=\"button\">\n                     {{hijriLabel ? hijriLabel : 'Hijri' }}\n                  </button>\n                  <button class=\"btn btn-sm {{selectedDateType == DateType.Gregorian ? 'btn-info focus active' :  'btn-outline-info'}}\" (click)=\"gregClick()\" [disabled]=\"disabled\" type=\"button\">\n                      {{GregLabel ? GregLabel : 'Gregorian' }}\n                  </button>\n           </div>\n\n      </div>\n  </div>\n"
+                }] }
+    ];
+    /** @nocollapse */
+    HijriGregorianDatepickerComponent.ctorParameters = function () { return [
+        { type: DateFormatterService }
+    ]; };
+    HijriGregorianDatepickerComponent.propDecorators = {
+        datePicker: [{ type: ViewChild, args: ['d',] }],
+        selectedDateType: [{ type: Input }],
+        selectedDate: [{ type: Input }],
+        selectedDateChange: [{ type: Output }],
+        label: [{ type: Input }],
+        showLabel: [{ type: Input }],
+        readonly: [{ type: Input }],
+        isRequired: [{ type: Input }],
+        disabled: [{ type: Input }],
+        minHijri: [{ type: Input }],
+        maxHijri: [{ type: Input }],
+        minGreg: [{ type: Input }],
+        maxGreg: [{ type: Input }],
+        hijriLabel: [{ type: Input }],
+        GregLabel: [{ type: Input }],
+        placeHolder: [{ type: Input }]
+    };
+    return HijriGregorianDatepickerComponent;
+}());
+
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/hijri-gregorian-datepicker/IslamicI18n.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+/** @type {?} */
+var WEEKDAYS = ['أحد', 'إثنين', 'ثلاثاء', 'أربعاء', 'خميس', 'جمعة', 'سبت'];
+/** @type {?} */
+var MONTHS = ['محرم', 'صفر', 'ربيع الأول', 'ربيع الآخر', 'جمادى الأولى', 'جمادى الآخرة', 'رجب', 'شعبان', 'رمضان', 'شوال',
+    'ذو القعدة', 'ذو الحجة'];
+var IslamicI18n = /** @class */ (function (_super) {
+    __extends(IslamicI18n, _super);
+    function IslamicI18n() {
+        return _super !== null && _super.apply(this, arguments) || this;
+    }
+    /**
+     * @param {?} weekday
+     * @return {?}
+     */
+    IslamicI18n.prototype.getWeekdayShortName = /**
+     * @param {?} weekday
+     * @return {?}
+     */
+    function (weekday) {
+        return WEEKDAYS[weekday - 1];
+    };
+    /**
+     * @param {?} month
+     * @return {?}
+     */
+    IslamicI18n.prototype.getMonthShortName = /**
+     * @param {?} month
+     * @return {?}
+     */
+    function (month) {
+        return MONTHS[month - 1];
+    };
+    /**
+     * @param {?} month
+     * @return {?}
+     */
+    IslamicI18n.prototype.getMonthFullName = /**
+     * @param {?} month
+     * @return {?}
+     */
+    function (month) {
+        return MONTHS[month - 1];
+    };
+    /**
+     * @param {?} date
+     * @return {?}
+     */
+    IslamicI18n.prototype.getDayAriaLabel = /**
+     * @param {?} date
+     * @return {?}
+     */
+    function (date) {
+        return date.day + "-" + date.month + "-" + date.year;
+    };
+    IslamicI18n.decorators = [
+        { type: Injectable }
+    ];
+    return IslamicI18n;
+}(NgbDatepickerI18n));
+
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+var HijriDatepickerComponent = /** @class */ (function () {
+    function HijriDatepickerComponent() {
+        this.selectedDateChange = new EventEmitter();
+        this.readonly = false;
+        this.isRequired = false;
+        this.disabled = false;
+    }
+    /**
+     * @return {?}
+     */
+    HijriDatepickerComponent.prototype.changeDate = /**
+     * @return {?}
+     */
+    function () {
+        this.selectedDateChange.emit(this.selectedDate);
+    };
+    /**
+     * @return {?}
+     */
+    HijriDatepickerComponent.prototype.onBlur = /**
+     * @return {?}
+     */
+    function () {
+        if (!this.selectedDate) {
+            this.selectedDateChange.emit(null);
+        }
+    };
+    /**
+     * @return {?}
+     */
+    HijriDatepickerComponent.prototype.clear = /**
+     * @return {?}
+     */
+    function () {
+        this.selectedDate = undefined;
+        this.datePicker.close();
+        this.selectedDateChange.emit(null);
+    };
+    HijriDatepickerComponent.decorators = [
+        { type: Component, args: [{
+                    selector: 'hijri-date-picker',
+                    template: "<div provideParentForm>\n<input\n    class=\"form-control hijriInput\"\n    [(ngModel)]=\"selectedDate\"\n    [placeholder]=\"placeHolder ?placeHolder : 'd/M/yyyy'\"\n    ngbDatepicker\n    (click)=\"d.toggle()\"\n    (dateSelect)=\"changeDate()\"\n    #d=\"ngbDatepicker\"\n    [readonly]=\"readonly\"\n    [minDate]=\"min\"\n    [maxDate]=\"max\"\n    [required]=\"isRequired\"\n    [name]=\"name\"\n    (blur)=\"onBlur()\"\n    [footerTemplate]=\"footerTemplate\"\n    [disabled]=\"disabled\" />\n</div>\n\n\n<ng-template #footerTemplate>\n  <hr class=\"my-0\">\n  <button class=\"btn btn-secondary btn-sm m-2 float-right\" type=\"button\" (click)=\"d.close()\">Close</button>\n  <button class=\"btn btn-primary btn-sm m-2 float-left\" type=\"button\" (click)=\"clear()\">Clear</button>\n</ng-template>\n",
+                    providers: [
+                        { provide: NgbCalendar, useClass: NgbCalendarIslamicUmalqura },
+                        { provide: NgbDatepickerI18n, useClass: IslamicI18n }
+                    ],
+                    encapsulation: ViewEncapsulation.None,
+                    styles: [".hijriInput{border-top-left-radius:0;border-bottom-left-radius:0}.ngb-dp-weekday{width:2.1rem!important}"]
+                }] }
+    ];
+    /** @nocollapse */
+    HijriDatepickerComponent.ctorParameters = function () { return []; };
+    HijriDatepickerComponent.propDecorators = {
+        datePicker: [{ type: ViewChild, args: ['d',] }],
+        selectedDate: [{ type: Input }],
+        selectedDateChange: [{ type: Output }],
+        readonly: [{ type: Input }],
+        isRequired: [{ type: Input }],
+        disabled: [{ type: Input }],
+        min: [{ type: Input }],
+        max: [{ type: Input }],
+        name: [{ type: Input }],
+        placeHolder: [{ type: Input }]
+    };
+    return HijriDatepickerComponent;
+}());
+
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+var CustomNgbDateParserFormatter = /** @class */ (function (_super) {
+    __extends(CustomNgbDateParserFormatter, _super);
+    function CustomNgbDateParserFormatter() {
+        var _this = _super.call(this) || this;
+        _this.datePipe = new DatePipe('en-US');
+        return _this;
+    }
+    /**
+     * @param {?} date
+     * @return {?}
+     */
+    CustomNgbDateParserFormatter.prototype.format = /**
+     * @param {?} date
+     * @return {?}
+     */
+    function (date) {
+        if (date === null) {
+            return '';
+        }
+        try {
+            return this.datePipe.transform(new Date(date.year, date.month - 1, date.day), 'd/M/yyyy');
+        }
+        catch (e) {
+            return '';
+        }
+    };
+    /**
+     * @param {?} value
+     * @return {?}
+     */
+    CustomNgbDateParserFormatter.prototype.parse = /**
+     * @param {?} value
+     * @return {?}
+     */
+    function (value) {
+        /** @type {?} */
+        var returnVal;
+        if (!value) {
+            returnVal = null;
+        }
+        else {
+            try {
+                /** @type {?} */
+                var dateParts = this.datePipe.transform(value, 'M-d-y').split('-');
+                returnVal = { year: parseInt(dateParts[2]), month: parseInt(dateParts[0]), day: parseInt(dateParts[1]) };
+            }
+            catch (e) {
+                returnVal = null;
+            }
+        }
+        return returnVal;
+    };
+    CustomNgbDateParserFormatter.decorators = [
+        { type: Injectable }
+    ];
+    /** @nocollapse */
+    CustomNgbDateParserFormatter.ctorParameters = function () { return []; };
+    return CustomNgbDateParserFormatter;
+}(NgbDateParserFormatter));
+
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/hijri-gregorian-datepicker/provide-parent-form.directive.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+/**
+ * @param {?} form
+ * @return {?}
+ */
+function test(form) {
+    return form;
+}
+var ProvideParentFormDirective = /** @class */ (function () {
+    function ProvideParentFormDirective() {
+    }
+    ProvideParentFormDirective.decorators = [
+        { type: Directive, args: [{
+                    selector: '[provideParentForm]',
+                    providers: [
+                        {
+                            provide: ControlContainer,
+                            useFactory: test,
+                            deps: [[new Optional(), new SkipSelf(), NgForm]]
+                        }
+                    ]
+                },] }
+    ];
+    /** @nocollapse */
+    ProvideParentFormDirective.ctorParameters = function () { return []; };
+    return ProvideParentFormDirective;
+}());
+
+/**
+ * @fileoverview added by tsickle
+ * Generated from: lib/ngx-hijri-gregorian-datepicker.module.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+var NgxHijriGregorianDatepickerModule = /** @class */ (function () {
+    function NgxHijriGregorianDatepickerModule() {
+    }
+    NgxHijriGregorianDatepickerModule.decorators = [
+        { type: NgModule, args: [{
+                    declarations: [
+                        NgxHijriGregorianDatepickerComponent,
+                        HijriGregorianDatepickerComponent,
+                        HijriDatepickerComponent,
+                        ProvideParentFormDirective
+                    ],
+                    imports: [
+                        CommonModule,
+                        ReactiveFormsModule,
+                        FormsModule,
+                        NgbModule
+                    ],
+                    providers: [
+                        { provide: NgbDateParserFormatter, useClass: CustomNgbDateParserFormatter },
+                        DateFormatterService
+                    ],
+                    exports: [HijriGregorianDatepickerComponent, NgxHijriGregorianDatepickerComponent]
+                },] }
+    ];
+    return NgxHijriGregorianDatepickerModule;
+}());
+
+/**
+ * @fileoverview added by tsickle
+ * Generated from: public-api.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+
+/**
+ * @fileoverview added by tsickle
+ * Generated from: ngx-hijri-gregorian-datepicker.ts
+ * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
+ */
+
+export { DateType, DateFormatterService, NgxHijriGregorianDatepickerService, NgxHijriGregorianDatepickerComponent, HijriGregorianDatepickerComponent, NgxHijriGregorianDatepickerModule, CustomNgbDateParserFormatter as ɵe, IslamicI18n as ɵb, HijriDatepickerComponent as ɵa, ProvideParentFormDirective as ɵd, test as ɵc };
+
+//# sourceMappingURL=ngx-hijri-gregorian-datepicker.js.map
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/fesm5/ngx-hijri-gregorian-datepicker.js.map b/node_modules/ngx-hijri-gregorian-datepicker/fesm5/ngx-hijri-gregorian-datepicker.js.map
index 1365aa4..1dbf47c 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/fesm5/ngx-hijri-gregorian-datepicker.js.map
+++ b/node_modules/ngx-hijri-gregorian-datepicker/fesm5/ngx-hijri-gregorian-datepicker.js.map
@@ -1 +1 @@
-{"version":3,"file":"ngx-hijri-gregorian-datepicker.js.map","sources":["ng://ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/consts.ts","ng://ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/date-formatter.service.ts","ng://ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.service.ts","ng://ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.component.ts","ng://ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.ts","ng://ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/IslamicI18n.ts","ng://ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.ts","ng://ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.ts","ng://ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/provide-parent-form.directive.ts","ng://ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.module.ts"],"sourcesContent":["export class DateType {\r\n  public static Hijri = 1;\r\n  public static Gregorian  = 2;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgbDateStruct, NgbDateParserFormatter, NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport * as momentjs from 'moment';\r\nconst moment = momentjs;\r\n\r\n\r\nimport * as moment_ from 'moment-hijri';\r\nconst momentHijri = moment_;\r\n\r\n@Injectable()\r\nexport class DateFormatterService {\r\n\r\n  constructor(private parserFormatter: NgbDateParserFormatter) { }\r\n\r\n    ToString(date: NgbDateStruct): string {\r\n        const dateStr = this.parserFormatter.format(date);\r\n        return dateStr;\r\n    }\r\n\r\n    ToHijriDateStruct(hijriDate: string, format: string): NgbDate  {\r\n\r\n      const hijriMomentDate =  momentHijri(hijriDate , format); // Parse a Hijri date based on format.\r\n\r\n      const day = hijriMomentDate.iDate();\r\n      const month = +hijriMomentDate.iMonth() + 1 ;\r\n      const year = hijriMomentDate.iYear();\r\n\r\n      const ngDate =  new NgbDate(+year, month, +day);\r\n      return ngDate;\r\n   }\r\n\r\n\r\n    ToGregorianDateStruct(gregorianDate: string, format: string): NgbDate {\r\n\r\n      const momentDate = moment(gregorianDate, format); // Parse a Gregorian date based on format.\r\n\r\n      const day = momentDate.date();\r\n      const month = +momentDate.month() + 1;\r\n      const year = momentDate.year();\r\n\r\n      const ngDate = new NgbDate(+year, +month, +day);\r\n      return ngDate;\r\n    }\r\n\r\n    ToHijri(date: NgbDateStruct): NgbDateStruct {\r\n        if (!date) {\r\n            return null;\r\n        }\r\n        const dateStr = this.ToString(date);\r\n\r\n        const momentDate = momentHijri(dateStr, 'D/M/YYYY');\r\n\r\n        const day = momentDate.iDate();\r\n        const month = +momentDate.iMonth() + 1 ;\r\n        const year = momentDate.iYear();\r\n\r\n        const ngDate =  new NgbDate(+year, month, +day);\r\n        return ngDate;\r\n    }\r\n\r\n    ToGregorian(date: NgbDateStruct) {\r\n        if (!date) {\r\n            return null;\r\n        }\r\n\r\n        const dateStr = this.ToString(date);\r\n\r\n        const momentDate = momentHijri(dateStr, 'iD/iM/iYYYY');\r\n\r\n        const day = momentDate.locale('en').format('D');\r\n        const month = momentDate.locale('en').format('M') ;\r\n        const year = momentDate.locale('en').format('Y');\r\n\r\n        const ngDate =  new NgbDate(+year, +month, +day);\r\n        return ngDate;\r\n    }\r\n\r\n    GetTodayHijri(): NgbDateStruct {\r\n\r\n      const todayHijri = momentHijri().locale('en').format('iYYYY/iM/iD');\r\n\r\n      return this.ToHijriDateStruct(todayHijri, 'iYYYY/iM/iD') ;\r\n\r\n    }\r\n\r\n    GetTodayGregorian(): NgbDateStruct {\r\n\r\n      const todayGregorian = moment().locale('en').format('YYYY/M/D');\r\n\r\n      return this.ToGregorianDateStruct(todayGregorian, 'YYYY/M/D') ;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxHijriGregorianDatepickerService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-ngx-hijri-gregorian-datepicker',\n  template: `\n    <p>\n      ngx-hijri-gregorian-datepicker works!\n    </p>\n  `,\n  styles: []\n})\nexport class NgxHijriGregorianDatepickerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport {NgbDateStruct, NgbDatepicker} from '@ng-bootstrap/ng-bootstrap';\nimport { DateType } from './consts';\nimport { DateFormatterService } from './date-formatter.service';\n\nimport * as momentjs from 'moment';\nconst moment = momentjs;\n\n\nimport * as moment_ from 'moment-hijri';\nimport { NgForm, ControlContainer } from '@angular/forms';\nconst momentHijri = moment_;\n\n\n@Component({\n  selector: 'hijri-gregorian-datepicker',\n  templateUrl: './hijri-gregorian-datepicker.component.html'\n})\nexport class HijriGregorianDatepickerComponent implements OnInit {\n\n  @ViewChild('d') datePicker: any;\n\n\n  @Input() selectedDateType: DateType;\n  @Input() selectedDate: NgbDateStruct;\n  @Output() selectedDateChange: EventEmitter<NgbDateStruct> = new EventEmitter();\n\n  @Input() label: string;\n  @Input() showLabel = true;\n\n\n  @Input() readonly = false;\n  @Input() isRequired = false;\n  @Input() disabled = false;\n\n  @Input() minHijri: NgbDateStruct;\n  @Input() maxHijri: NgbDateStruct;\n  @Input() minGreg: NgbDateStruct;\n  @Input() maxGreg: NgbDateStruct;\n\n  @Input() hijriLabel: string;\n  @Input() GregLabel: string;\n\n  @Input() placeHolder: string;\n\n  get DateType() {\n    return DateType;\n  }\n\n  constructor( private dateFormatterService: DateFormatterService) { }\n\n  ngOnInit() {\n    if (!this.selectedDateType) {\n      this.selectedDateType = DateType.Hijri;\n    }\n  }\n\n  close() {\n    this.datePicker.close();\n  }\n\n  clear() {\n    this.selectedDate = undefined;\n    this.close();\n    this.selectedDateChange.emit(null);\n  }\n  getSelectedDate(): string {\n\n    let formattedDate = this.dateFormatterService.ToString(this.selectedDate);\n\n    if (this.selectedDateType == DateType.Hijri) {\n      return momentHijri(formattedDate, 'iD/iM/iYYYY').locale('en').format();\n    }\n\n    if (this.selectedDateType == DateType.Gregorian) {\n      return moment(formattedDate, 'D/M/YYYY').locale('en').format();\n    }\n  }\n\n  dateSelected() {\n    this.selectedDateChange.emit(this.selectedDate);\n  }\n\n  hijriClick() {\n    if (this.selectedDateType == DateType.Hijri) {\n      return;\n    }\n    this.selectedDateType = DateType.Hijri;\n    //to hijri\n    this.selectedDate = this.dateFormatterService.ToHijri(this.selectedDate);\n    this.selectedDateChange.emit(this.selectedDate);\n  }\n  gregClick() {\n    if (this.selectedDateType == DateType.Gregorian) {\n      return;\n    }\n    this.selectedDateType = DateType.Gregorian;\n    //to Gregorian\n    this.selectedDate = this.dateFormatterService.ToGregorian(this.selectedDate);\n    this.selectedDateChange.emit(this.selectedDate);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nconst WEEKDAYS = ['Ø£Ø­Ø¯', 'Ø¥Ø«ÙÙÙ', 'Ø«ÙØ§Ø«Ø§Ø¡', 'Ø£Ø±Ø¨Ø¹Ø§Ø¡', 'Ø®ÙÙØ³', 'Ø¬ÙØ¹Ø©', 'Ø³Ø¨Øª'];\r\nconst MONTHS = ['ÙØ­Ø±Ù', 'ØµÙØ±', 'Ø±Ø¨ÙØ¹ Ø§ÙØ£ÙÙ', 'Ø±Ø¨ÙØ¹ Ø§ÙØ¢Ø®Ø±', 'Ø¬ÙØ§Ø¯Ù Ø§ÙØ£ÙÙÙ', 'Ø¬ÙØ§Ø¯Ù Ø§ÙØ¢Ø®Ø±Ø©', 'Ø±Ø¬Ø¨', 'Ø´Ø¹Ø¨Ø§Ù', 'Ø±ÙØ¶Ø§Ù', 'Ø´ÙØ§Ù',\r\n  'Ø°Ù Ø§ÙÙØ¹Ø¯Ø©', 'Ø°Ù Ø§ÙØ­Ø¬Ø©'];\r\n\r\n@Injectable()\r\nexport class IslamicI18n extends NgbDatepickerI18n {\r\n\r\n  getWeekdayShortName(weekday: number) {\r\n    return WEEKDAYS[weekday - 1];\r\n  }\r\n\r\n  getMonthShortName(month: number) {\r\n    return MONTHS[month - 1];\r\n  }\r\n\r\n  getMonthFullName(month: number) {\r\n    return MONTHS[month - 1];\r\n  }\r\n\r\n  getDayAriaLabel(date: NgbDateStruct): string {\r\n    return `${date.day}-${date.month}-${date.year}`;\r\n  }\r\n}\r\n","import { Component, OnInit, ViewEncapsulation, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { NgbCalendar, NgbCalendarIslamicUmalqura, NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { IslamicI18n } from '../IslamicI18n';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'hijri-date-picker',\n  templateUrl: './hijri-datepicker.component.html',\n  providers: [\n    { provide: NgbCalendar, useClass: NgbCalendarIslamicUmalqura },\n    { provide: NgbDatepickerI18n, useClass: IslamicI18n }\n  ],\n  styleUrls: [\n    './hijri-date-picker.component.css'\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class HijriDatepickerComponent {\n\n  @ViewChild('d') datePicker: any;\n\n  @Input() selectedDate: NgbDateStruct;\n  @Output() selectedDateChange: EventEmitter<NgbDateStruct> = new EventEmitter();\n\n  @Input() readonly = false;\n  @Input() isRequired = false;\n  @Input() disabled = false;\n  @Input() min: NgbDateStruct;\n  @Input() max: NgbDateStruct;\n  @Input() name: string;\n\n  @Input() placeHolder: string;\n\n  constructor() { }\n\n  changeDate() {\n    this.selectedDateChange.emit(this.selectedDate);\n  }\n\n  onBlur() {\n    if (!this.selectedDate) {\n      this.selectedDateChange.emit(null);\n    }\n  }\n\n  clear() {\n    this.selectedDate = undefined;\n    this.datePicker.close();\n    this.selectedDateChange.emit(null);\n  }\n\n}\n","import { NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class CustomNgbDateParserFormatter extends NgbDateParserFormatter {\r\n  datePipe = new DatePipe('en-US');\r\n  constructor() {\r\n    super();\r\n  }\r\n  format(date: NgbDateStruct): string {\r\n    if (date === null) {\r\n      return '';\r\n    }\r\n    try {\r\n      return this.datePipe.transform(new Date(date.year, date.month - 1, date.day), 'd/M/yyyy');\r\n    } catch (e) {\r\n      return '';\r\n    }\r\n  }\r\n  parse(value: string): NgbDateStruct {\r\n    let returnVal: NgbDateStruct;\r\n    if (!value) {\r\n      returnVal = null;\r\n    } else {\r\n      try {\r\n        let dateParts = this.datePipe.transform(value, 'M-d-y').split('-');\r\n        returnVal = { year: parseInt(dateParts[2]), month: parseInt(dateParts[0]), day: parseInt(dateParts[1]) };\r\n      } catch (e) {\r\n        returnVal = null;\r\n      }\r\n    }\r\n    return returnVal;\r\n  }\r\n}\r\n","import { Directive, Optional, SkipSelf } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\nexport function test(form: NgForm) {\n  return form;\n}\n\n@Directive({\n  selector: '[provideParentForm]',\n  providers: [\n    {\n      provide: ControlContainer,\n      useFactory:  test ,\n      deps: [[new Optional(), new SkipSelf(), NgForm]]\n    }\n]\n})\nexport class ProvideParentFormDirective {\n\n  constructor() { }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxHijriGregorianDatepickerComponent } from './ngx-hijri-gregorian-datepicker.component';\nimport { HijriGregorianDatepickerComponent } from './hijri-gregorian-datepicker/hijri-gregorian-datepicker.component';\nimport { HijriDatepickerComponent } from './hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgbModule, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport { DateFormatterService } from './hijri-gregorian-datepicker/date-formatter.service';\nimport { CustomNgbDateParserFormatter } from './hijri-gregorian-datepicker/CustomNgbDateParserFormatter';\nimport { ProvideParentFormDirective } from './hijri-gregorian-datepicker/provide-parent-form.directive';\n\n@NgModule({\n  declarations: [\n    NgxHijriGregorianDatepickerComponent,\n    HijriGregorianDatepickerComponent,\n    HijriDatepickerComponent,\n    ProvideParentFormDirective\n  ],\n  imports: [\n    CommonModule ,\n    ReactiveFormsModule,\n    FormsModule,\n    NgbModule\n  ],\n  providers: [\n    {provide: NgbDateParserFormatter, useClass: CustomNgbDateParserFormatter},\n    DateFormatterService\n  ],\n  exports: [ HijriGregorianDatepickerComponent, NgxHijriGregorianDatepickerComponent]\n})\nexport class NgxHijriGregorianDatepickerModule { }\n"],"names":["moment","momentHijri","tslib_1.__extends"],"mappings":"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"}
+{"version":3,"file":"ngx-hijri-gregorian-datepicker.js","sources":["ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/consts.ts","ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/date-formatter.service.ts","ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.service.ts","ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.component.ts","ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.ts","ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/IslamicI18n.ts","ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.ts","ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.ts","ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/provide-parent-form.directive.ts","ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.module.ts"],"names":["moment","momentHijri","tslib_1.__extends"],"mappings":"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AA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAGA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AA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","sourcesContent":["export class DateType {\r\n  public static Hijri = 1;\r\n  public static Gregorian  = 2;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgbDateStruct, NgbDateParserFormatter, NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport * as momentjs from 'moment';\r\nconst moment = momentjs;\r\n\r\n\r\nimport * as moment_ from 'moment-hijri';\r\nconst momentHijri = moment_;\r\n\r\n@Injectable()\r\nexport class DateFormatterService {\r\n\r\n  constructor(private parserFormatter: NgbDateParserFormatter) { }\r\n\r\n    ToString(date: NgbDateStruct): string {\r\n        const dateStr = this.parserFormatter.format(date);\r\n        return dateStr;\r\n    }\r\n\r\n    ToHijriDateStruct(hijriDate: string, format: string): NgbDate  {\r\n\r\n      const hijriMomentDate =  momentHijri(hijriDate , format); // Parse a Hijri date based on format.\r\n\r\n      const day = hijriMomentDate.iDate();\r\n      const month = +hijriMomentDate.iMonth() + 1 ;\r\n      const year = hijriMomentDate.iYear();\r\n\r\n      const ngDate =  new NgbDate(+year, month, +day);\r\n      return ngDate;\r\n   }\r\n\r\n\r\n    ToGregorianDateStruct(gregorianDate: string, format: string): NgbDate {\r\n\r\n      const momentDate = moment(gregorianDate, format); // Parse a Gregorian date based on format.\r\n\r\n      const day = momentDate.date();\r\n      const month = +momentDate.month() + 1;\r\n      const year = momentDate.year();\r\n\r\n      const ngDate = new NgbDate(+year, +month, +day);\r\n      return ngDate;\r\n    }\r\n\r\n    ToHijri(date: NgbDateStruct): NgbDateStruct {\r\n        if (!date) {\r\n            return null;\r\n        }\r\n        const dateStr = this.ToString(date);\r\n\r\n        const momentDate = momentHijri(dateStr, 'D/M/YYYY');\r\n\r\n        const day = momentDate.iDate();\r\n        const month = +momentDate.iMonth() + 1 ;\r\n        const year = momentDate.iYear();\r\n\r\n        const ngDate =  new NgbDate(+year, month, +day);\r\n        return ngDate;\r\n    }\r\n\r\n    ToGregorian(date: NgbDateStruct) {\r\n        if (!date) {\r\n            return null;\r\n        }\r\n\r\n        const dateStr = this.ToString(date);\r\n\r\n        const momentDate = momentHijri(dateStr, 'iD/iM/iYYYY');\r\n\r\n        const day = momentDate.locale('en').format('D');\r\n        const month = momentDate.locale('en').format('M') ;\r\n        const year = momentDate.locale('en').format('Y');\r\n\r\n        const ngDate =  new NgbDate(+year, +month, +day);\r\n        return ngDate;\r\n    }\r\n\r\n    GetTodayHijri(): NgbDateStruct {\r\n\r\n      const todayHijri = momentHijri().locale('en').format('iYYYY/iM/iD');\r\n\r\n      return this.ToHijriDateStruct(todayHijri, 'iYYYY/iM/iD') ;\r\n\r\n    }\r\n\r\n    GetTodayGregorian(): NgbDateStruct {\r\n\r\n      const todayGregorian = moment().locale('en').format('YYYY/M/D');\r\n\r\n      return this.ToGregorianDateStruct(todayGregorian, 'YYYY/M/D') ;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxHijriGregorianDatepickerService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-ngx-hijri-gregorian-datepicker',\n  template: `\n    <p>\n      ngx-hijri-gregorian-datepicker works!\n    </p>\n  `,\n  styles: []\n})\nexport class NgxHijriGregorianDatepickerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport {NgbDateStruct, NgbDatepicker} from '@ng-bootstrap/ng-bootstrap';\nimport { DateType } from './consts';\nimport { DateFormatterService } from './date-formatter.service';\n\nimport * as momentjs from 'moment';\nconst moment = momentjs;\n\n\nimport * as moment_ from 'moment-hijri';\nimport { NgForm, ControlContainer } from '@angular/forms';\nconst momentHijri = moment_;\n\n\n@Component({\n  selector: 'hijri-gregorian-datepicker',\n  templateUrl: './hijri-gregorian-datepicker.component.html'\n})\nexport class HijriGregorianDatepickerComponent implements OnInit {\n\n  @ViewChild('d') datePicker: any;\n\n\n  @Input() selectedDateType: DateType;\n  @Input() selectedDate: NgbDateStruct;\n  @Output() selectedDateChange: EventEmitter<NgbDateStruct> = new EventEmitter();\n\n  @Input() label: string;\n  @Input() showLabel = true;\n\n\n  @Input() readonly = false;\n  @Input() isRequired = false;\n  @Input() disabled = false;\n\n  @Input() minHijri: NgbDateStruct;\n  @Input() maxHijri: NgbDateStruct;\n  @Input() minGreg: NgbDateStruct;\n  @Input() maxGreg: NgbDateStruct;\n\n  @Input() hijriLabel: string;\n  @Input() GregLabel: string;\n\n  @Input() placeHolder: string;\n\n  get DateType() {\n    return DateType;\n  }\n\n  constructor( private dateFormatterService: DateFormatterService) { }\n\n  ngOnInit() {\n    if (!this.selectedDateType) {\n      this.selectedDateType = DateType.Hijri;\n    }\n  }\n\n  close() {\n    this.datePicker.close();\n  }\n\n  clear() {\n    this.selectedDate = undefined;\n    this.close();\n    this.selectedDateChange.emit(null);\n  }\n  getSelectedDate(): string {\n\n    let formattedDate = this.dateFormatterService.ToString(this.selectedDate);\n\n    if (this.selectedDateType == DateType.Hijri) {\n      return momentHijri(formattedDate, 'iD/iM/iYYYY').locale('en').format();\n    }\n\n    if (this.selectedDateType == DateType.Gregorian) {\n      return moment(formattedDate, 'D/M/YYYY').locale('en').format();\n    }\n  }\n\n  dateSelected() {\n    this.selectedDateChange.emit(this.selectedDate);\n  }\n\n  hijriClick() {\n    if (this.selectedDateType == DateType.Hijri) {\n      return;\n    }\n    this.selectedDateType = DateType.Hijri;\n    //to hijri\n    this.selectedDate = this.dateFormatterService.ToHijri(this.selectedDate);\n    this.selectedDateChange.emit(this.selectedDate);\n  }\n  gregClick() {\n    if (this.selectedDateType == DateType.Gregorian) {\n      return;\n    }\n    this.selectedDateType = DateType.Gregorian;\n    //to Gregorian\n    this.selectedDate = this.dateFormatterService.ToGregorian(this.selectedDate);\n    this.selectedDateChange.emit(this.selectedDate);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nconst WEEKDAYS = ['Ø£Ø­Ø¯', 'Ø¥Ø«ÙÙÙ', 'Ø«ÙØ§Ø«Ø§Ø¡', 'Ø£Ø±Ø¨Ø¹Ø§Ø¡', 'Ø®ÙÙØ³', 'Ø¬ÙØ¹Ø©', 'Ø³Ø¨Øª'];\r\nconst MONTHS = ['ÙØ­Ø±Ù', 'ØµÙØ±', 'Ø±Ø¨ÙØ¹ Ø§ÙØ£ÙÙ', 'Ø±Ø¨ÙØ¹ Ø§ÙØ¢Ø®Ø±', 'Ø¬ÙØ§Ø¯Ù Ø§ÙØ£ÙÙÙ', 'Ø¬ÙØ§Ø¯Ù Ø§ÙØ¢Ø®Ø±Ø©', 'Ø±Ø¬Ø¨', 'Ø´Ø¹Ø¨Ø§Ù', 'Ø±ÙØ¶Ø§Ù', 'Ø´ÙØ§Ù',\r\n  'Ø°Ù Ø§ÙÙØ¹Ø¯Ø©', 'Ø°Ù Ø§ÙØ­Ø¬Ø©'];\r\n\r\n@Injectable()\r\nexport class IslamicI18n extends NgbDatepickerI18n {\r\n\r\n  getWeekdayShortName(weekday: number) {\r\n    return WEEKDAYS[weekday - 1];\r\n  }\r\n\r\n  getMonthShortName(month: number) {\r\n    return MONTHS[month - 1];\r\n  }\r\n\r\n  getMonthFullName(month: number) {\r\n    return MONTHS[month - 1];\r\n  }\r\n\r\n  getDayAriaLabel(date: NgbDateStruct): string {\r\n    return `${date.day}-${date.month}-${date.year}`;\r\n  }\r\n}\r\n","import { Component, OnInit, ViewEncapsulation, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { NgbCalendar, NgbCalendarIslamicUmalqura, NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { IslamicI18n } from '../IslamicI18n';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'hijri-date-picker',\n  templateUrl: './hijri-datepicker.component.html',\n  providers: [\n    { provide: NgbCalendar, useClass: NgbCalendarIslamicUmalqura },\n    { provide: NgbDatepickerI18n, useClass: IslamicI18n }\n  ],\n  styleUrls: [\n    './hijri-date-picker.component.css'\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class HijriDatepickerComponent {\n\n  @ViewChild('d') datePicker: any;\n\n  @Input() selectedDate: NgbDateStruct;\n  @Output() selectedDateChange: EventEmitter<NgbDateStruct> = new EventEmitter();\n\n  @Input() readonly = false;\n  @Input() isRequired = false;\n  @Input() disabled = false;\n  @Input() min: NgbDateStruct;\n  @Input() max: NgbDateStruct;\n  @Input() name: string;\n\n  @Input() placeHolder: string;\n\n  constructor() { }\n\n  changeDate() {\n    this.selectedDateChange.emit(this.selectedDate);\n  }\n\n  onBlur() {\n    if (!this.selectedDate) {\n      this.selectedDateChange.emit(null);\n    }\n  }\n\n  clear() {\n    this.selectedDate = undefined;\n    this.datePicker.close();\n    this.selectedDateChange.emit(null);\n  }\n\n}\n","import { NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class CustomNgbDateParserFormatter extends NgbDateParserFormatter {\r\n  datePipe = new DatePipe('en-US');\r\n  constructor() {\r\n    super();\r\n  }\r\n  format(date: NgbDateStruct): string {\r\n    if (date === null) {\r\n      return '';\r\n    }\r\n    try {\r\n      return this.datePipe.transform(new Date(date.year, date.month - 1, date.day), 'd/M/yyyy');\r\n    } catch (e) {\r\n      return '';\r\n    }\r\n  }\r\n  parse(value: string): NgbDateStruct {\r\n    let returnVal: NgbDateStruct;\r\n    if (!value) {\r\n      returnVal = null;\r\n    } else {\r\n      try {\r\n        let dateParts = this.datePipe.transform(value, 'M-d-y').split('-');\r\n        returnVal = { year: parseInt(dateParts[2]), month: parseInt(dateParts[0]), day: parseInt(dateParts[1]) };\r\n      } catch (e) {\r\n        returnVal = null;\r\n      }\r\n    }\r\n    return returnVal;\r\n  }\r\n}\r\n","import { Directive, Optional, SkipSelf } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\nexport function test(form: NgForm) {\n  return form;\n}\n\n@Directive({\n  selector: '[provideParentForm]',\n  providers: [\n    {\n      provide: ControlContainer,\n      useFactory:  test ,\n      deps: [[new Optional(), new SkipSelf(), NgForm]]\n    }\n]\n})\nexport class ProvideParentFormDirective {\n\n  constructor() { }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxHijriGregorianDatepickerComponent } from './ngx-hijri-gregorian-datepicker.component';\nimport { HijriGregorianDatepickerComponent } from './hijri-gregorian-datepicker/hijri-gregorian-datepicker.component';\nimport { HijriDatepickerComponent } from './hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgbModule, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport { DateFormatterService } from './hijri-gregorian-datepicker/date-formatter.service';\nimport { CustomNgbDateParserFormatter } from './hijri-gregorian-datepicker/CustomNgbDateParserFormatter';\nimport { ProvideParentFormDirective } from './hijri-gregorian-datepicker/provide-parent-form.directive';\n\n@NgModule({\n  declarations: [\n    NgxHijriGregorianDatepickerComponent,\n    HijriGregorianDatepickerComponent,\n    HijriDatepickerComponent,\n    ProvideParentFormDirective\n  ],\n  imports: [\n    CommonModule ,\n    ReactiveFormsModule,\n    FormsModule,\n    NgbModule\n  ],\n  providers: [\n    {provide: NgbDateParserFormatter, useClass: CustomNgbDateParserFormatter},\n    DateFormatterService\n  ],\n  exports: [ HijriGregorianDatepickerComponent, NgxHijriGregorianDatepickerComponent]\n})\nexport class NgxHijriGregorianDatepickerModule { }\n"]}
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/fesm5/ngx-hijri-gregorian-datepicker.js.map.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/fesm5/ngx-hijri-gregorian-datepicker.js.map.__ivy_ngcc_bak
new file mode 100644
index 0000000..1365aa4
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/fesm5/ngx-hijri-gregorian-datepicker.js.map.__ivy_ngcc_bak
@@ -0,0 +1 @@
+{"version":3,"file":"ngx-hijri-gregorian-datepicker.js.map","sources":["ng://ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/consts.ts","ng://ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/date-formatter.service.ts","ng://ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.service.ts","ng://ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.component.ts","ng://ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.ts","ng://ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/IslamicI18n.ts","ng://ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.ts","ng://ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.ts","ng://ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/provide-parent-form.directive.ts","ng://ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.module.ts"],"sourcesContent":["export class DateType {\r\n  public static Hijri = 1;\r\n  public static Gregorian  = 2;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgbDateStruct, NgbDateParserFormatter, NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport * as momentjs from 'moment';\r\nconst moment = momentjs;\r\n\r\n\r\nimport * as moment_ from 'moment-hijri';\r\nconst momentHijri = moment_;\r\n\r\n@Injectable()\r\nexport class DateFormatterService {\r\n\r\n  constructor(private parserFormatter: NgbDateParserFormatter) { }\r\n\r\n    ToString(date: NgbDateStruct): string {\r\n        const dateStr = this.parserFormatter.format(date);\r\n        return dateStr;\r\n    }\r\n\r\n    ToHijriDateStruct(hijriDate: string, format: string): NgbDate  {\r\n\r\n      const hijriMomentDate =  momentHijri(hijriDate , format); // Parse a Hijri date based on format.\r\n\r\n      const day = hijriMomentDate.iDate();\r\n      const month = +hijriMomentDate.iMonth() + 1 ;\r\n      const year = hijriMomentDate.iYear();\r\n\r\n      const ngDate =  new NgbDate(+year, month, +day);\r\n      return ngDate;\r\n   }\r\n\r\n\r\n    ToGregorianDateStruct(gregorianDate: string, format: string): NgbDate {\r\n\r\n      const momentDate = moment(gregorianDate, format); // Parse a Gregorian date based on format.\r\n\r\n      const day = momentDate.date();\r\n      const month = +momentDate.month() + 1;\r\n      const year = momentDate.year();\r\n\r\n      const ngDate = new NgbDate(+year, +month, +day);\r\n      return ngDate;\r\n    }\r\n\r\n    ToHijri(date: NgbDateStruct): NgbDateStruct {\r\n        if (!date) {\r\n            return null;\r\n        }\r\n        const dateStr = this.ToString(date);\r\n\r\n        const momentDate = momentHijri(dateStr, 'D/M/YYYY');\r\n\r\n        const day = momentDate.iDate();\r\n        const month = +momentDate.iMonth() + 1 ;\r\n        const year = momentDate.iYear();\r\n\r\n        const ngDate =  new NgbDate(+year, month, +day);\r\n        return ngDate;\r\n    }\r\n\r\n    ToGregorian(date: NgbDateStruct) {\r\n        if (!date) {\r\n            return null;\r\n        }\r\n\r\n        const dateStr = this.ToString(date);\r\n\r\n        const momentDate = momentHijri(dateStr, 'iD/iM/iYYYY');\r\n\r\n        const day = momentDate.locale('en').format('D');\r\n        const month = momentDate.locale('en').format('M') ;\r\n        const year = momentDate.locale('en').format('Y');\r\n\r\n        const ngDate =  new NgbDate(+year, +month, +day);\r\n        return ngDate;\r\n    }\r\n\r\n    GetTodayHijri(): NgbDateStruct {\r\n\r\n      const todayHijri = momentHijri().locale('en').format('iYYYY/iM/iD');\r\n\r\n      return this.ToHijriDateStruct(todayHijri, 'iYYYY/iM/iD') ;\r\n\r\n    }\r\n\r\n    GetTodayGregorian(): NgbDateStruct {\r\n\r\n      const todayGregorian = moment().locale('en').format('YYYY/M/D');\r\n\r\n      return this.ToGregorianDateStruct(todayGregorian, 'YYYY/M/D') ;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxHijriGregorianDatepickerService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-ngx-hijri-gregorian-datepicker',\n  template: `\n    <p>\n      ngx-hijri-gregorian-datepicker works!\n    </p>\n  `,\n  styles: []\n})\nexport class NgxHijriGregorianDatepickerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport {NgbDateStruct, NgbDatepicker} from '@ng-bootstrap/ng-bootstrap';\nimport { DateType } from './consts';\nimport { DateFormatterService } from './date-formatter.service';\n\nimport * as momentjs from 'moment';\nconst moment = momentjs;\n\n\nimport * as moment_ from 'moment-hijri';\nimport { NgForm, ControlContainer } from '@angular/forms';\nconst momentHijri = moment_;\n\n\n@Component({\n  selector: 'hijri-gregorian-datepicker',\n  templateUrl: './hijri-gregorian-datepicker.component.html'\n})\nexport class HijriGregorianDatepickerComponent implements OnInit {\n\n  @ViewChild('d') datePicker: any;\n\n\n  @Input() selectedDateType: DateType;\n  @Input() selectedDate: NgbDateStruct;\n  @Output() selectedDateChange: EventEmitter<NgbDateStruct> = new EventEmitter();\n\n  @Input() label: string;\n  @Input() showLabel = true;\n\n\n  @Input() readonly = false;\n  @Input() isRequired = false;\n  @Input() disabled = false;\n\n  @Input() minHijri: NgbDateStruct;\n  @Input() maxHijri: NgbDateStruct;\n  @Input() minGreg: NgbDateStruct;\n  @Input() maxGreg: NgbDateStruct;\n\n  @Input() hijriLabel: string;\n  @Input() GregLabel: string;\n\n  @Input() placeHolder: string;\n\n  get DateType() {\n    return DateType;\n  }\n\n  constructor( private dateFormatterService: DateFormatterService) { }\n\n  ngOnInit() {\n    if (!this.selectedDateType) {\n      this.selectedDateType = DateType.Hijri;\n    }\n  }\n\n  close() {\n    this.datePicker.close();\n  }\n\n  clear() {\n    this.selectedDate = undefined;\n    this.close();\n    this.selectedDateChange.emit(null);\n  }\n  getSelectedDate(): string {\n\n    let formattedDate = this.dateFormatterService.ToString(this.selectedDate);\n\n    if (this.selectedDateType == DateType.Hijri) {\n      return momentHijri(formattedDate, 'iD/iM/iYYYY').locale('en').format();\n    }\n\n    if (this.selectedDateType == DateType.Gregorian) {\n      return moment(formattedDate, 'D/M/YYYY').locale('en').format();\n    }\n  }\n\n  dateSelected() {\n    this.selectedDateChange.emit(this.selectedDate);\n  }\n\n  hijriClick() {\n    if (this.selectedDateType == DateType.Hijri) {\n      return;\n    }\n    this.selectedDateType = DateType.Hijri;\n    //to hijri\n    this.selectedDate = this.dateFormatterService.ToHijri(this.selectedDate);\n    this.selectedDateChange.emit(this.selectedDate);\n  }\n  gregClick() {\n    if (this.selectedDateType == DateType.Gregorian) {\n      return;\n    }\n    this.selectedDateType = DateType.Gregorian;\n    //to Gregorian\n    this.selectedDate = this.dateFormatterService.ToGregorian(this.selectedDate);\n    this.selectedDateChange.emit(this.selectedDate);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nconst WEEKDAYS = ['Ø£Ø­Ø¯', 'Ø¥Ø«ÙÙÙ', 'Ø«ÙØ§Ø«Ø§Ø¡', 'Ø£Ø±Ø¨Ø¹Ø§Ø¡', 'Ø®ÙÙØ³', 'Ø¬ÙØ¹Ø©', 'Ø³Ø¨Øª'];\r\nconst MONTHS = ['ÙØ­Ø±Ù', 'ØµÙØ±', 'Ø±Ø¨ÙØ¹ Ø§ÙØ£ÙÙ', 'Ø±Ø¨ÙØ¹ Ø§ÙØ¢Ø®Ø±', 'Ø¬ÙØ§Ø¯Ù Ø§ÙØ£ÙÙÙ', 'Ø¬ÙØ§Ø¯Ù Ø§ÙØ¢Ø®Ø±Ø©', 'Ø±Ø¬Ø¨', 'Ø´Ø¹Ø¨Ø§Ù', 'Ø±ÙØ¶Ø§Ù', 'Ø´ÙØ§Ù',\r\n  'Ø°Ù Ø§ÙÙØ¹Ø¯Ø©', 'Ø°Ù Ø§ÙØ­Ø¬Ø©'];\r\n\r\n@Injectable()\r\nexport class IslamicI18n extends NgbDatepickerI18n {\r\n\r\n  getWeekdayShortName(weekday: number) {\r\n    return WEEKDAYS[weekday - 1];\r\n  }\r\n\r\n  getMonthShortName(month: number) {\r\n    return MONTHS[month - 1];\r\n  }\r\n\r\n  getMonthFullName(month: number) {\r\n    return MONTHS[month - 1];\r\n  }\r\n\r\n  getDayAriaLabel(date: NgbDateStruct): string {\r\n    return `${date.day}-${date.month}-${date.year}`;\r\n  }\r\n}\r\n","import { Component, OnInit, ViewEncapsulation, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { NgbCalendar, NgbCalendarIslamicUmalqura, NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { IslamicI18n } from '../IslamicI18n';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'hijri-date-picker',\n  templateUrl: './hijri-datepicker.component.html',\n  providers: [\n    { provide: NgbCalendar, useClass: NgbCalendarIslamicUmalqura },\n    { provide: NgbDatepickerI18n, useClass: IslamicI18n }\n  ],\n  styleUrls: [\n    './hijri-date-picker.component.css'\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class HijriDatepickerComponent {\n\n  @ViewChild('d') datePicker: any;\n\n  @Input() selectedDate: NgbDateStruct;\n  @Output() selectedDateChange: EventEmitter<NgbDateStruct> = new EventEmitter();\n\n  @Input() readonly = false;\n  @Input() isRequired = false;\n  @Input() disabled = false;\n  @Input() min: NgbDateStruct;\n  @Input() max: NgbDateStruct;\n  @Input() name: string;\n\n  @Input() placeHolder: string;\n\n  constructor() { }\n\n  changeDate() {\n    this.selectedDateChange.emit(this.selectedDate);\n  }\n\n  onBlur() {\n    if (!this.selectedDate) {\n      this.selectedDateChange.emit(null);\n    }\n  }\n\n  clear() {\n    this.selectedDate = undefined;\n    this.datePicker.close();\n    this.selectedDateChange.emit(null);\n  }\n\n}\n","import { NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class CustomNgbDateParserFormatter extends NgbDateParserFormatter {\r\n  datePipe = new DatePipe('en-US');\r\n  constructor() {\r\n    super();\r\n  }\r\n  format(date: NgbDateStruct): string {\r\n    if (date === null) {\r\n      return '';\r\n    }\r\n    try {\r\n      return this.datePipe.transform(new Date(date.year, date.month - 1, date.day), 'd/M/yyyy');\r\n    } catch (e) {\r\n      return '';\r\n    }\r\n  }\r\n  parse(value: string): NgbDateStruct {\r\n    let returnVal: NgbDateStruct;\r\n    if (!value) {\r\n      returnVal = null;\r\n    } else {\r\n      try {\r\n        let dateParts = this.datePipe.transform(value, 'M-d-y').split('-');\r\n        returnVal = { year: parseInt(dateParts[2]), month: parseInt(dateParts[0]), day: parseInt(dateParts[1]) };\r\n      } catch (e) {\r\n        returnVal = null;\r\n      }\r\n    }\r\n    return returnVal;\r\n  }\r\n}\r\n","import { Directive, Optional, SkipSelf } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\nexport function test(form: NgForm) {\n  return form;\n}\n\n@Directive({\n  selector: '[provideParentForm]',\n  providers: [\n    {\n      provide: ControlContainer,\n      useFactory:  test ,\n      deps: [[new Optional(), new SkipSelf(), NgForm]]\n    }\n]\n})\nexport class ProvideParentFormDirective {\n\n  constructor() { }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxHijriGregorianDatepickerComponent } from './ngx-hijri-gregorian-datepicker.component';\nimport { HijriGregorianDatepickerComponent } from './hijri-gregorian-datepicker/hijri-gregorian-datepicker.component';\nimport { HijriDatepickerComponent } from './hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgbModule, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport { DateFormatterService } from './hijri-gregorian-datepicker/date-formatter.service';\nimport { CustomNgbDateParserFormatter } from './hijri-gregorian-datepicker/CustomNgbDateParserFormatter';\nimport { ProvideParentFormDirective } from './hijri-gregorian-datepicker/provide-parent-form.directive';\n\n@NgModule({\n  declarations: [\n    NgxHijriGregorianDatepickerComponent,\n    HijriGregorianDatepickerComponent,\n    HijriDatepickerComponent,\n    ProvideParentFormDirective\n  ],\n  imports: [\n    CommonModule ,\n    ReactiveFormsModule,\n    FormsModule,\n    NgbModule\n  ],\n  providers: [\n    {provide: NgbDateParserFormatter, useClass: CustomNgbDateParserFormatter},\n    DateFormatterService\n  ],\n  exports: [ HijriGregorianDatepickerComponent, NgxHijriGregorianDatepickerComponent]\n})\nexport class NgxHijriGregorianDatepickerModule { }\n"],"names":["moment","momentHijri","tslib_1.__extends"],"mappings":"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"}
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.d.ts b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.d.ts
index abb2c47..e41fd8b 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.d.ts
+++ b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.d.ts
@@ -1,8 +1,13 @@
 import { NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';
 import { DatePipe } from '@angular/common';
+import * as ɵngcc0 from '@angular/core';
 export declare class CustomNgbDateParserFormatter extends NgbDateParserFormatter {
     datePipe: DatePipe;
     constructor();
     format(date: NgbDateStruct): string;
     parse(value: string): NgbDateStruct;
+    static ɵfac: ɵngcc0.ɵɵFactoryDef<CustomNgbDateParserFormatter, never>;
+    static ɵprov: ɵngcc0.ɵɵInjectableDef<CustomNgbDateParserFormatter>;
 }
+
+//# sourceMappingURL=CustomNgbDateParserFormatter.d.ts.map
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.d.ts.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.d.ts.__ivy_ngcc_bak
new file mode 100644
index 0000000..abb2c47
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.d.ts.__ivy_ngcc_bak
@@ -0,0 +1,8 @@
+import { NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';
+import { DatePipe } from '@angular/common';
+export declare class CustomNgbDateParserFormatter extends NgbDateParserFormatter {
+    datePipe: DatePipe;
+    constructor();
+    format(date: NgbDateStruct): string;
+    parse(value: string): NgbDateStruct;
+}
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.d.ts.map b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.d.ts.map
new file mode 100644
index 0000000..1a72b9b
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"CustomNgbDateParserFormatter.d.ts","sources":["CustomNgbDateParserFormatter.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DatePipe } from '@angular/common';\r\nexport declare class CustomNgbDateParserFormatter extends NgbDateParserFormatter {\r\n    datePipe: DatePipe;\r\n    constructor();\r\n    format(date: NgbDateStruct): string;\r\n    parse(value: string): NgbDateStruct;\r\n}\r\n"]}
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/IslamicI18n.d.ts b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/IslamicI18n.d.ts
index 472aa0e..6848036 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/IslamicI18n.d.ts
+++ b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/IslamicI18n.d.ts
@@ -1,7 +1,12 @@
 import { NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';
+import * as ɵngcc0 from '@angular/core';
 export declare class IslamicI18n extends NgbDatepickerI18n {
     getWeekdayShortName(weekday: number): string;
     getMonthShortName(month: number): string;
     getMonthFullName(month: number): string;
     getDayAriaLabel(date: NgbDateStruct): string;
+    static ɵfac: ɵngcc0.ɵɵFactoryDef<IslamicI18n, never>;
+    static ɵprov: ɵngcc0.ɵɵInjectableDef<IslamicI18n>;
 }
+
+//# sourceMappingURL=IslamicI18n.d.ts.map
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/IslamicI18n.d.ts.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/IslamicI18n.d.ts.__ivy_ngcc_bak
new file mode 100644
index 0000000..472aa0e
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/IslamicI18n.d.ts.__ivy_ngcc_bak
@@ -0,0 +1,7 @@
+import { NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';
+export declare class IslamicI18n extends NgbDatepickerI18n {
+    getWeekdayShortName(weekday: number): string;
+    getMonthShortName(month: number): string;
+    getMonthFullName(month: number): string;
+    getDayAriaLabel(date: NgbDateStruct): string;
+}
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/IslamicI18n.d.ts.map b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/IslamicI18n.d.ts.map
new file mode 100644
index 0000000..ea7a84d
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/IslamicI18n.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"IslamicI18n.d.ts","sources":["IslamicI18n.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nexport declare class IslamicI18n extends NgbDatepickerI18n {\r\n    getWeekdayShortName(weekday: number): string;\r\n    getMonthShortName(month: number): string;\r\n    getMonthFullName(month: number): string;\r\n    getDayAriaLabel(date: NgbDateStruct): string;\r\n}\r\n"]}
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/date-formatter.service.d.ts b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/date-formatter.service.d.ts
index 101a666..9ebf20e 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/date-formatter.service.d.ts
+++ b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/date-formatter.service.d.ts
@@ -1,4 +1,5 @@
 import { NgbDateStruct, NgbDateParserFormatter, NgbDate } from '@ng-bootstrap/ng-bootstrap';
+import * as ɵngcc0 from '@angular/core';
 export declare class DateFormatterService {
     private parserFormatter;
     constructor(parserFormatter: NgbDateParserFormatter);
@@ -9,4 +10,8 @@ export declare class DateFormatterService {
     ToGregorian(date: NgbDateStruct): NgbDate;
     GetTodayHijri(): NgbDateStruct;
     GetTodayGregorian(): NgbDateStruct;
+    static ɵfac: ɵngcc0.ɵɵFactoryDef<DateFormatterService, never>;
+    static ɵprov: ɵngcc0.ɵɵInjectableDef<DateFormatterService>;
 }
+
+//# sourceMappingURL=date-formatter.service.d.ts.map
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/date-formatter.service.d.ts.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/date-formatter.service.d.ts.__ivy_ngcc_bak
new file mode 100644
index 0000000..101a666
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/date-formatter.service.d.ts.__ivy_ngcc_bak
@@ -0,0 +1,12 @@
+import { NgbDateStruct, NgbDateParserFormatter, NgbDate } from '@ng-bootstrap/ng-bootstrap';
+export declare class DateFormatterService {
+    private parserFormatter;
+    constructor(parserFormatter: NgbDateParserFormatter);
+    ToString(date: NgbDateStruct): string;
+    ToHijriDateStruct(hijriDate: string, format: string): NgbDate;
+    ToGregorianDateStruct(gregorianDate: string, format: string): NgbDate;
+    ToHijri(date: NgbDateStruct): NgbDateStruct;
+    ToGregorian(date: NgbDateStruct): NgbDate;
+    GetTodayHijri(): NgbDateStruct;
+    GetTodayGregorian(): NgbDateStruct;
+}
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/date-formatter.service.d.ts.map b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/date-formatter.service.d.ts.map
new file mode 100644
index 0000000..97e09ab
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/date-formatter.service.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"date-formatter.service.d.ts","sources":["date-formatter.service.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { NgbDateStruct, NgbDateParserFormatter, NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\nexport declare class DateFormatterService {\r\n    private parserFormatter;\r\n    constructor(parserFormatter: NgbDateParserFormatter);\r\n    ToString(date: NgbDateStruct): string;\r\n    ToHijriDateStruct(hijriDate: string, format: string): NgbDate;\r\n    ToGregorianDateStruct(gregorianDate: string, format: string): NgbDate;\r\n    ToHijri(date: NgbDateStruct): NgbDateStruct;\r\n    ToGregorian(date: NgbDateStruct): NgbDate;\r\n    GetTodayHijri(): NgbDateStruct;\r\n    GetTodayGregorian(): NgbDateStruct;\r\n}\r\n"]}
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.d.ts b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.d.ts
index ebc82ad..82ad251 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.d.ts
+++ b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.d.ts
@@ -1,5 +1,6 @@
 import { EventEmitter } from '@angular/core';
 import { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';
+import * as ɵngcc0 from '@angular/core';
 export declare class HijriDatepickerComponent {
     datePicker: any;
     selectedDate: NgbDateStruct;
@@ -15,4 +16,8 @@ export declare class HijriDatepickerComponent {
     changeDate(): void;
     onBlur(): void;
     clear(): void;
+    static ɵfac: ɵngcc0.ɵɵFactoryDef<HijriDatepickerComponent, never>;
+    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<HijriDatepickerComponent, "hijri-date-picker", never, { "readonly": "readonly"; "isRequired": "isRequired"; "disabled": "disabled"; "selectedDate": "selectedDate"; "min": "min"; "max": "max"; "name": "name"; "placeHolder": "placeHolder"; }, { "selectedDateChange": "selectedDateChange"; }, never, never>;
 }
+
+//# sourceMappingURL=hijri-datepicker.component.d.ts.map
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.d.ts.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.d.ts.__ivy_ngcc_bak
new file mode 100644
index 0000000..ebc82ad
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.d.ts.__ivy_ngcc_bak
@@ -0,0 +1,18 @@
+import { EventEmitter } from '@angular/core';
+import { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';
+export declare class HijriDatepickerComponent {
+    datePicker: any;
+    selectedDate: NgbDateStruct;
+    selectedDateChange: EventEmitter<NgbDateStruct>;
+    readonly: boolean;
+    isRequired: boolean;
+    disabled: boolean;
+    min: NgbDateStruct;
+    max: NgbDateStruct;
+    name: string;
+    placeHolder: string;
+    constructor();
+    changeDate(): void;
+    onBlur(): void;
+    clear(): void;
+}
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.d.ts.map b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.d.ts.map
new file mode 100644
index 0000000..ac02003
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"hijri-datepicker.component.d.ts","sources":["hijri-datepicker.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter } from '@angular/core';\r\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nexport declare class HijriDatepickerComponent {\r\n    datePicker: any;\r\n    selectedDate: NgbDateStruct;\r\n    selectedDateChange: EventEmitter<NgbDateStruct>;\r\n    readonly: boolean;\r\n    isRequired: boolean;\r\n    disabled: boolean;\r\n    min: NgbDateStruct;\r\n    max: NgbDateStruct;\r\n    name: string;\r\n    placeHolder: string;\r\n    constructor();\r\n    changeDate(): void;\r\n    onBlur(): void;\r\n    clear(): void;\r\n}\r\n"]}
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.d.ts b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.d.ts
index d3e1886..d8c29f5 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.d.ts
+++ b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.d.ts
@@ -2,6 +2,7 @@ import { OnInit, EventEmitter } from '@angular/core';
 import { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';
 import { DateType } from './consts';
 import { DateFormatterService } from './date-formatter.service';
+import * as ɵngcc0 from '@angular/core';
 export declare class HijriGregorianDatepickerComponent implements OnInit {
     private dateFormatterService;
     datePicker: any;
@@ -29,4 +30,8 @@ export declare class HijriGregorianDatepickerComponent implements OnInit {
     dateSelected(): void;
     hijriClick(): void;
     gregClick(): void;
+    static ɵfac: ɵngcc0.ɵɵFactoryDef<HijriGregorianDatepickerComponent, never>;
+    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<HijriGregorianDatepickerComponent, "hijri-gregorian-datepicker", never, { "showLabel": "showLabel"; "readonly": "readonly"; "isRequired": "isRequired"; "disabled": "disabled"; "selectedDateType": "selectedDateType"; "selectedDate": "selectedDate"; "label": "label"; "minHijri": "minHijri"; "maxHijri": "maxHijri"; "minGreg": "minGreg"; "maxGreg": "maxGreg"; "hijriLabel": "hijriLabel"; "GregLabel": "GregLabel"; "placeHolder": "placeHolder"; }, { "selectedDateChange": "selectedDateChange"; }, never, never>;
 }
+
+//# sourceMappingURL=hijri-gregorian-datepicker.component.d.ts.map
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.d.ts.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.d.ts.__ivy_ngcc_bak
new file mode 100644
index 0000000..d3e1886
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.d.ts.__ivy_ngcc_bak
@@ -0,0 +1,32 @@
+import { OnInit, EventEmitter } from '@angular/core';
+import { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';
+import { DateType } from './consts';
+import { DateFormatterService } from './date-formatter.service';
+export declare class HijriGregorianDatepickerComponent implements OnInit {
+    private dateFormatterService;
+    datePicker: any;
+    selectedDateType: DateType;
+    selectedDate: NgbDateStruct;
+    selectedDateChange: EventEmitter<NgbDateStruct>;
+    label: string;
+    showLabel: boolean;
+    readonly: boolean;
+    isRequired: boolean;
+    disabled: boolean;
+    minHijri: NgbDateStruct;
+    maxHijri: NgbDateStruct;
+    minGreg: NgbDateStruct;
+    maxGreg: NgbDateStruct;
+    hijriLabel: string;
+    GregLabel: string;
+    placeHolder: string;
+    readonly DateType: typeof DateType;
+    constructor(dateFormatterService: DateFormatterService);
+    ngOnInit(): void;
+    close(): void;
+    clear(): void;
+    getSelectedDate(): string;
+    dateSelected(): void;
+    hijriClick(): void;
+    gregClick(): void;
+}
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.d.ts.map b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.d.ts.map
new file mode 100644
index 0000000..47660b5
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/hijri-gregorian-datepicker.component.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"hijri-gregorian-datepicker.component.d.ts","sources":["hijri-gregorian-datepicker.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, EventEmitter } from '@angular/core';\r\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DateType } from './consts';\r\nimport { DateFormatterService } from './date-formatter.service';\r\nexport declare class HijriGregorianDatepickerComponent implements OnInit {\r\n    private dateFormatterService;\r\n    datePicker: any;\r\n    selectedDateType: DateType;\r\n    selectedDate: NgbDateStruct;\r\n    selectedDateChange: EventEmitter<NgbDateStruct>;\r\n    label: string;\r\n    showLabel: boolean;\r\n    readonly: boolean;\r\n    isRequired: boolean;\r\n    disabled: boolean;\r\n    minHijri: NgbDateStruct;\r\n    maxHijri: NgbDateStruct;\r\n    minGreg: NgbDateStruct;\r\n    maxGreg: NgbDateStruct;\r\n    hijriLabel: string;\r\n    GregLabel: string;\r\n    placeHolder: string;\r\n    readonly DateType: typeof DateType;\r\n    constructor(dateFormatterService: DateFormatterService);\r\n    ngOnInit(): void;\r\n    close(): void;\r\n    clear(): void;\r\n    getSelectedDate(): string;\r\n    dateSelected(): void;\r\n    hijriClick(): void;\r\n    gregClick(): void;\r\n}\r\n"]}
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/provide-parent-form.directive.d.ts b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/provide-parent-form.directive.d.ts
index 1b06b8b..6fe0cbd 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/provide-parent-form.directive.d.ts
+++ b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/provide-parent-form.directive.d.ts
@@ -1,5 +1,10 @@
 import { NgForm } from '@angular/forms';
+import * as ɵngcc0 from '@angular/core';
 export declare function test(form: NgForm): NgForm;
 export declare class ProvideParentFormDirective {
     constructor();
+    static ɵfac: ɵngcc0.ɵɵFactoryDef<ProvideParentFormDirective, never>;
+    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ProvideParentFormDirective, "[provideParentForm]", never, {}, {}, never>;
 }
+
+//# sourceMappingURL=provide-parent-form.directive.d.ts.map
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/provide-parent-form.directive.d.ts.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/provide-parent-form.directive.d.ts.__ivy_ngcc_bak
new file mode 100644
index 0000000..1b06b8b
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/provide-parent-form.directive.d.ts.__ivy_ngcc_bak
@@ -0,0 +1,5 @@
+import { NgForm } from '@angular/forms';
+export declare function test(form: NgForm): NgForm;
+export declare class ProvideParentFormDirective {
+    constructor();
+}
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/provide-parent-form.directive.d.ts.map b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/provide-parent-form.directive.d.ts.map
new file mode 100644
index 0000000..4411f1a
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/lib/hijri-gregorian-datepicker/provide-parent-form.directive.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"provide-parent-form.directive.d.ts","sources":["provide-parent-form.directive.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;;;AACA","sourcesContent":["import { NgForm } from '@angular/forms';\r\nexport declare function test(form: NgForm): NgForm;\r\nexport declare class ProvideParentFormDirective {\r\n    constructor();\r\n}\r\n"]}
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.component.d.ts b/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.component.d.ts
index 6f6940f..deea14d 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.component.d.ts
+++ b/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.component.d.ts
@@ -1,5 +1,10 @@
 import { OnInit } from '@angular/core';
+import * as ɵngcc0 from '@angular/core';
 export declare class NgxHijriGregorianDatepickerComponent implements OnInit {
     constructor();
     ngOnInit(): void;
+    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxHijriGregorianDatepickerComponent, never>;
+    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgxHijriGregorianDatepickerComponent, "lib-ngx-hijri-gregorian-datepicker", never, {}, {}, never, never>;
 }
+
+//# sourceMappingURL=ngx-hijri-gregorian-datepicker.component.d.ts.map
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.component.d.ts.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.component.d.ts.__ivy_ngcc_bak
new file mode 100644
index 0000000..6f6940f
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.component.d.ts.__ivy_ngcc_bak
@@ -0,0 +1,5 @@
+import { OnInit } from '@angular/core';
+export declare class NgxHijriGregorianDatepickerComponent implements OnInit {
+    constructor();
+    ngOnInit(): void;
+}
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.component.d.ts.map b/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.component.d.ts.map
new file mode 100644
index 0000000..fd39f42
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.component.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"ngx-hijri-gregorian-datepicker.component.d.ts","sources":["ngx-hijri-gregorian-datepicker.component.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit } from '@angular/core';\r\nexport declare class NgxHijriGregorianDatepickerComponent implements OnInit {\r\n    constructor();\r\n    ngOnInit(): void;\r\n}\r\n"]}
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.module.d.ts b/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.module.d.ts
index 02ca911..eba5f4e 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.module.d.ts
+++ b/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.module.d.ts
@@ -1,2 +1,14 @@
+import * as ɵngcc0 from '@angular/core';
+import * as ɵngcc1 from './ngx-hijri-gregorian-datepicker.component';
+import * as ɵngcc2 from './hijri-gregorian-datepicker/hijri-gregorian-datepicker.component';
+import * as ɵngcc3 from './hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component';
+import * as ɵngcc4 from './hijri-gregorian-datepicker/provide-parent-form.directive';
+import * as ɵngcc5 from '@angular/common';
+import * as ɵngcc6 from '@angular/forms';
+import * as ɵngcc7 from '@ng-bootstrap/ng-bootstrap';
 export declare class NgxHijriGregorianDatepickerModule {
+    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<NgxHijriGregorianDatepickerModule, [typeof ɵngcc1.NgxHijriGregorianDatepickerComponent, typeof ɵngcc2.HijriGregorianDatepickerComponent, typeof ɵngcc3.HijriDatepickerComponent, typeof ɵngcc4.ProvideParentFormDirective], [typeof ɵngcc5.CommonModule, typeof ɵngcc6.ReactiveFormsModule, typeof ɵngcc6.FormsModule, typeof ɵngcc7.NgbModule], [typeof ɵngcc2.HijriGregorianDatepickerComponent, typeof ɵngcc1.NgxHijriGregorianDatepickerComponent]>;
+    static ɵinj: ɵngcc0.ɵɵInjectorDef<NgxHijriGregorianDatepickerModule>;
 }
+
+//# sourceMappingURL=ngx-hijri-gregorian-datepicker.module.d.ts.map
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.module.d.ts.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.module.d.ts.__ivy_ngcc_bak
new file mode 100644
index 0000000..02ca911
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.module.d.ts.__ivy_ngcc_bak
@@ -0,0 +1,2 @@
+export declare class NgxHijriGregorianDatepickerModule {
+}
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.module.d.ts.map b/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.module.d.ts.map
new file mode 100644
index 0000000..4e9f66d
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.module.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"ngx-hijri-gregorian-datepicker.module.d.ts","sources":["ngx-hijri-gregorian-datepicker.module.d.ts"],"names":[],"mappings":";;;;;;;;AAAA;;;AACA","sourcesContent":["export declare class NgxHijriGregorianDatepickerModule {\r\n}\r\n"]}
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.service.d.ts b/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.service.d.ts
index 681fb85..b260121 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.service.d.ts
+++ b/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.service.d.ts
@@ -1,3 +1,8 @@
+import * as ɵngcc0 from '@angular/core';
 export declare class NgxHijriGregorianDatepickerService {
     constructor();
+    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxHijriGregorianDatepickerService, never>;
+    static ɵprov: ɵngcc0.ɵɵInjectableDef<NgxHijriGregorianDatepickerService>;
 }
+
+//# sourceMappingURL=ngx-hijri-gregorian-datepicker.service.d.ts.map
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.service.d.ts.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.service.d.ts.__ivy_ngcc_bak
new file mode 100644
index 0000000..681fb85
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.service.d.ts.__ivy_ngcc_bak
@@ -0,0 +1,3 @@
+export declare class NgxHijriGregorianDatepickerService {
+    constructor();
+}
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.service.d.ts.map b/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.service.d.ts.map
new file mode 100644
index 0000000..1f18021
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/lib/ngx-hijri-gregorian-datepicker.service.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"ngx-hijri-gregorian-datepicker.service.d.ts","sources":["ngx-hijri-gregorian-datepicker.service.d.ts"],"names":[],"mappings":";AAAA;AACA;;;AACA","sourcesContent":["export declare class NgxHijriGregorianDatepickerService {\r\n    constructor();\r\n}\r\n"]}
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/ngx-hijri-gregorian-datepicker.d.ts b/node_modules/ngx-hijri-gregorian-datepicker/ngx-hijri-gregorian-datepicker.d.ts
index ec30275..5de6855 100644
--- a/node_modules/ngx-hijri-gregorian-datepicker/ngx-hijri-gregorian-datepicker.d.ts
+++ b/node_modules/ngx-hijri-gregorian-datepicker/ngx-hijri-gregorian-datepicker.d.ts
@@ -6,3 +6,5 @@ export { CustomNgbDateParserFormatter as ɵe } from './lib/hijri-gregorian-datep
 export { IslamicI18n as ɵb } from './lib/hijri-gregorian-datepicker/IslamicI18n';
 export { HijriDatepickerComponent as ɵa } from './lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component';
 export { ProvideParentFormDirective as ɵd, test as ɵc } from './lib/hijri-gregorian-datepicker/provide-parent-form.directive';
+
+//# sourceMappingURL=ngx-hijri-gregorian-datepicker.d.ts.map
\ No newline at end of file
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/ngx-hijri-gregorian-datepicker.d.ts.__ivy_ngcc_bak b/node_modules/ngx-hijri-gregorian-datepicker/ngx-hijri-gregorian-datepicker.d.ts.__ivy_ngcc_bak
new file mode 100644
index 0000000..ec30275
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/ngx-hijri-gregorian-datepicker.d.ts.__ivy_ngcc_bak
@@ -0,0 +1,8 @@
+/**
+ * Generated bundle index. Do not edit.
+ */
+export * from './public-api';
+export { CustomNgbDateParserFormatter as ɵe } from './lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter';
+export { IslamicI18n as ɵb } from './lib/hijri-gregorian-datepicker/IslamicI18n';
+export { HijriDatepickerComponent as ɵa } from './lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component';
+export { ProvideParentFormDirective as ɵd, test as ɵc } from './lib/hijri-gregorian-datepicker/provide-parent-form.directive';
diff --git a/node_modules/ngx-hijri-gregorian-datepicker/ngx-hijri-gregorian-datepicker.d.ts.map b/node_modules/ngx-hijri-gregorian-datepicker/ngx-hijri-gregorian-datepicker.d.ts.map
new file mode 100644
index 0000000..3414d6f
--- /dev/null
+++ b/node_modules/ngx-hijri-gregorian-datepicker/ngx-hijri-gregorian-datepicker.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"ngx-hijri-gregorian-datepicker.d.ts","sources":["ngx-hijri-gregorian-datepicker.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/**\r\n * Generated bundle index. Do not edit.\r\n */\r\nexport * from './public-api';\r\nexport { CustomNgbDateParserFormatter as ɵe } from './lib/hijri-gregorian-datepicker/CustomNgbDateParserFormatter';\r\nexport { IslamicI18n as ɵb } from './lib/hijri-gregorian-datepicker/IslamicI18n';\r\nexport { HijriDatepickerComponent as ɵa } from './lib/hijri-gregorian-datepicker/hijri-datepicker/hijri-datepicker.component';\r\nexport { ProvideParentFormDirective as ɵd, test as ɵc } from './lib/hijri-gregorian-datepicker/provide-parent-form.directive';\r\n"]}
\ No newline at end of file
